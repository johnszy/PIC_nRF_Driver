

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Tue Nov 21 11:48:08 2023

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F1619
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    30                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2,group=3
    34                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	text36,local,class=CODE,merge=1,delta=2
    52                           	psect	text37,local,class=CODE,merge=1,delta=2
    53                           	psect	text38,local,class=CODE,merge=1,delta=2
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    55                           	dabs	1,0x7E,2
    56  0000                     
    57                           ; Version 2.20
    58                           ; Generated 12/02/2020 GMT
    59                           ; 
    60                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC16F1619 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91  0000                     	;# 
    92  0001                     	;# 
    93  0002                     	;# 
    94  0003                     	;# 
    95  0004                     	;# 
    96  0005                     	;# 
    97  0006                     	;# 
    98  0007                     	;# 
    99  0008                     	;# 
   100  0009                     	;# 
   101  000A                     	;# 
   102  000B                     	;# 
   103  000C                     	;# 
   104  000D                     	;# 
   105  000E                     	;# 
   106  0010                     	;# 
   107  0011                     	;# 
   108  0012                     	;# 
   109  0013                     	;# 
   110  0014                     	;# 
   111  0015                     	;# 
   112  0016                     	;# 
   113  0016                     	;# 
   114  0017                     	;# 
   115  0018                     	;# 
   116  0019                     	;# 
   117  001A                     	;# 
   118  001A                     	;# 
   119  001B                     	;# 
   120  001B                     	;# 
   121  001C                     	;# 
   122  001D                     	;# 
   123  001E                     	;# 
   124  001F                     	;# 
   125  008C                     	;# 
   126  008D                     	;# 
   127  008E                     	;# 
   128  0090                     	;# 
   129  0091                     	;# 
   130  0092                     	;# 
   131  0093                     	;# 
   132  0094                     	;# 
   133  0095                     	;# 
   134  0096                     	;# 
   135  0098                     	;# 
   136  0099                     	;# 
   137  009A                     	;# 
   138  009B                     	;# 
   139  009B                     	;# 
   140  009C                     	;# 
   141  009D                     	;# 
   142  009E                     	;# 
   143  009F                     	;# 
   144  010C                     	;# 
   145  010D                     	;# 
   146  010E                     	;# 
   147  0111                     	;# 
   148  0112                     	;# 
   149  0113                     	;# 
   150  0114                     	;# 
   151  0115                     	;# 
   152  0116                     	;# 
   153  0117                     	;# 
   154  0118                     	;# 
   155  0119                     	;# 
   156  011C                     	;# 
   157  018C                     	;# 
   158  018D                     	;# 
   159  018E                     	;# 
   160  0191                     	;# 
   161  0191                     	;# 
   162  0192                     	;# 
   163  0193                     	;# 
   164  0193                     	;# 
   165  0194                     	;# 
   166  0195                     	;# 
   167  0196                     	;# 
   168  0197                     	;# 
   169  0199                     	;# 
   170  0199                     	;# 
   171  0199                     	;# 
   172  019A                     	;# 
   173  019A                     	;# 
   174  019A                     	;# 
   175  019B                     	;# 
   176  019B                     	;# 
   177  019B                     	;# 
   178  019B                     	;# 
   179  019B                     	;# 
   180  019C                     	;# 
   181  019C                     	;# 
   182  019C                     	;# 
   183  019D                     	;# 
   184  019D                     	;# 
   185  019D                     	;# 
   186  019E                     	;# 
   187  019E                     	;# 
   188  019E                     	;# 
   189  019F                     	;# 
   190  019F                     	;# 
   191  019F                     	;# 
   192  019F                     	;# 
   193  019F                     	;# 
   194  020C                     	;# 
   195  020D                     	;# 
   196  020E                     	;# 
   197  0211                     	;# 
   198  0211                     	;# 
   199  0212                     	;# 
   200  0212                     	;# 
   201  0213                     	;# 
   202  0213                     	;# 
   203  0214                     	;# 
   204  0214                     	;# 
   205  0215                     	;# 
   206  0215                     	;# 
   207  0215                     	;# 
   208  0215                     	;# 
   209  0216                     	;# 
   210  0216                     	;# 
   211  0217                     	;# 
   212  0217                     	;# 
   213  028C                     	;# 
   214  028D                     	;# 
   215  028E                     	;# 
   216  0291                     	;# 
   217  0291                     	;# 
   218  0292                     	;# 
   219  0293                     	;# 
   220  0294                     	;# 
   221  0298                     	;# 
   222  0298                     	;# 
   223  0299                     	;# 
   224  029A                     	;# 
   225  029B                     	;# 
   226  029E                     	;# 
   227  030C                     	;# 
   228  030D                     	;# 
   229  030E                     	;# 
   230  038C                     	;# 
   231  038D                     	;# 
   232  038E                     	;# 
   233  0391                     	;# 
   234  0392                     	;# 
   235  0393                     	;# 
   236  0394                     	;# 
   237  0395                     	;# 
   238  0396                     	;# 
   239  0397                     	;# 
   240  0398                     	;# 
   241  0399                     	;# 
   242  040E                     	;# 
   243  0413                     	;# 
   244  0413                     	;# 
   245  0414                     	;# 
   246  0414                     	;# 
   247  0415                     	;# 
   248  0416                     	;# 
   249  0417                     	;# 
   250  0418                     	;# 
   251  041A                     	;# 
   252  041A                     	;# 
   253  041B                     	;# 
   254  041B                     	;# 
   255  041C                     	;# 
   256  041D                     	;# 
   257  041E                     	;# 
   258  041F                     	;# 
   259  0493                     	;# 
   260  0494                     	;# 
   261  0495                     	;# 
   262  0496                     	;# 
   263  049A                     	;# 
   264  049B                     	;# 
   265  049C                     	;# 
   266  049D                     	;# 
   267  058C                     	;# 
   268  058C                     	;# 
   269  058D                     	;# 
   270  058E                     	;# 
   271  058E                     	;# 
   272  058F                     	;# 
   273  0590                     	;# 
   274  0590                     	;# 
   275  0591                     	;# 
   276  0592                     	;# 
   277  0592                     	;# 
   278  0593                     	;# 
   279  0594                     	;# 
   280  0594                     	;# 
   281  0595                     	;# 
   282  0596                     	;# 
   283  0596                     	;# 
   284  0597                     	;# 
   285  0598                     	;# 
   286  0599                     	;# 
   287  059A                     	;# 
   288  059B                     	;# 
   289  059B                     	;# 
   290  059C                     	;# 
   291  059D                     	;# 
   292  060C                     	;# 
   293  060C                     	;# 
   294  060D                     	;# 
   295  060E                     	;# 
   296  060F                     	;# 
   297  060F                     	;# 
   298  0610                     	;# 
   299  0611                     	;# 
   300  0612                     	;# 
   301  0613                     	;# 
   302  0614                     	;# 
   303  0617                     	;# 
   304  0617                     	;# 
   305  0618                     	;# 
   306  0619                     	;# 
   307  061A                     	;# 
   308  061A                     	;# 
   309  061B                     	;# 
   310  061C                     	;# 
   311  0691                     	;# 
   312  0692                     	;# 
   313  0693                     	;# 
   314  0694                     	;# 
   315  0695                     	;# 
   316  0696                     	;# 
   317  0697                     	;# 
   318  0699                     	;# 
   319  069A                     	;# 
   320  0711                     	;# 
   321  0712                     	;# 
   322  0713                     	;# 
   323  0714                     	;# 
   324  0715                     	;# 
   325  0718                     	;# 
   326  0718                     	;# 
   327  0719                     	;# 
   328  071A                     	;# 
   329  071A                     	;# 
   330  071B                     	;# 
   331  071C                     	;# 
   332  071D                     	;# 
   333  0791                     	;# 
   334  0791                     	;# 
   335  0792                     	;# 
   336  0793                     	;# 
   337  0793                     	;# 
   338  0794                     	;# 
   339  0795                     	;# 
   340  0795                     	;# 
   341  0796                     	;# 
   342  0797                     	;# 
   343  0797                     	;# 
   344  0798                     	;# 
   345  0799                     	;# 
   346  079A                     	;# 
   347  080C                     	;# 
   348  080C                     	;# 
   349  080D                     	;# 
   350  080E                     	;# 
   351  080E                     	;# 
   352  080F                     	;# 
   353  0810                     	;# 
   354  0810                     	;# 
   355  0811                     	;# 
   356  0812                     	;# 
   357  0812                     	;# 
   358  0813                     	;# 
   359  0814                     	;# 
   360  0815                     	;# 
   361  0816                     	;# 
   362  0817                     	;# 
   363  0818                     	;# 
   364  0819                     	;# 
   365  081A                     	;# 
   366  081A                     	;# 
   367  081B                     	;# 
   368  081C                     	;# 
   369  081C                     	;# 
   370  081D                     	;# 
   371  088C                     	;# 
   372  088D                     	;# 
   373  088E                     	;# 
   374  088F                     	;# 
   375  088F                     	;# 
   376  0890                     	;# 
   377  0891                     	;# 
   378  0892                     	;# 
   379  0893                     	;# 
   380  0893                     	;# 
   381  0894                     	;# 
   382  0895                     	;# 
   383  0896                     	;# 
   384  0897                     	;# 
   385  0897                     	;# 
   386  0898                     	;# 
   387  0899                     	;# 
   388  0D8C                     	;# 
   389  0D8C                     	;# 
   390  0D8D                     	;# 
   391  0D8E                     	;# 
   392  0D8F                     	;# 
   393  0D8F                     	;# 
   394  0D90                     	;# 
   395  0D91                     	;# 
   396  0D92                     	;# 
   397  0D92                     	;# 
   398  0D93                     	;# 
   399  0D94                     	;# 
   400  0D95                     	;# 
   401  0D95                     	;# 
   402  0D96                     	;# 
   403  0D97                     	;# 
   404  0D98                     	;# 
   405  0D99                     	;# 
   406  0D9A                     	;# 
   407  0D9B                     	;# 
   408  0D9C                     	;# 
   409  0D9D                     	;# 
   410  0D9E                     	;# 
   411  0D9E                     	;# 
   412  0D9F                     	;# 
   413  0DA0                     	;# 
   414  0DA1                     	;# 
   415  0DA1                     	;# 
   416  0DA2                     	;# 
   417  0DA3                     	;# 
   418  0DA4                     	;# 
   419  0DA4                     	;# 
   420  0DA5                     	;# 
   421  0DA6                     	;# 
   422  0DA7                     	;# 
   423  0DA7                     	;# 
   424  0DA8                     	;# 
   425  0DA9                     	;# 
   426  0DAA                     	;# 
   427  0DAB                     	;# 
   428  0DAC                     	;# 
   429  0DAD                     	;# 
   430  0DAE                     	;# 
   431  0DAF                     	;# 
   432  0E0F                     	;# 
   433  0E10                     	;# 
   434  0E11                     	;# 
   435  0E12                     	;# 
   436  0E13                     	;# 
   437  0E14                     	;# 
   438  0E15                     	;# 
   439  0E16                     	;# 
   440  0E17                     	;# 
   441  0E18                     	;# 
   442  0E19                     	;# 
   443  0E1A                     	;# 
   444  0E1B                     	;# 
   445  0E1C                     	;# 
   446  0E1D                     	;# 
   447  0E1E                     	;# 
   448  0E1F                     	;# 
   449  0E20                     	;# 
   450  0E21                     	;# 
   451  0E22                     	;# 
   452  0E23                     	;# 
   453  0E24                     	;# 
   454  0E25                     	;# 
   455  0E26                     	;# 
   456  0E27                     	;# 
   457  0E28                     	;# 
   458  0E29                     	;# 
   459  0E2A                     	;# 
   460  0E2B                     	;# 
   461  0E2C                     	;# 
   462  0E2D                     	;# 
   463  0E2E                     	;# 
   464  0E90                     	;# 
   465  0E91                     	;# 
   466  0E92                     	;# 
   467  0E94                     	;# 
   468  0E95                     	;# 
   469  0E9C                     	;# 
   470  0E9D                     	;# 
   471  0E9E                     	;# 
   472  0E9F                     	;# 
   473  0EA0                     	;# 
   474  0EA1                     	;# 
   475  0EA2                     	;# 
   476  0EA3                     	;# 
   477  0EA4                     	;# 
   478  0EA5                     	;# 
   479  0EA6                     	;# 
   480  0EA7                     	;# 
   481  0F0F                     	;# 
   482  0F10                     	;# 
   483  0F11                     	;# 
   484  0F12                     	;# 
   485  0F13                     	;# 
   486  0F14                     	;# 
   487  0F15                     	;# 
   488  0F16                     	;# 
   489  0F17                     	;# 
   490  0F18                     	;# 
   491  0F19                     	;# 
   492  0F1A                     	;# 
   493  0F1B                     	;# 
   494  0F1C                     	;# 
   495  0F1D                     	;# 
   496  0F1E                     	;# 
   497  0F1F                     	;# 
   498  0F20                     	;# 
   499  0F21                     	;# 
   500  0F22                     	;# 
   501  0F23                     	;# 
   502  0F24                     	;# 
   503  0F25                     	;# 
   504  0F26                     	;# 
   505  0F27                     	;# 
   506  0F28                     	;# 
   507  0F29                     	;# 
   508  0F2A                     	;# 
   509  0F2B                     	;# 
   510  0F2C                     	;# 
   511  0F2D                     	;# 
   512  0F2E                     	;# 
   513  0F2F                     	;# 
   514  0F30                     	;# 
   515  0F31                     	;# 
   516  0F32                     	;# 
   517  0F33                     	;# 
   518  0F34                     	;# 
   519  0F35                     	;# 
   520  0F36                     	;# 
   521  0F37                     	;# 
   522  0FE4                     	;# 
   523  0FE5                     	;# 
   524  0FE6                     	;# 
   525  0FE7                     	;# 
   526  0FE8                     	;# 
   527  0FE9                     	;# 
   528  0FEA                     	;# 
   529  0FEB                     	;# 
   530  0FED                     	;# 
   531  0FEE                     	;# 
   532  0FEF                     	;# 
   533  0000                     	;# 
   534  0001                     	;# 
   535  0002                     	;# 
   536  0003                     	;# 
   537  0004                     	;# 
   538  0005                     	;# 
   539  0006                     	;# 
   540  0007                     	;# 
   541  0008                     	;# 
   542  0009                     	;# 
   543  000A                     	;# 
   544  000B                     	;# 
   545  000C                     	;# 
   546  000D                     	;# 
   547  000E                     	;# 
   548  0010                     	;# 
   549  0011                     	;# 
   550  0012                     	;# 
   551  0013                     	;# 
   552  0014                     	;# 
   553  0015                     	;# 
   554  0016                     	;# 
   555  0016                     	;# 
   556  0017                     	;# 
   557  0018                     	;# 
   558  0019                     	;# 
   559  001A                     	;# 
   560  001A                     	;# 
   561  001B                     	;# 
   562  001B                     	;# 
   563  001C                     	;# 
   564  001D                     	;# 
   565  001E                     	;# 
   566  001F                     	;# 
   567  008C                     	;# 
   568  008D                     	;# 
   569  008E                     	;# 
   570  0090                     	;# 
   571  0091                     	;# 
   572  0092                     	;# 
   573  0093                     	;# 
   574  0094                     	;# 
   575  0095                     	;# 
   576  0096                     	;# 
   577  0098                     	;# 
   578  0099                     	;# 
   579  009A                     	;# 
   580  009B                     	;# 
   581  009B                     	;# 
   582  009C                     	;# 
   583  009D                     	;# 
   584  009E                     	;# 
   585  009F                     	;# 
   586  010C                     	;# 
   587  010D                     	;# 
   588  010E                     	;# 
   589  0111                     	;# 
   590  0112                     	;# 
   591  0113                     	;# 
   592  0114                     	;# 
   593  0115                     	;# 
   594  0116                     	;# 
   595  0117                     	;# 
   596  0118                     	;# 
   597  0119                     	;# 
   598  011C                     	;# 
   599  018C                     	;# 
   600  018D                     	;# 
   601  018E                     	;# 
   602  0191                     	;# 
   603  0191                     	;# 
   604  0192                     	;# 
   605  0193                     	;# 
   606  0193                     	;# 
   607  0194                     	;# 
   608  0195                     	;# 
   609  0196                     	;# 
   610  0197                     	;# 
   611  0199                     	;# 
   612  0199                     	;# 
   613  0199                     	;# 
   614  019A                     	;# 
   615  019A                     	;# 
   616  019A                     	;# 
   617  019B                     	;# 
   618  019B                     	;# 
   619  019B                     	;# 
   620  019B                     	;# 
   621  019B                     	;# 
   622  019C                     	;# 
   623  019C                     	;# 
   624  019C                     	;# 
   625  019D                     	;# 
   626  019D                     	;# 
   627  019D                     	;# 
   628  019E                     	;# 
   629  019E                     	;# 
   630  019E                     	;# 
   631  019F                     	;# 
   632  019F                     	;# 
   633  019F                     	;# 
   634  019F                     	;# 
   635  019F                     	;# 
   636  020C                     	;# 
   637  020D                     	;# 
   638  020E                     	;# 
   639  0211                     	;# 
   640  0211                     	;# 
   641  0212                     	;# 
   642  0212                     	;# 
   643  0213                     	;# 
   644  0213                     	;# 
   645  0214                     	;# 
   646  0214                     	;# 
   647  0215                     	;# 
   648  0215                     	;# 
   649  0215                     	;# 
   650  0215                     	;# 
   651  0216                     	;# 
   652  0216                     	;# 
   653  0217                     	;# 
   654  0217                     	;# 
   655  028C                     	;# 
   656  028D                     	;# 
   657  028E                     	;# 
   658  0291                     	;# 
   659  0291                     	;# 
   660  0292                     	;# 
   661  0293                     	;# 
   662  0294                     	;# 
   663  0298                     	;# 
   664  0298                     	;# 
   665  0299                     	;# 
   666  029A                     	;# 
   667  029B                     	;# 
   668  029E                     	;# 
   669  030C                     	;# 
   670  030D                     	;# 
   671  030E                     	;# 
   672  038C                     	;# 
   673  038D                     	;# 
   674  038E                     	;# 
   675  0391                     	;# 
   676  0392                     	;# 
   677  0393                     	;# 
   678  0394                     	;# 
   679  0395                     	;# 
   680  0396                     	;# 
   681  0397                     	;# 
   682  0398                     	;# 
   683  0399                     	;# 
   684  040E                     	;# 
   685  0413                     	;# 
   686  0413                     	;# 
   687  0414                     	;# 
   688  0414                     	;# 
   689  0415                     	;# 
   690  0416                     	;# 
   691  0417                     	;# 
   692  0418                     	;# 
   693  041A                     	;# 
   694  041A                     	;# 
   695  041B                     	;# 
   696  041B                     	;# 
   697  041C                     	;# 
   698  041D                     	;# 
   699  041E                     	;# 
   700  041F                     	;# 
   701  0493                     	;# 
   702  0494                     	;# 
   703  0495                     	;# 
   704  0496                     	;# 
   705  049A                     	;# 
   706  049B                     	;# 
   707  049C                     	;# 
   708  049D                     	;# 
   709  058C                     	;# 
   710  058C                     	;# 
   711  058D                     	;# 
   712  058E                     	;# 
   713  058E                     	;# 
   714  058F                     	;# 
   715  0590                     	;# 
   716  0590                     	;# 
   717  0591                     	;# 
   718  0592                     	;# 
   719  0592                     	;# 
   720  0593                     	;# 
   721  0594                     	;# 
   722  0594                     	;# 
   723  0595                     	;# 
   724  0596                     	;# 
   725  0596                     	;# 
   726  0597                     	;# 
   727  0598                     	;# 
   728  0599                     	;# 
   729  059A                     	;# 
   730  059B                     	;# 
   731  059B                     	;# 
   732  059C                     	;# 
   733  059D                     	;# 
   734  060C                     	;# 
   735  060C                     	;# 
   736  060D                     	;# 
   737  060E                     	;# 
   738  060F                     	;# 
   739  060F                     	;# 
   740  0610                     	;# 
   741  0611                     	;# 
   742  0612                     	;# 
   743  0613                     	;# 
   744  0614                     	;# 
   745  0617                     	;# 
   746  0617                     	;# 
   747  0618                     	;# 
   748  0619                     	;# 
   749  061A                     	;# 
   750  061A                     	;# 
   751  061B                     	;# 
   752  061C                     	;# 
   753  0691                     	;# 
   754  0692                     	;# 
   755  0693                     	;# 
   756  0694                     	;# 
   757  0695                     	;# 
   758  0696                     	;# 
   759  0697                     	;# 
   760  0699                     	;# 
   761  069A                     	;# 
   762  0711                     	;# 
   763  0712                     	;# 
   764  0713                     	;# 
   765  0714                     	;# 
   766  0715                     	;# 
   767  0718                     	;# 
   768  0718                     	;# 
   769  0719                     	;# 
   770  071A                     	;# 
   771  071A                     	;# 
   772  071B                     	;# 
   773  071C                     	;# 
   774  071D                     	;# 
   775  0791                     	;# 
   776  0791                     	;# 
   777  0792                     	;# 
   778  0793                     	;# 
   779  0793                     	;# 
   780  0794                     	;# 
   781  0795                     	;# 
   782  0795                     	;# 
   783  0796                     	;# 
   784  0797                     	;# 
   785  0797                     	;# 
   786  0798                     	;# 
   787  0799                     	;# 
   788  079A                     	;# 
   789  080C                     	;# 
   790  080C                     	;# 
   791  080D                     	;# 
   792  080E                     	;# 
   793  080E                     	;# 
   794  080F                     	;# 
   795  0810                     	;# 
   796  0810                     	;# 
   797  0811                     	;# 
   798  0812                     	;# 
   799  0812                     	;# 
   800  0813                     	;# 
   801  0814                     	;# 
   802  0815                     	;# 
   803  0816                     	;# 
   804  0817                     	;# 
   805  0818                     	;# 
   806  0819                     	;# 
   807  081A                     	;# 
   808  081A                     	;# 
   809  081B                     	;# 
   810  081C                     	;# 
   811  081C                     	;# 
   812  081D                     	;# 
   813  088C                     	;# 
   814  088D                     	;# 
   815  088E                     	;# 
   816  088F                     	;# 
   817  088F                     	;# 
   818  0890                     	;# 
   819  0891                     	;# 
   820  0892                     	;# 
   821  0893                     	;# 
   822  0893                     	;# 
   823  0894                     	;# 
   824  0895                     	;# 
   825  0896                     	;# 
   826  0897                     	;# 
   827  0897                     	;# 
   828  0898                     	;# 
   829  0899                     	;# 
   830  0D8C                     	;# 
   831  0D8C                     	;# 
   832  0D8D                     	;# 
   833  0D8E                     	;# 
   834  0D8F                     	;# 
   835  0D8F                     	;# 
   836  0D90                     	;# 
   837  0D91                     	;# 
   838  0D92                     	;# 
   839  0D92                     	;# 
   840  0D93                     	;# 
   841  0D94                     	;# 
   842  0D95                     	;# 
   843  0D95                     	;# 
   844  0D96                     	;# 
   845  0D97                     	;# 
   846  0D98                     	;# 
   847  0D99                     	;# 
   848  0D9A                     	;# 
   849  0D9B                     	;# 
   850  0D9C                     	;# 
   851  0D9D                     	;# 
   852  0D9E                     	;# 
   853  0D9E                     	;# 
   854  0D9F                     	;# 
   855  0DA0                     	;# 
   856  0DA1                     	;# 
   857  0DA1                     	;# 
   858  0DA2                     	;# 
   859  0DA3                     	;# 
   860  0DA4                     	;# 
   861  0DA4                     	;# 
   862  0DA5                     	;# 
   863  0DA6                     	;# 
   864  0DA7                     	;# 
   865  0DA7                     	;# 
   866  0DA8                     	;# 
   867  0DA9                     	;# 
   868  0DAA                     	;# 
   869  0DAB                     	;# 
   870  0DAC                     	;# 
   871  0DAD                     	;# 
   872  0DAE                     	;# 
   873  0DAF                     	;# 
   874  0E0F                     	;# 
   875  0E10                     	;# 
   876  0E11                     	;# 
   877  0E12                     	;# 
   878  0E13                     	;# 
   879  0E14                     	;# 
   880  0E15                     	;# 
   881  0E16                     	;# 
   882  0E17                     	;# 
   883  0E18                     	;# 
   884  0E19                     	;# 
   885  0E1A                     	;# 
   886  0E1B                     	;# 
   887  0E1C                     	;# 
   888  0E1D                     	;# 
   889  0E1E                     	;# 
   890  0E1F                     	;# 
   891  0E20                     	;# 
   892  0E21                     	;# 
   893  0E22                     	;# 
   894  0E23                     	;# 
   895  0E24                     	;# 
   896  0E25                     	;# 
   897  0E26                     	;# 
   898  0E27                     	;# 
   899  0E28                     	;# 
   900  0E29                     	;# 
   901  0E2A                     	;# 
   902  0E2B                     	;# 
   903  0E2C                     	;# 
   904  0E2D                     	;# 
   905  0E2E                     	;# 
   906  0E90                     	;# 
   907  0E91                     	;# 
   908  0E92                     	;# 
   909  0E94                     	;# 
   910  0E95                     	;# 
   911  0E9C                     	;# 
   912  0E9D                     	;# 
   913  0E9E                     	;# 
   914  0E9F                     	;# 
   915  0EA0                     	;# 
   916  0EA1                     	;# 
   917  0EA2                     	;# 
   918  0EA3                     	;# 
   919  0EA4                     	;# 
   920  0EA5                     	;# 
   921  0EA6                     	;# 
   922  0EA7                     	;# 
   923  0F0F                     	;# 
   924  0F10                     	;# 
   925  0F11                     	;# 
   926  0F12                     	;# 
   927  0F13                     	;# 
   928  0F14                     	;# 
   929  0F15                     	;# 
   930  0F16                     	;# 
   931  0F17                     	;# 
   932  0F18                     	;# 
   933  0F19                     	;# 
   934  0F1A                     	;# 
   935  0F1B                     	;# 
   936  0F1C                     	;# 
   937  0F1D                     	;# 
   938  0F1E                     	;# 
   939  0F1F                     	;# 
   940  0F20                     	;# 
   941  0F21                     	;# 
   942  0F22                     	;# 
   943  0F23                     	;# 
   944  0F24                     	;# 
   945  0F25                     	;# 
   946  0F26                     	;# 
   947  0F27                     	;# 
   948  0F28                     	;# 
   949  0F29                     	;# 
   950  0F2A                     	;# 
   951  0F2B                     	;# 
   952  0F2C                     	;# 
   953  0F2D                     	;# 
   954  0F2E                     	;# 
   955  0F2F                     	;# 
   956  0F30                     	;# 
   957  0F31                     	;# 
   958  0F32                     	;# 
   959  0F33                     	;# 
   960  0F34                     	;# 
   961  0F35                     	;# 
   962  0F36                     	;# 
   963  0F37                     	;# 
   964  0FE4                     	;# 
   965  0FE5                     	;# 
   966  0FE6                     	;# 
   967  0FE7                     	;# 
   968  0FE8                     	;# 
   969  0FE9                     	;# 
   970  0FEA                     	;# 
   971  0FEB                     	;# 
   972  0FED                     	;# 
   973  0FEE                     	;# 
   974  0FEF                     	;# 
   975  0000                     	;# 
   976  0001                     	;# 
   977  0002                     	;# 
   978  0003                     	;# 
   979  0004                     	;# 
   980  0005                     	;# 
   981  0006                     	;# 
   982  0007                     	;# 
   983  0008                     	;# 
   984  0009                     	;# 
   985  000A                     	;# 
   986  000B                     	;# 
   987  000C                     	;# 
   988  000D                     	;# 
   989  000E                     	;# 
   990  0010                     	;# 
   991  0011                     	;# 
   992  0012                     	;# 
   993  0013                     	;# 
   994  0014                     	;# 
   995  0015                     	;# 
   996  0016                     	;# 
   997  0016                     	;# 
   998  0017                     	;# 
   999  0018                     	;# 
  1000  0019                     	;# 
  1001  001A                     	;# 
  1002  001A                     	;# 
  1003  001B                     	;# 
  1004  001B                     	;# 
  1005  001C                     	;# 
  1006  001D                     	;# 
  1007  001E                     	;# 
  1008  001F                     	;# 
  1009  008C                     	;# 
  1010  008D                     	;# 
  1011  008E                     	;# 
  1012  0090                     	;# 
  1013  0091                     	;# 
  1014  0092                     	;# 
  1015  0093                     	;# 
  1016  0094                     	;# 
  1017  0095                     	;# 
  1018  0096                     	;# 
  1019  0098                     	;# 
  1020  0099                     	;# 
  1021  009A                     	;# 
  1022  009B                     	;# 
  1023  009B                     	;# 
  1024  009C                     	;# 
  1025  009D                     	;# 
  1026  009E                     	;# 
  1027  009F                     	;# 
  1028  010C                     	;# 
  1029  010D                     	;# 
  1030  010E                     	;# 
  1031  0111                     	;# 
  1032  0112                     	;# 
  1033  0113                     	;# 
  1034  0114                     	;# 
  1035  0115                     	;# 
  1036  0116                     	;# 
  1037  0117                     	;# 
  1038  0118                     	;# 
  1039  0119                     	;# 
  1040  011C                     	;# 
  1041  018C                     	;# 
  1042  018D                     	;# 
  1043  018E                     	;# 
  1044  0191                     	;# 
  1045  0191                     	;# 
  1046  0192                     	;# 
  1047  0193                     	;# 
  1048  0193                     	;# 
  1049  0194                     	;# 
  1050  0195                     	;# 
  1051  0196                     	;# 
  1052  0197                     	;# 
  1053  0199                     	;# 
  1054  0199                     	;# 
  1055  0199                     	;# 
  1056  019A                     	;# 
  1057  019A                     	;# 
  1058  019A                     	;# 
  1059  019B                     	;# 
  1060  019B                     	;# 
  1061  019B                     	;# 
  1062  019B                     	;# 
  1063  019B                     	;# 
  1064  019C                     	;# 
  1065  019C                     	;# 
  1066  019C                     	;# 
  1067  019D                     	;# 
  1068  019D                     	;# 
  1069  019D                     	;# 
  1070  019E                     	;# 
  1071  019E                     	;# 
  1072  019E                     	;# 
  1073  019F                     	;# 
  1074  019F                     	;# 
  1075  019F                     	;# 
  1076  019F                     	;# 
  1077  019F                     	;# 
  1078  020C                     	;# 
  1079  020D                     	;# 
  1080  020E                     	;# 
  1081  0211                     	;# 
  1082  0211                     	;# 
  1083  0212                     	;# 
  1084  0212                     	;# 
  1085  0213                     	;# 
  1086  0213                     	;# 
  1087  0214                     	;# 
  1088  0214                     	;# 
  1089  0215                     	;# 
  1090  0215                     	;# 
  1091  0215                     	;# 
  1092  0215                     	;# 
  1093  0216                     	;# 
  1094  0216                     	;# 
  1095  0217                     	;# 
  1096  0217                     	;# 
  1097  028C                     	;# 
  1098  028D                     	;# 
  1099  028E                     	;# 
  1100  0291                     	;# 
  1101  0291                     	;# 
  1102  0292                     	;# 
  1103  0293                     	;# 
  1104  0294                     	;# 
  1105  0298                     	;# 
  1106  0298                     	;# 
  1107  0299                     	;# 
  1108  029A                     	;# 
  1109  029B                     	;# 
  1110  029E                     	;# 
  1111  030C                     	;# 
  1112  030D                     	;# 
  1113  030E                     	;# 
  1114  038C                     	;# 
  1115  038D                     	;# 
  1116  038E                     	;# 
  1117  0391                     	;# 
  1118  0392                     	;# 
  1119  0393                     	;# 
  1120  0394                     	;# 
  1121  0395                     	;# 
  1122  0396                     	;# 
  1123  0397                     	;# 
  1124  0398                     	;# 
  1125  0399                     	;# 
  1126  040E                     	;# 
  1127  0413                     	;# 
  1128  0413                     	;# 
  1129  0414                     	;# 
  1130  0414                     	;# 
  1131  0415                     	;# 
  1132  0416                     	;# 
  1133  0417                     	;# 
  1134  0418                     	;# 
  1135  041A                     	;# 
  1136  041A                     	;# 
  1137  041B                     	;# 
  1138  041B                     	;# 
  1139  041C                     	;# 
  1140  041D                     	;# 
  1141  041E                     	;# 
  1142  041F                     	;# 
  1143  0493                     	;# 
  1144  0494                     	;# 
  1145  0495                     	;# 
  1146  0496                     	;# 
  1147  049A                     	;# 
  1148  049B                     	;# 
  1149  049C                     	;# 
  1150  049D                     	;# 
  1151  058C                     	;# 
  1152  058C                     	;# 
  1153  058D                     	;# 
  1154  058E                     	;# 
  1155  058E                     	;# 
  1156  058F                     	;# 
  1157  0590                     	;# 
  1158  0590                     	;# 
  1159  0591                     	;# 
  1160  0592                     	;# 
  1161  0592                     	;# 
  1162  0593                     	;# 
  1163  0594                     	;# 
  1164  0594                     	;# 
  1165  0595                     	;# 
  1166  0596                     	;# 
  1167  0596                     	;# 
  1168  0597                     	;# 
  1169  0598                     	;# 
  1170  0599                     	;# 
  1171  059A                     	;# 
  1172  059B                     	;# 
  1173  059B                     	;# 
  1174  059C                     	;# 
  1175  059D                     	;# 
  1176  060C                     	;# 
  1177  060C                     	;# 
  1178  060D                     	;# 
  1179  060E                     	;# 
  1180  060F                     	;# 
  1181  060F                     	;# 
  1182  0610                     	;# 
  1183  0611                     	;# 
  1184  0612                     	;# 
  1185  0613                     	;# 
  1186  0614                     	;# 
  1187  0617                     	;# 
  1188  0617                     	;# 
  1189  0618                     	;# 
  1190  0619                     	;# 
  1191  061A                     	;# 
  1192  061A                     	;# 
  1193  061B                     	;# 
  1194  061C                     	;# 
  1195  0691                     	;# 
  1196  0692                     	;# 
  1197  0693                     	;# 
  1198  0694                     	;# 
  1199  0695                     	;# 
  1200  0696                     	;# 
  1201  0697                     	;# 
  1202  0699                     	;# 
  1203  069A                     	;# 
  1204  0711                     	;# 
  1205  0712                     	;# 
  1206  0713                     	;# 
  1207  0714                     	;# 
  1208  0715                     	;# 
  1209  0718                     	;# 
  1210  0718                     	;# 
  1211  0719                     	;# 
  1212  071A                     	;# 
  1213  071A                     	;# 
  1214  071B                     	;# 
  1215  071C                     	;# 
  1216  071D                     	;# 
  1217  0791                     	;# 
  1218  0791                     	;# 
  1219  0792                     	;# 
  1220  0793                     	;# 
  1221  0793                     	;# 
  1222  0794                     	;# 
  1223  0795                     	;# 
  1224  0795                     	;# 
  1225  0796                     	;# 
  1226  0797                     	;# 
  1227  0797                     	;# 
  1228  0798                     	;# 
  1229  0799                     	;# 
  1230  079A                     	;# 
  1231  080C                     	;# 
  1232  080C                     	;# 
  1233  080D                     	;# 
  1234  080E                     	;# 
  1235  080E                     	;# 
  1236  080F                     	;# 
  1237  0810                     	;# 
  1238  0810                     	;# 
  1239  0811                     	;# 
  1240  0812                     	;# 
  1241  0812                     	;# 
  1242  0813                     	;# 
  1243  0814                     	;# 
  1244  0815                     	;# 
  1245  0816                     	;# 
  1246  0817                     	;# 
  1247  0818                     	;# 
  1248  0819                     	;# 
  1249  081A                     	;# 
  1250  081A                     	;# 
  1251  081B                     	;# 
  1252  081C                     	;# 
  1253  081C                     	;# 
  1254  081D                     	;# 
  1255  088C                     	;# 
  1256  088D                     	;# 
  1257  088E                     	;# 
  1258  088F                     	;# 
  1259  088F                     	;# 
  1260  0890                     	;# 
  1261  0891                     	;# 
  1262  0892                     	;# 
  1263  0893                     	;# 
  1264  0893                     	;# 
  1265  0894                     	;# 
  1266  0895                     	;# 
  1267  0896                     	;# 
  1268  0897                     	;# 
  1269  0897                     	;# 
  1270  0898                     	;# 
  1271  0899                     	;# 
  1272  0D8C                     	;# 
  1273  0D8C                     	;# 
  1274  0D8D                     	;# 
  1275  0D8E                     	;# 
  1276  0D8F                     	;# 
  1277  0D8F                     	;# 
  1278  0D90                     	;# 
  1279  0D91                     	;# 
  1280  0D92                     	;# 
  1281  0D92                     	;# 
  1282  0D93                     	;# 
  1283  0D94                     	;# 
  1284  0D95                     	;# 
  1285  0D95                     	;# 
  1286  0D96                     	;# 
  1287  0D97                     	;# 
  1288  0D98                     	;# 
  1289  0D99                     	;# 
  1290  0D9A                     	;# 
  1291  0D9B                     	;# 
  1292  0D9C                     	;# 
  1293  0D9D                     	;# 
  1294  0D9E                     	;# 
  1295  0D9E                     	;# 
  1296  0D9F                     	;# 
  1297  0DA0                     	;# 
  1298  0DA1                     	;# 
  1299  0DA1                     	;# 
  1300  0DA2                     	;# 
  1301  0DA3                     	;# 
  1302  0DA4                     	;# 
  1303  0DA4                     	;# 
  1304  0DA5                     	;# 
  1305  0DA6                     	;# 
  1306  0DA7                     	;# 
  1307  0DA7                     	;# 
  1308  0DA8                     	;# 
  1309  0DA9                     	;# 
  1310  0DAA                     	;# 
  1311  0DAB                     	;# 
  1312  0DAC                     	;# 
  1313  0DAD                     	;# 
  1314  0DAE                     	;# 
  1315  0DAF                     	;# 
  1316  0E0F                     	;# 
  1317  0E10                     	;# 
  1318  0E11                     	;# 
  1319  0E12                     	;# 
  1320  0E13                     	;# 
  1321  0E14                     	;# 
  1322  0E15                     	;# 
  1323  0E16                     	;# 
  1324  0E17                     	;# 
  1325  0E18                     	;# 
  1326  0E19                     	;# 
  1327  0E1A                     	;# 
  1328  0E1B                     	;# 
  1329  0E1C                     	;# 
  1330  0E1D                     	;# 
  1331  0E1E                     	;# 
  1332  0E1F                     	;# 
  1333  0E20                     	;# 
  1334  0E21                     	;# 
  1335  0E22                     	;# 
  1336  0E23                     	;# 
  1337  0E24                     	;# 
  1338  0E25                     	;# 
  1339  0E26                     	;# 
  1340  0E27                     	;# 
  1341  0E28                     	;# 
  1342  0E29                     	;# 
  1343  0E2A                     	;# 
  1344  0E2B                     	;# 
  1345  0E2C                     	;# 
  1346  0E2D                     	;# 
  1347  0E2E                     	;# 
  1348  0E90                     	;# 
  1349  0E91                     	;# 
  1350  0E92                     	;# 
  1351  0E94                     	;# 
  1352  0E95                     	;# 
  1353  0E9C                     	;# 
  1354  0E9D                     	;# 
  1355  0E9E                     	;# 
  1356  0E9F                     	;# 
  1357  0EA0                     	;# 
  1358  0EA1                     	;# 
  1359  0EA2                     	;# 
  1360  0EA3                     	;# 
  1361  0EA4                     	;# 
  1362  0EA5                     	;# 
  1363  0EA6                     	;# 
  1364  0EA7                     	;# 
  1365  0F0F                     	;# 
  1366  0F10                     	;# 
  1367  0F11                     	;# 
  1368  0F12                     	;# 
  1369  0F13                     	;# 
  1370  0F14                     	;# 
  1371  0F15                     	;# 
  1372  0F16                     	;# 
  1373  0F17                     	;# 
  1374  0F18                     	;# 
  1375  0F19                     	;# 
  1376  0F1A                     	;# 
  1377  0F1B                     	;# 
  1378  0F1C                     	;# 
  1379  0F1D                     	;# 
  1380  0F1E                     	;# 
  1381  0F1F                     	;# 
  1382  0F20                     	;# 
  1383  0F21                     	;# 
  1384  0F22                     	;# 
  1385  0F23                     	;# 
  1386  0F24                     	;# 
  1387  0F25                     	;# 
  1388  0F26                     	;# 
  1389  0F27                     	;# 
  1390  0F28                     	;# 
  1391  0F29                     	;# 
  1392  0F2A                     	;# 
  1393  0F2B                     	;# 
  1394  0F2C                     	;# 
  1395  0F2D                     	;# 
  1396  0F2E                     	;# 
  1397  0F2F                     	;# 
  1398  0F30                     	;# 
  1399  0F31                     	;# 
  1400  0F32                     	;# 
  1401  0F33                     	;# 
  1402  0F34                     	;# 
  1403  0F35                     	;# 
  1404  0F36                     	;# 
  1405  0F37                     	;# 
  1406  0FE4                     	;# 
  1407  0FE5                     	;# 
  1408  0FE6                     	;# 
  1409  0FE7                     	;# 
  1410  0FE8                     	;# 
  1411  0FE9                     	;# 
  1412  0FEA                     	;# 
  1413  0FEB                     	;# 
  1414  0FED                     	;# 
  1415  0FEE                     	;# 
  1416  0FEF                     	;# 
  1417  0000                     	;# 
  1418  0001                     	;# 
  1419  0002                     	;# 
  1420  0003                     	;# 
  1421  0004                     	;# 
  1422  0005                     	;# 
  1423  0006                     	;# 
  1424  0007                     	;# 
  1425  0008                     	;# 
  1426  0009                     	;# 
  1427  000A                     	;# 
  1428  000B                     	;# 
  1429  000C                     	;# 
  1430  000D                     	;# 
  1431  000E                     	;# 
  1432  0010                     	;# 
  1433  0011                     	;# 
  1434  0012                     	;# 
  1435  0013                     	;# 
  1436  0014                     	;# 
  1437  0015                     	;# 
  1438  0016                     	;# 
  1439  0016                     	;# 
  1440  0017                     	;# 
  1441  0018                     	;# 
  1442  0019                     	;# 
  1443  001A                     	;# 
  1444  001A                     	;# 
  1445  001B                     	;# 
  1446  001B                     	;# 
  1447  001C                     	;# 
  1448  001D                     	;# 
  1449  001E                     	;# 
  1450  001F                     	;# 
  1451  008C                     	;# 
  1452  008D                     	;# 
  1453  008E                     	;# 
  1454  0090                     	;# 
  1455  0091                     	;# 
  1456  0092                     	;# 
  1457  0093                     	;# 
  1458  0094                     	;# 
  1459  0095                     	;# 
  1460  0096                     	;# 
  1461  0098                     	;# 
  1462  0099                     	;# 
  1463  009A                     	;# 
  1464  009B                     	;# 
  1465  009B                     	;# 
  1466  009C                     	;# 
  1467  009D                     	;# 
  1468  009E                     	;# 
  1469  009F                     	;# 
  1470  010C                     	;# 
  1471  010D                     	;# 
  1472  010E                     	;# 
  1473  0111                     	;# 
  1474  0112                     	;# 
  1475  0113                     	;# 
  1476  0114                     	;# 
  1477  0115                     	;# 
  1478  0116                     	;# 
  1479  0117                     	;# 
  1480  0118                     	;# 
  1481  0119                     	;# 
  1482  011C                     	;# 
  1483  018C                     	;# 
  1484  018D                     	;# 
  1485  018E                     	;# 
  1486  0191                     	;# 
  1487  0191                     	;# 
  1488  0192                     	;# 
  1489  0193                     	;# 
  1490  0193                     	;# 
  1491  0194                     	;# 
  1492  0195                     	;# 
  1493  0196                     	;# 
  1494  0197                     	;# 
  1495  0199                     	;# 
  1496  0199                     	;# 
  1497  0199                     	;# 
  1498  019A                     	;# 
  1499  019A                     	;# 
  1500  019A                     	;# 
  1501  019B                     	;# 
  1502  019B                     	;# 
  1503  019B                     	;# 
  1504  019B                     	;# 
  1505  019B                     	;# 
  1506  019C                     	;# 
  1507  019C                     	;# 
  1508  019C                     	;# 
  1509  019D                     	;# 
  1510  019D                     	;# 
  1511  019D                     	;# 
  1512  019E                     	;# 
  1513  019E                     	;# 
  1514  019E                     	;# 
  1515  019F                     	;# 
  1516  019F                     	;# 
  1517  019F                     	;# 
  1518  019F                     	;# 
  1519  019F                     	;# 
  1520  020C                     	;# 
  1521  020D                     	;# 
  1522  020E                     	;# 
  1523  0211                     	;# 
  1524  0211                     	;# 
  1525  0212                     	;# 
  1526  0212                     	;# 
  1527  0213                     	;# 
  1528  0213                     	;# 
  1529  0214                     	;# 
  1530  0214                     	;# 
  1531  0215                     	;# 
  1532  0215                     	;# 
  1533  0215                     	;# 
  1534  0215                     	;# 
  1535  0216                     	;# 
  1536  0216                     	;# 
  1537  0217                     	;# 
  1538  0217                     	;# 
  1539  028C                     	;# 
  1540  028D                     	;# 
  1541  028E                     	;# 
  1542  0291                     	;# 
  1543  0291                     	;# 
  1544  0292                     	;# 
  1545  0293                     	;# 
  1546  0294                     	;# 
  1547  0298                     	;# 
  1548  0298                     	;# 
  1549  0299                     	;# 
  1550  029A                     	;# 
  1551  029B                     	;# 
  1552  029E                     	;# 
  1553  030C                     	;# 
  1554  030D                     	;# 
  1555  030E                     	;# 
  1556  038C                     	;# 
  1557  038D                     	;# 
  1558  038E                     	;# 
  1559  0391                     	;# 
  1560  0392                     	;# 
  1561  0393                     	;# 
  1562  0394                     	;# 
  1563  0395                     	;# 
  1564  0396                     	;# 
  1565  0397                     	;# 
  1566  0398                     	;# 
  1567  0399                     	;# 
  1568  040E                     	;# 
  1569  0413                     	;# 
  1570  0413                     	;# 
  1571  0414                     	;# 
  1572  0414                     	;# 
  1573  0415                     	;# 
  1574  0416                     	;# 
  1575  0417                     	;# 
  1576  0418                     	;# 
  1577  041A                     	;# 
  1578  041A                     	;# 
  1579  041B                     	;# 
  1580  041B                     	;# 
  1581  041C                     	;# 
  1582  041D                     	;# 
  1583  041E                     	;# 
  1584  041F                     	;# 
  1585  0493                     	;# 
  1586  0494                     	;# 
  1587  0495                     	;# 
  1588  0496                     	;# 
  1589  049A                     	;# 
  1590  049B                     	;# 
  1591  049C                     	;# 
  1592  049D                     	;# 
  1593  058C                     	;# 
  1594  058C                     	;# 
  1595  058D                     	;# 
  1596  058E                     	;# 
  1597  058E                     	;# 
  1598  058F                     	;# 
  1599  0590                     	;# 
  1600  0590                     	;# 
  1601  0591                     	;# 
  1602  0592                     	;# 
  1603  0592                     	;# 
  1604  0593                     	;# 
  1605  0594                     	;# 
  1606  0594                     	;# 
  1607  0595                     	;# 
  1608  0596                     	;# 
  1609  0596                     	;# 
  1610  0597                     	;# 
  1611  0598                     	;# 
  1612  0599                     	;# 
  1613  059A                     	;# 
  1614  059B                     	;# 
  1615  059B                     	;# 
  1616  059C                     	;# 
  1617  059D                     	;# 
  1618  060C                     	;# 
  1619  060C                     	;# 
  1620  060D                     	;# 
  1621  060E                     	;# 
  1622  060F                     	;# 
  1623  060F                     	;# 
  1624  0610                     	;# 
  1625  0611                     	;# 
  1626  0612                     	;# 
  1627  0613                     	;# 
  1628  0614                     	;# 
  1629  0617                     	;# 
  1630  0617                     	;# 
  1631  0618                     	;# 
  1632  0619                     	;# 
  1633  061A                     	;# 
  1634  061A                     	;# 
  1635  061B                     	;# 
  1636  061C                     	;# 
  1637  0691                     	;# 
  1638  0692                     	;# 
  1639  0693                     	;# 
  1640  0694                     	;# 
  1641  0695                     	;# 
  1642  0696                     	;# 
  1643  0697                     	;# 
  1644  0699                     	;# 
  1645  069A                     	;# 
  1646  0711                     	;# 
  1647  0712                     	;# 
  1648  0713                     	;# 
  1649  0714                     	;# 
  1650  0715                     	;# 
  1651  0718                     	;# 
  1652  0718                     	;# 
  1653  0719                     	;# 
  1654  071A                     	;# 
  1655  071A                     	;# 
  1656  071B                     	;# 
  1657  071C                     	;# 
  1658  071D                     	;# 
  1659  0791                     	;# 
  1660  0791                     	;# 
  1661  0792                     	;# 
  1662  0793                     	;# 
  1663  0793                     	;# 
  1664  0794                     	;# 
  1665  0795                     	;# 
  1666  0795                     	;# 
  1667  0796                     	;# 
  1668  0797                     	;# 
  1669  0797                     	;# 
  1670  0798                     	;# 
  1671  0799                     	;# 
  1672  079A                     	;# 
  1673  080C                     	;# 
  1674  080C                     	;# 
  1675  080D                     	;# 
  1676  080E                     	;# 
  1677  080E                     	;# 
  1678  080F                     	;# 
  1679  0810                     	;# 
  1680  0810                     	;# 
  1681  0811                     	;# 
  1682  0812                     	;# 
  1683  0812                     	;# 
  1684  0813                     	;# 
  1685  0814                     	;# 
  1686  0815                     	;# 
  1687  0816                     	;# 
  1688  0817                     	;# 
  1689  0818                     	;# 
  1690  0819                     	;# 
  1691  081A                     	;# 
  1692  081A                     	;# 
  1693  081B                     	;# 
  1694  081C                     	;# 
  1695  081C                     	;# 
  1696  081D                     	;# 
  1697  088C                     	;# 
  1698  088D                     	;# 
  1699  088E                     	;# 
  1700  088F                     	;# 
  1701  088F                     	;# 
  1702  0890                     	;# 
  1703  0891                     	;# 
  1704  0892                     	;# 
  1705  0893                     	;# 
  1706  0893                     	;# 
  1707  0894                     	;# 
  1708  0895                     	;# 
  1709  0896                     	;# 
  1710  0897                     	;# 
  1711  0897                     	;# 
  1712  0898                     	;# 
  1713  0899                     	;# 
  1714  0D8C                     	;# 
  1715  0D8C                     	;# 
  1716  0D8D                     	;# 
  1717  0D8E                     	;# 
  1718  0D8F                     	;# 
  1719  0D8F                     	;# 
  1720  0D90                     	;# 
  1721  0D91                     	;# 
  1722  0D92                     	;# 
  1723  0D92                     	;# 
  1724  0D93                     	;# 
  1725  0D94                     	;# 
  1726  0D95                     	;# 
  1727  0D95                     	;# 
  1728  0D96                     	;# 
  1729  0D97                     	;# 
  1730  0D98                     	;# 
  1731  0D99                     	;# 
  1732  0D9A                     	;# 
  1733  0D9B                     	;# 
  1734  0D9C                     	;# 
  1735  0D9D                     	;# 
  1736  0D9E                     	;# 
  1737  0D9E                     	;# 
  1738  0D9F                     	;# 
  1739  0DA0                     	;# 
  1740  0DA1                     	;# 
  1741  0DA1                     	;# 
  1742  0DA2                     	;# 
  1743  0DA3                     	;# 
  1744  0DA4                     	;# 
  1745  0DA4                     	;# 
  1746  0DA5                     	;# 
  1747  0DA6                     	;# 
  1748  0DA7                     	;# 
  1749  0DA7                     	;# 
  1750  0DA8                     	;# 
  1751  0DA9                     	;# 
  1752  0DAA                     	;# 
  1753  0DAB                     	;# 
  1754  0DAC                     	;# 
  1755  0DAD                     	;# 
  1756  0DAE                     	;# 
  1757  0DAF                     	;# 
  1758  0E0F                     	;# 
  1759  0E10                     	;# 
  1760  0E11                     	;# 
  1761  0E12                     	;# 
  1762  0E13                     	;# 
  1763  0E14                     	;# 
  1764  0E15                     	;# 
  1765  0E16                     	;# 
  1766  0E17                     	;# 
  1767  0E18                     	;# 
  1768  0E19                     	;# 
  1769  0E1A                     	;# 
  1770  0E1B                     	;# 
  1771  0E1C                     	;# 
  1772  0E1D                     	;# 
  1773  0E1E                     	;# 
  1774  0E1F                     	;# 
  1775  0E20                     	;# 
  1776  0E21                     	;# 
  1777  0E22                     	;# 
  1778  0E23                     	;# 
  1779  0E24                     	;# 
  1780  0E25                     	;# 
  1781  0E26                     	;# 
  1782  0E27                     	;# 
  1783  0E28                     	;# 
  1784  0E29                     	;# 
  1785  0E2A                     	;# 
  1786  0E2B                     	;# 
  1787  0E2C                     	;# 
  1788  0E2D                     	;# 
  1789  0E2E                     	;# 
  1790  0E90                     	;# 
  1791  0E91                     	;# 
  1792  0E92                     	;# 
  1793  0E94                     	;# 
  1794  0E95                     	;# 
  1795  0E9C                     	;# 
  1796  0E9D                     	;# 
  1797  0E9E                     	;# 
  1798  0E9F                     	;# 
  1799  0EA0                     	;# 
  1800  0EA1                     	;# 
  1801  0EA2                     	;# 
  1802  0EA3                     	;# 
  1803  0EA4                     	;# 
  1804  0EA5                     	;# 
  1805  0EA6                     	;# 
  1806  0EA7                     	;# 
  1807  0F0F                     	;# 
  1808  0F10                     	;# 
  1809  0F11                     	;# 
  1810  0F12                     	;# 
  1811  0F13                     	;# 
  1812  0F14                     	;# 
  1813  0F15                     	;# 
  1814  0F16                     	;# 
  1815  0F17                     	;# 
  1816  0F18                     	;# 
  1817  0F19                     	;# 
  1818  0F1A                     	;# 
  1819  0F1B                     	;# 
  1820  0F1C                     	;# 
  1821  0F1D                     	;# 
  1822  0F1E                     	;# 
  1823  0F1F                     	;# 
  1824  0F20                     	;# 
  1825  0F21                     	;# 
  1826  0F22                     	;# 
  1827  0F23                     	;# 
  1828  0F24                     	;# 
  1829  0F25                     	;# 
  1830  0F26                     	;# 
  1831  0F27                     	;# 
  1832  0F28                     	;# 
  1833  0F29                     	;# 
  1834  0F2A                     	;# 
  1835  0F2B                     	;# 
  1836  0F2C                     	;# 
  1837  0F2D                     	;# 
  1838  0F2E                     	;# 
  1839  0F2F                     	;# 
  1840  0F30                     	;# 
  1841  0F31                     	;# 
  1842  0F32                     	;# 
  1843  0F33                     	;# 
  1844  0F34                     	;# 
  1845  0F35                     	;# 
  1846  0F36                     	;# 
  1847  0F37                     	;# 
  1848  0FE4                     	;# 
  1849  0FE5                     	;# 
  1850  0FE6                     	;# 
  1851  0FE7                     	;# 
  1852  0FE8                     	;# 
  1853  0FE9                     	;# 
  1854  0FEA                     	;# 
  1855  0FEB                     	;# 
  1856  0FED                     	;# 
  1857  0FEE                     	;# 
  1858  0FEF                     	;# 
  1859  0000                     	;# 
  1860  0001                     	;# 
  1861  0002                     	;# 
  1862  0003                     	;# 
  1863  0004                     	;# 
  1864  0005                     	;# 
  1865  0006                     	;# 
  1866  0007                     	;# 
  1867  0008                     	;# 
  1868  0009                     	;# 
  1869  000A                     	;# 
  1870  000B                     	;# 
  1871  000C                     	;# 
  1872  000D                     	;# 
  1873  000E                     	;# 
  1874  0010                     	;# 
  1875  0011                     	;# 
  1876  0012                     	;# 
  1877  0013                     	;# 
  1878  0014                     	;# 
  1879  0015                     	;# 
  1880  0016                     	;# 
  1881  0016                     	;# 
  1882  0017                     	;# 
  1883  0018                     	;# 
  1884  0019                     	;# 
  1885  001A                     	;# 
  1886  001A                     	;# 
  1887  001B                     	;# 
  1888  001B                     	;# 
  1889  001C                     	;# 
  1890  001D                     	;# 
  1891  001E                     	;# 
  1892  001F                     	;# 
  1893  008C                     	;# 
  1894  008D                     	;# 
  1895  008E                     	;# 
  1896  0090                     	;# 
  1897  0091                     	;# 
  1898  0092                     	;# 
  1899  0093                     	;# 
  1900  0094                     	;# 
  1901  0095                     	;# 
  1902  0096                     	;# 
  1903  0098                     	;# 
  1904  0099                     	;# 
  1905  009A                     	;# 
  1906  009B                     	;# 
  1907  009B                     	;# 
  1908  009C                     	;# 
  1909  009D                     	;# 
  1910  009E                     	;# 
  1911  009F                     	;# 
  1912  010C                     	;# 
  1913  010D                     	;# 
  1914  010E                     	;# 
  1915  0111                     	;# 
  1916  0112                     	;# 
  1917  0113                     	;# 
  1918  0114                     	;# 
  1919  0115                     	;# 
  1920  0116                     	;# 
  1921  0117                     	;# 
  1922  0118                     	;# 
  1923  0119                     	;# 
  1924  011C                     	;# 
  1925  018C                     	;# 
  1926  018D                     	;# 
  1927  018E                     	;# 
  1928  0191                     	;# 
  1929  0191                     	;# 
  1930  0192                     	;# 
  1931  0193                     	;# 
  1932  0193                     	;# 
  1933  0194                     	;# 
  1934  0195                     	;# 
  1935  0196                     	;# 
  1936  0197                     	;# 
  1937  0199                     	;# 
  1938  0199                     	;# 
  1939  0199                     	;# 
  1940  019A                     	;# 
  1941  019A                     	;# 
  1942  019A                     	;# 
  1943  019B                     	;# 
  1944  019B                     	;# 
  1945  019B                     	;# 
  1946  019B                     	;# 
  1947  019B                     	;# 
  1948  019C                     	;# 
  1949  019C                     	;# 
  1950  019C                     	;# 
  1951  019D                     	;# 
  1952  019D                     	;# 
  1953  019D                     	;# 
  1954  019E                     	;# 
  1955  019E                     	;# 
  1956  019E                     	;# 
  1957  019F                     	;# 
  1958  019F                     	;# 
  1959  019F                     	;# 
  1960  019F                     	;# 
  1961  019F                     	;# 
  1962  020C                     	;# 
  1963  020D                     	;# 
  1964  020E                     	;# 
  1965  0211                     	;# 
  1966  0211                     	;# 
  1967  0212                     	;# 
  1968  0212                     	;# 
  1969  0213                     	;# 
  1970  0213                     	;# 
  1971  0214                     	;# 
  1972  0214                     	;# 
  1973  0215                     	;# 
  1974  0215                     	;# 
  1975  0215                     	;# 
  1976  0215                     	;# 
  1977  0216                     	;# 
  1978  0216                     	;# 
  1979  0217                     	;# 
  1980  0217                     	;# 
  1981  028C                     	;# 
  1982  028D                     	;# 
  1983  028E                     	;# 
  1984  0291                     	;# 
  1985  0291                     	;# 
  1986  0292                     	;# 
  1987  0293                     	;# 
  1988  0294                     	;# 
  1989  0298                     	;# 
  1990  0298                     	;# 
  1991  0299                     	;# 
  1992  029A                     	;# 
  1993  029B                     	;# 
  1994  029E                     	;# 
  1995  030C                     	;# 
  1996  030D                     	;# 
  1997  030E                     	;# 
  1998  038C                     	;# 
  1999  038D                     	;# 
  2000  038E                     	;# 
  2001  0391                     	;# 
  2002  0392                     	;# 
  2003  0393                     	;# 
  2004  0394                     	;# 
  2005  0395                     	;# 
  2006  0396                     	;# 
  2007  0397                     	;# 
  2008  0398                     	;# 
  2009  0399                     	;# 
  2010  040E                     	;# 
  2011  0413                     	;# 
  2012  0413                     	;# 
  2013  0414                     	;# 
  2014  0414                     	;# 
  2015  0415                     	;# 
  2016  0416                     	;# 
  2017  0417                     	;# 
  2018  0418                     	;# 
  2019  041A                     	;# 
  2020  041A                     	;# 
  2021  041B                     	;# 
  2022  041B                     	;# 
  2023  041C                     	;# 
  2024  041D                     	;# 
  2025  041E                     	;# 
  2026  041F                     	;# 
  2027  0493                     	;# 
  2028  0494                     	;# 
  2029  0495                     	;# 
  2030  0496                     	;# 
  2031  049A                     	;# 
  2032  049B                     	;# 
  2033  049C                     	;# 
  2034  049D                     	;# 
  2035  058C                     	;# 
  2036  058C                     	;# 
  2037  058D                     	;# 
  2038  058E                     	;# 
  2039  058E                     	;# 
  2040  058F                     	;# 
  2041  0590                     	;# 
  2042  0590                     	;# 
  2043  0591                     	;# 
  2044  0592                     	;# 
  2045  0592                     	;# 
  2046  0593                     	;# 
  2047  0594                     	;# 
  2048  0594                     	;# 
  2049  0595                     	;# 
  2050  0596                     	;# 
  2051  0596                     	;# 
  2052  0597                     	;# 
  2053  0598                     	;# 
  2054  0599                     	;# 
  2055  059A                     	;# 
  2056  059B                     	;# 
  2057  059B                     	;# 
  2058  059C                     	;# 
  2059  059D                     	;# 
  2060  060C                     	;# 
  2061  060C                     	;# 
  2062  060D                     	;# 
  2063  060E                     	;# 
  2064  060F                     	;# 
  2065  060F                     	;# 
  2066  0610                     	;# 
  2067  0611                     	;# 
  2068  0612                     	;# 
  2069  0613                     	;# 
  2070  0614                     	;# 
  2071  0617                     	;# 
  2072  0617                     	;# 
  2073  0618                     	;# 
  2074  0619                     	;# 
  2075  061A                     	;# 
  2076  061A                     	;# 
  2077  061B                     	;# 
  2078  061C                     	;# 
  2079  0691                     	;# 
  2080  0692                     	;# 
  2081  0693                     	;# 
  2082  0694                     	;# 
  2083  0695                     	;# 
  2084  0696                     	;# 
  2085  0697                     	;# 
  2086  0699                     	;# 
  2087  069A                     	;# 
  2088  0711                     	;# 
  2089  0712                     	;# 
  2090  0713                     	;# 
  2091  0714                     	;# 
  2092  0715                     	;# 
  2093  0718                     	;# 
  2094  0718                     	;# 
  2095  0719                     	;# 
  2096  071A                     	;# 
  2097  071A                     	;# 
  2098  071B                     	;# 
  2099  071C                     	;# 
  2100  071D                     	;# 
  2101  0791                     	;# 
  2102  0791                     	;# 
  2103  0792                     	;# 
  2104  0793                     	;# 
  2105  0793                     	;# 
  2106  0794                     	;# 
  2107  0795                     	;# 
  2108  0795                     	;# 
  2109  0796                     	;# 
  2110  0797                     	;# 
  2111  0797                     	;# 
  2112  0798                     	;# 
  2113  0799                     	;# 
  2114  079A                     	;# 
  2115  080C                     	;# 
  2116  080C                     	;# 
  2117  080D                     	;# 
  2118  080E                     	;# 
  2119  080E                     	;# 
  2120  080F                     	;# 
  2121  0810                     	;# 
  2122  0810                     	;# 
  2123  0811                     	;# 
  2124  0812                     	;# 
  2125  0812                     	;# 
  2126  0813                     	;# 
  2127  0814                     	;# 
  2128  0815                     	;# 
  2129  0816                     	;# 
  2130  0817                     	;# 
  2131  0818                     	;# 
  2132  0819                     	;# 
  2133  081A                     	;# 
  2134  081A                     	;# 
  2135  081B                     	;# 
  2136  081C                     	;# 
  2137  081C                     	;# 
  2138  081D                     	;# 
  2139  088C                     	;# 
  2140  088D                     	;# 
  2141  088E                     	;# 
  2142  088F                     	;# 
  2143  088F                     	;# 
  2144  0890                     	;# 
  2145  0891                     	;# 
  2146  0892                     	;# 
  2147  0893                     	;# 
  2148  0893                     	;# 
  2149  0894                     	;# 
  2150  0895                     	;# 
  2151  0896                     	;# 
  2152  0897                     	;# 
  2153  0897                     	;# 
  2154  0898                     	;# 
  2155  0899                     	;# 
  2156  0D8C                     	;# 
  2157  0D8C                     	;# 
  2158  0D8D                     	;# 
  2159  0D8E                     	;# 
  2160  0D8F                     	;# 
  2161  0D8F                     	;# 
  2162  0D90                     	;# 
  2163  0D91                     	;# 
  2164  0D92                     	;# 
  2165  0D92                     	;# 
  2166  0D93                     	;# 
  2167  0D94                     	;# 
  2168  0D95                     	;# 
  2169  0D95                     	;# 
  2170  0D96                     	;# 
  2171  0D97                     	;# 
  2172  0D98                     	;# 
  2173  0D99                     	;# 
  2174  0D9A                     	;# 
  2175  0D9B                     	;# 
  2176  0D9C                     	;# 
  2177  0D9D                     	;# 
  2178  0D9E                     	;# 
  2179  0D9E                     	;# 
  2180  0D9F                     	;# 
  2181  0DA0                     	;# 
  2182  0DA1                     	;# 
  2183  0DA1                     	;# 
  2184  0DA2                     	;# 
  2185  0DA3                     	;# 
  2186  0DA4                     	;# 
  2187  0DA4                     	;# 
  2188  0DA5                     	;# 
  2189  0DA6                     	;# 
  2190  0DA7                     	;# 
  2191  0DA7                     	;# 
  2192  0DA8                     	;# 
  2193  0DA9                     	;# 
  2194  0DAA                     	;# 
  2195  0DAB                     	;# 
  2196  0DAC                     	;# 
  2197  0DAD                     	;# 
  2198  0DAE                     	;# 
  2199  0DAF                     	;# 
  2200  0E0F                     	;# 
  2201  0E10                     	;# 
  2202  0E11                     	;# 
  2203  0E12                     	;# 
  2204  0E13                     	;# 
  2205  0E14                     	;# 
  2206  0E15                     	;# 
  2207  0E16                     	;# 
  2208  0E17                     	;# 
  2209  0E18                     	;# 
  2210  0E19                     	;# 
  2211  0E1A                     	;# 
  2212  0E1B                     	;# 
  2213  0E1C                     	;# 
  2214  0E1D                     	;# 
  2215  0E1E                     	;# 
  2216  0E1F                     	;# 
  2217  0E20                     	;# 
  2218  0E21                     	;# 
  2219  0E22                     	;# 
  2220  0E23                     	;# 
  2221  0E24                     	;# 
  2222  0E25                     	;# 
  2223  0E26                     	;# 
  2224  0E27                     	;# 
  2225  0E28                     	;# 
  2226  0E29                     	;# 
  2227  0E2A                     	;# 
  2228  0E2B                     	;# 
  2229  0E2C                     	;# 
  2230  0E2D                     	;# 
  2231  0E2E                     	;# 
  2232  0E90                     	;# 
  2233  0E91                     	;# 
  2234  0E92                     	;# 
  2235  0E94                     	;# 
  2236  0E95                     	;# 
  2237  0E9C                     	;# 
  2238  0E9D                     	;# 
  2239  0E9E                     	;# 
  2240  0E9F                     	;# 
  2241  0EA0                     	;# 
  2242  0EA1                     	;# 
  2243  0EA2                     	;# 
  2244  0EA3                     	;# 
  2245  0EA4                     	;# 
  2246  0EA5                     	;# 
  2247  0EA6                     	;# 
  2248  0EA7                     	;# 
  2249  0F0F                     	;# 
  2250  0F10                     	;# 
  2251  0F11                     	;# 
  2252  0F12                     	;# 
  2253  0F13                     	;# 
  2254  0F14                     	;# 
  2255  0F15                     	;# 
  2256  0F16                     	;# 
  2257  0F17                     	;# 
  2258  0F18                     	;# 
  2259  0F19                     	;# 
  2260  0F1A                     	;# 
  2261  0F1B                     	;# 
  2262  0F1C                     	;# 
  2263  0F1D                     	;# 
  2264  0F1E                     	;# 
  2265  0F1F                     	;# 
  2266  0F20                     	;# 
  2267  0F21                     	;# 
  2268  0F22                     	;# 
  2269  0F23                     	;# 
  2270  0F24                     	;# 
  2271  0F25                     	;# 
  2272  0F26                     	;# 
  2273  0F27                     	;# 
  2274  0F28                     	;# 
  2275  0F29                     	;# 
  2276  0F2A                     	;# 
  2277  0F2B                     	;# 
  2278  0F2C                     	;# 
  2279  0F2D                     	;# 
  2280  0F2E                     	;# 
  2281  0F2F                     	;# 
  2282  0F30                     	;# 
  2283  0F31                     	;# 
  2284  0F32                     	;# 
  2285  0F33                     	;# 
  2286  0F34                     	;# 
  2287  0F35                     	;# 
  2288  0F36                     	;# 
  2289  0F37                     	;# 
  2290  0FE4                     	;# 
  2291  0FE5                     	;# 
  2292  0FE6                     	;# 
  2293  0FE7                     	;# 
  2294  0FE8                     	;# 
  2295  0FE9                     	;# 
  2296  0FEA                     	;# 
  2297  0FEB                     	;# 
  2298  0FED                     	;# 
  2299  0FEE                     	;# 
  2300  0FEF                     	;# 
  2301  0000                     	;# 
  2302  0001                     	;# 
  2303  0002                     	;# 
  2304  0003                     	;# 
  2305  0004                     	;# 
  2306  0005                     	;# 
  2307  0006                     	;# 
  2308  0007                     	;# 
  2309  0008                     	;# 
  2310  0009                     	;# 
  2311  000A                     	;# 
  2312  000B                     	;# 
  2313  000C                     	;# 
  2314  000D                     	;# 
  2315  000E                     	;# 
  2316  0010                     	;# 
  2317  0011                     	;# 
  2318  0012                     	;# 
  2319  0013                     	;# 
  2320  0014                     	;# 
  2321  0015                     	;# 
  2322  0016                     	;# 
  2323  0016                     	;# 
  2324  0017                     	;# 
  2325  0018                     	;# 
  2326  0019                     	;# 
  2327  001A                     	;# 
  2328  001A                     	;# 
  2329  001B                     	;# 
  2330  001B                     	;# 
  2331  001C                     	;# 
  2332  001D                     	;# 
  2333  001E                     	;# 
  2334  001F                     	;# 
  2335  008C                     	;# 
  2336  008D                     	;# 
  2337  008E                     	;# 
  2338  0090                     	;# 
  2339  0091                     	;# 
  2340  0092                     	;# 
  2341  0093                     	;# 
  2342  0094                     	;# 
  2343  0095                     	;# 
  2344  0096                     	;# 
  2345  0098                     	;# 
  2346  0099                     	;# 
  2347  009A                     	;# 
  2348  009B                     	;# 
  2349  009B                     	;# 
  2350  009C                     	;# 
  2351  009D                     	;# 
  2352  009E                     	;# 
  2353  009F                     	;# 
  2354  010C                     	;# 
  2355  010D                     	;# 
  2356  010E                     	;# 
  2357  0111                     	;# 
  2358  0112                     	;# 
  2359  0113                     	;# 
  2360  0114                     	;# 
  2361  0115                     	;# 
  2362  0116                     	;# 
  2363  0117                     	;# 
  2364  0118                     	;# 
  2365  0119                     	;# 
  2366  011C                     	;# 
  2367  018C                     	;# 
  2368  018D                     	;# 
  2369  018E                     	;# 
  2370  0191                     	;# 
  2371  0191                     	;# 
  2372  0192                     	;# 
  2373  0193                     	;# 
  2374  0193                     	;# 
  2375  0194                     	;# 
  2376  0195                     	;# 
  2377  0196                     	;# 
  2378  0197                     	;# 
  2379  0199                     	;# 
  2380  0199                     	;# 
  2381  0199                     	;# 
  2382  019A                     	;# 
  2383  019A                     	;# 
  2384  019A                     	;# 
  2385  019B                     	;# 
  2386  019B                     	;# 
  2387  019B                     	;# 
  2388  019B                     	;# 
  2389  019B                     	;# 
  2390  019C                     	;# 
  2391  019C                     	;# 
  2392  019C                     	;# 
  2393  019D                     	;# 
  2394  019D                     	;# 
  2395  019D                     	;# 
  2396  019E                     	;# 
  2397  019E                     	;# 
  2398  019E                     	;# 
  2399  019F                     	;# 
  2400  019F                     	;# 
  2401  019F                     	;# 
  2402  019F                     	;# 
  2403  019F                     	;# 
  2404  020C                     	;# 
  2405  020D                     	;# 
  2406  020E                     	;# 
  2407  0211                     	;# 
  2408  0211                     	;# 
  2409  0212                     	;# 
  2410  0212                     	;# 
  2411  0213                     	;# 
  2412  0213                     	;# 
  2413  0214                     	;# 
  2414  0214                     	;# 
  2415  0215                     	;# 
  2416  0215                     	;# 
  2417  0215                     	;# 
  2418  0215                     	;# 
  2419  0216                     	;# 
  2420  0216                     	;# 
  2421  0217                     	;# 
  2422  0217                     	;# 
  2423  028C                     	;# 
  2424  028D                     	;# 
  2425  028E                     	;# 
  2426  0291                     	;# 
  2427  0291                     	;# 
  2428  0292                     	;# 
  2429  0293                     	;# 
  2430  0294                     	;# 
  2431  0298                     	;# 
  2432  0298                     	;# 
  2433  0299                     	;# 
  2434  029A                     	;# 
  2435  029B                     	;# 
  2436  029E                     	;# 
  2437  030C                     	;# 
  2438  030D                     	;# 
  2439  030E                     	;# 
  2440  038C                     	;# 
  2441  038D                     	;# 
  2442  038E                     	;# 
  2443  0391                     	;# 
  2444  0392                     	;# 
  2445  0393                     	;# 
  2446  0394                     	;# 
  2447  0395                     	;# 
  2448  0396                     	;# 
  2449  0397                     	;# 
  2450  0398                     	;# 
  2451  0399                     	;# 
  2452  040E                     	;# 
  2453  0413                     	;# 
  2454  0413                     	;# 
  2455  0414                     	;# 
  2456  0414                     	;# 
  2457  0415                     	;# 
  2458  0416                     	;# 
  2459  0417                     	;# 
  2460  0418                     	;# 
  2461  041A                     	;# 
  2462  041A                     	;# 
  2463  041B                     	;# 
  2464  041B                     	;# 
  2465  041C                     	;# 
  2466  041D                     	;# 
  2467  041E                     	;# 
  2468  041F                     	;# 
  2469  0493                     	;# 
  2470  0494                     	;# 
  2471  0495                     	;# 
  2472  0496                     	;# 
  2473  049A                     	;# 
  2474  049B                     	;# 
  2475  049C                     	;# 
  2476  049D                     	;# 
  2477  058C                     	;# 
  2478  058C                     	;# 
  2479  058D                     	;# 
  2480  058E                     	;# 
  2481  058E                     	;# 
  2482  058F                     	;# 
  2483  0590                     	;# 
  2484  0590                     	;# 
  2485  0591                     	;# 
  2486  0592                     	;# 
  2487  0592                     	;# 
  2488  0593                     	;# 
  2489  0594                     	;# 
  2490  0594                     	;# 
  2491  0595                     	;# 
  2492  0596                     	;# 
  2493  0596                     	;# 
  2494  0597                     	;# 
  2495  0598                     	;# 
  2496  0599                     	;# 
  2497  059A                     	;# 
  2498  059B                     	;# 
  2499  059B                     	;# 
  2500  059C                     	;# 
  2501  059D                     	;# 
  2502  060C                     	;# 
  2503  060C                     	;# 
  2504  060D                     	;# 
  2505  060E                     	;# 
  2506  060F                     	;# 
  2507  060F                     	;# 
  2508  0610                     	;# 
  2509  0611                     	;# 
  2510  0612                     	;# 
  2511  0613                     	;# 
  2512  0614                     	;# 
  2513  0617                     	;# 
  2514  0617                     	;# 
  2515  0618                     	;# 
  2516  0619                     	;# 
  2517  061A                     	;# 
  2518  061A                     	;# 
  2519  061B                     	;# 
  2520  061C                     	;# 
  2521  0691                     	;# 
  2522  0692                     	;# 
  2523  0693                     	;# 
  2524  0694                     	;# 
  2525  0695                     	;# 
  2526  0696                     	;# 
  2527  0697                     	;# 
  2528  0699                     	;# 
  2529  069A                     	;# 
  2530  0711                     	;# 
  2531  0712                     	;# 
  2532  0713                     	;# 
  2533  0714                     	;# 
  2534  0715                     	;# 
  2535  0718                     	;# 
  2536  0718                     	;# 
  2537  0719                     	;# 
  2538  071A                     	;# 
  2539  071A                     	;# 
  2540  071B                     	;# 
  2541  071C                     	;# 
  2542  071D                     	;# 
  2543  0791                     	;# 
  2544  0791                     	;# 
  2545  0792                     	;# 
  2546  0793                     	;# 
  2547  0793                     	;# 
  2548  0794                     	;# 
  2549  0795                     	;# 
  2550  0795                     	;# 
  2551  0796                     	;# 
  2552  0797                     	;# 
  2553  0797                     	;# 
  2554  0798                     	;# 
  2555  0799                     	;# 
  2556  079A                     	;# 
  2557  080C                     	;# 
  2558  080C                     	;# 
  2559  080D                     	;# 
  2560  080E                     	;# 
  2561  080E                     	;# 
  2562  080F                     	;# 
  2563  0810                     	;# 
  2564  0810                     	;# 
  2565  0811                     	;# 
  2566  0812                     	;# 
  2567  0812                     	;# 
  2568  0813                     	;# 
  2569  0814                     	;# 
  2570  0815                     	;# 
  2571  0816                     	;# 
  2572  0817                     	;# 
  2573  0818                     	;# 
  2574  0819                     	;# 
  2575  081A                     	;# 
  2576  081A                     	;# 
  2577  081B                     	;# 
  2578  081C                     	;# 
  2579  081C                     	;# 
  2580  081D                     	;# 
  2581  088C                     	;# 
  2582  088D                     	;# 
  2583  088E                     	;# 
  2584  088F                     	;# 
  2585  088F                     	;# 
  2586  0890                     	;# 
  2587  0891                     	;# 
  2588  0892                     	;# 
  2589  0893                     	;# 
  2590  0893                     	;# 
  2591  0894                     	;# 
  2592  0895                     	;# 
  2593  0896                     	;# 
  2594  0897                     	;# 
  2595  0897                     	;# 
  2596  0898                     	;# 
  2597  0899                     	;# 
  2598  0D8C                     	;# 
  2599  0D8C                     	;# 
  2600  0D8D                     	;# 
  2601  0D8E                     	;# 
  2602  0D8F                     	;# 
  2603  0D8F                     	;# 
  2604  0D90                     	;# 
  2605  0D91                     	;# 
  2606  0D92                     	;# 
  2607  0D92                     	;# 
  2608  0D93                     	;# 
  2609  0D94                     	;# 
  2610  0D95                     	;# 
  2611  0D95                     	;# 
  2612  0D96                     	;# 
  2613  0D97                     	;# 
  2614  0D98                     	;# 
  2615  0D99                     	;# 
  2616  0D9A                     	;# 
  2617  0D9B                     	;# 
  2618  0D9C                     	;# 
  2619  0D9D                     	;# 
  2620  0D9E                     	;# 
  2621  0D9E                     	;# 
  2622  0D9F                     	;# 
  2623  0DA0                     	;# 
  2624  0DA1                     	;# 
  2625  0DA1                     	;# 
  2626  0DA2                     	;# 
  2627  0DA3                     	;# 
  2628  0DA4                     	;# 
  2629  0DA4                     	;# 
  2630  0DA5                     	;# 
  2631  0DA6                     	;# 
  2632  0DA7                     	;# 
  2633  0DA7                     	;# 
  2634  0DA8                     	;# 
  2635  0DA9                     	;# 
  2636  0DAA                     	;# 
  2637  0DAB                     	;# 
  2638  0DAC                     	;# 
  2639  0DAD                     	;# 
  2640  0DAE                     	;# 
  2641  0DAF                     	;# 
  2642  0E0F                     	;# 
  2643  0E10                     	;# 
  2644  0E11                     	;# 
  2645  0E12                     	;# 
  2646  0E13                     	;# 
  2647  0E14                     	;# 
  2648  0E15                     	;# 
  2649  0E16                     	;# 
  2650  0E17                     	;# 
  2651  0E18                     	;# 
  2652  0E19                     	;# 
  2653  0E1A                     	;# 
  2654  0E1B                     	;# 
  2655  0E1C                     	;# 
  2656  0E1D                     	;# 
  2657  0E1E                     	;# 
  2658  0E1F                     	;# 
  2659  0E20                     	;# 
  2660  0E21                     	;# 
  2661  0E22                     	;# 
  2662  0E23                     	;# 
  2663  0E24                     	;# 
  2664  0E25                     	;# 
  2665  0E26                     	;# 
  2666  0E27                     	;# 
  2667  0E28                     	;# 
  2668  0E29                     	;# 
  2669  0E2A                     	;# 
  2670  0E2B                     	;# 
  2671  0E2C                     	;# 
  2672  0E2D                     	;# 
  2673  0E2E                     	;# 
  2674  0E90                     	;# 
  2675  0E91                     	;# 
  2676  0E92                     	;# 
  2677  0E94                     	;# 
  2678  0E95                     	;# 
  2679  0E9C                     	;# 
  2680  0E9D                     	;# 
  2681  0E9E                     	;# 
  2682  0E9F                     	;# 
  2683  0EA0                     	;# 
  2684  0EA1                     	;# 
  2685  0EA2                     	;# 
  2686  0EA3                     	;# 
  2687  0EA4                     	;# 
  2688  0EA5                     	;# 
  2689  0EA6                     	;# 
  2690  0EA7                     	;# 
  2691  0F0F                     	;# 
  2692  0F10                     	;# 
  2693  0F11                     	;# 
  2694  0F12                     	;# 
  2695  0F13                     	;# 
  2696  0F14                     	;# 
  2697  0F15                     	;# 
  2698  0F16                     	;# 
  2699  0F17                     	;# 
  2700  0F18                     	;# 
  2701  0F19                     	;# 
  2702  0F1A                     	;# 
  2703  0F1B                     	;# 
  2704  0F1C                     	;# 
  2705  0F1D                     	;# 
  2706  0F1E                     	;# 
  2707  0F1F                     	;# 
  2708  0F20                     	;# 
  2709  0F21                     	;# 
  2710  0F22                     	;# 
  2711  0F23                     	;# 
  2712  0F24                     	;# 
  2713  0F25                     	;# 
  2714  0F26                     	;# 
  2715  0F27                     	;# 
  2716  0F28                     	;# 
  2717  0F29                     	;# 
  2718  0F2A                     	;# 
  2719  0F2B                     	;# 
  2720  0F2C                     	;# 
  2721  0F2D                     	;# 
  2722  0F2E                     	;# 
  2723  0F2F                     	;# 
  2724  0F30                     	;# 
  2725  0F31                     	;# 
  2726  0F32                     	;# 
  2727  0F33                     	;# 
  2728  0F34                     	;# 
  2729  0F35                     	;# 
  2730  0F36                     	;# 
  2731  0F37                     	;# 
  2732  0FE4                     	;# 
  2733  0FE5                     	;# 
  2734  0FE6                     	;# 
  2735  0FE7                     	;# 
  2736  0FE8                     	;# 
  2737  0FE9                     	;# 
  2738  0FEA                     	;# 
  2739  0FEB                     	;# 
  2740  0FED                     	;# 
  2741  0FEE                     	;# 
  2742  0FEF                     	;# 
  2743  0000                     	;# 
  2744  0001                     	;# 
  2745  0002                     	;# 
  2746  0003                     	;# 
  2747  0004                     	;# 
  2748  0005                     	;# 
  2749  0006                     	;# 
  2750  0007                     	;# 
  2751  0008                     	;# 
  2752  0009                     	;# 
  2753  000A                     	;# 
  2754  000B                     	;# 
  2755  000C                     	;# 
  2756  000D                     	;# 
  2757  000E                     	;# 
  2758  0010                     	;# 
  2759  0011                     	;# 
  2760  0012                     	;# 
  2761  0013                     	;# 
  2762  0014                     	;# 
  2763  0015                     	;# 
  2764  0016                     	;# 
  2765  0016                     	;# 
  2766  0017                     	;# 
  2767  0018                     	;# 
  2768  0019                     	;# 
  2769  001A                     	;# 
  2770  001A                     	;# 
  2771  001B                     	;# 
  2772  001B                     	;# 
  2773  001C                     	;# 
  2774  001D                     	;# 
  2775  001E                     	;# 
  2776  001F                     	;# 
  2777  008C                     	;# 
  2778  008D                     	;# 
  2779  008E                     	;# 
  2780  0090                     	;# 
  2781  0091                     	;# 
  2782  0092                     	;# 
  2783  0093                     	;# 
  2784  0094                     	;# 
  2785  0095                     	;# 
  2786  0096                     	;# 
  2787  0098                     	;# 
  2788  0099                     	;# 
  2789  009A                     	;# 
  2790  009B                     	;# 
  2791  009B                     	;# 
  2792  009C                     	;# 
  2793  009D                     	;# 
  2794  009E                     	;# 
  2795  009F                     	;# 
  2796  010C                     	;# 
  2797  010D                     	;# 
  2798  010E                     	;# 
  2799  0111                     	;# 
  2800  0112                     	;# 
  2801  0113                     	;# 
  2802  0114                     	;# 
  2803  0115                     	;# 
  2804  0116                     	;# 
  2805  0117                     	;# 
  2806  0118                     	;# 
  2807  0119                     	;# 
  2808  011C                     	;# 
  2809  018C                     	;# 
  2810  018D                     	;# 
  2811  018E                     	;# 
  2812  0191                     	;# 
  2813  0191                     	;# 
  2814  0192                     	;# 
  2815  0193                     	;# 
  2816  0193                     	;# 
  2817  0194                     	;# 
  2818  0195                     	;# 
  2819  0196                     	;# 
  2820  0197                     	;# 
  2821  0199                     	;# 
  2822  0199                     	;# 
  2823  0199                     	;# 
  2824  019A                     	;# 
  2825  019A                     	;# 
  2826  019A                     	;# 
  2827  019B                     	;# 
  2828  019B                     	;# 
  2829  019B                     	;# 
  2830  019B                     	;# 
  2831  019B                     	;# 
  2832  019C                     	;# 
  2833  019C                     	;# 
  2834  019C                     	;# 
  2835  019D                     	;# 
  2836  019D                     	;# 
  2837  019D                     	;# 
  2838  019E                     	;# 
  2839  019E                     	;# 
  2840  019E                     	;# 
  2841  019F                     	;# 
  2842  019F                     	;# 
  2843  019F                     	;# 
  2844  019F                     	;# 
  2845  019F                     	;# 
  2846  020C                     	;# 
  2847  020D                     	;# 
  2848  020E                     	;# 
  2849  0211                     	;# 
  2850  0211                     	;# 
  2851  0212                     	;# 
  2852  0212                     	;# 
  2853  0213                     	;# 
  2854  0213                     	;# 
  2855  0214                     	;# 
  2856  0214                     	;# 
  2857  0215                     	;# 
  2858  0215                     	;# 
  2859  0215                     	;# 
  2860  0215                     	;# 
  2861  0216                     	;# 
  2862  0216                     	;# 
  2863  0217                     	;# 
  2864  0217                     	;# 
  2865  028C                     	;# 
  2866  028D                     	;# 
  2867  028E                     	;# 
  2868  0291                     	;# 
  2869  0291                     	;# 
  2870  0292                     	;# 
  2871  0293                     	;# 
  2872  0294                     	;# 
  2873  0298                     	;# 
  2874  0298                     	;# 
  2875  0299                     	;# 
  2876  029A                     	;# 
  2877  029B                     	;# 
  2878  029E                     	;# 
  2879  030C                     	;# 
  2880  030D                     	;# 
  2881  030E                     	;# 
  2882  038C                     	;# 
  2883  038D                     	;# 
  2884  038E                     	;# 
  2885  0391                     	;# 
  2886  0392                     	;# 
  2887  0393                     	;# 
  2888  0394                     	;# 
  2889  0395                     	;# 
  2890  0396                     	;# 
  2891  0397                     	;# 
  2892  0398                     	;# 
  2893  0399                     	;# 
  2894  040E                     	;# 
  2895  0413                     	;# 
  2896  0413                     	;# 
  2897  0414                     	;# 
  2898  0414                     	;# 
  2899  0415                     	;# 
  2900  0416                     	;# 
  2901  0417                     	;# 
  2902  0418                     	;# 
  2903  041A                     	;# 
  2904  041A                     	;# 
  2905  041B                     	;# 
  2906  041B                     	;# 
  2907  041C                     	;# 
  2908  041D                     	;# 
  2909  041E                     	;# 
  2910  041F                     	;# 
  2911  0493                     	;# 
  2912  0494                     	;# 
  2913  0495                     	;# 
  2914  0496                     	;# 
  2915  049A                     	;# 
  2916  049B                     	;# 
  2917  049C                     	;# 
  2918  049D                     	;# 
  2919  058C                     	;# 
  2920  058C                     	;# 
  2921  058D                     	;# 
  2922  058E                     	;# 
  2923  058E                     	;# 
  2924  058F                     	;# 
  2925  0590                     	;# 
  2926  0590                     	;# 
  2927  0591                     	;# 
  2928  0592                     	;# 
  2929  0592                     	;# 
  2930  0593                     	;# 
  2931  0594                     	;# 
  2932  0594                     	;# 
  2933  0595                     	;# 
  2934  0596                     	;# 
  2935  0596                     	;# 
  2936  0597                     	;# 
  2937  0598                     	;# 
  2938  0599                     	;# 
  2939  059A                     	;# 
  2940  059B                     	;# 
  2941  059B                     	;# 
  2942  059C                     	;# 
  2943  059D                     	;# 
  2944  060C                     	;# 
  2945  060C                     	;# 
  2946  060D                     	;# 
  2947  060E                     	;# 
  2948  060F                     	;# 
  2949  060F                     	;# 
  2950  0610                     	;# 
  2951  0611                     	;# 
  2952  0612                     	;# 
  2953  0613                     	;# 
  2954  0614                     	;# 
  2955  0617                     	;# 
  2956  0617                     	;# 
  2957  0618                     	;# 
  2958  0619                     	;# 
  2959  061A                     	;# 
  2960  061A                     	;# 
  2961  061B                     	;# 
  2962  061C                     	;# 
  2963  0691                     	;# 
  2964  0692                     	;# 
  2965  0693                     	;# 
  2966  0694                     	;# 
  2967  0695                     	;# 
  2968  0696                     	;# 
  2969  0697                     	;# 
  2970  0699                     	;# 
  2971  069A                     	;# 
  2972  0711                     	;# 
  2973  0712                     	;# 
  2974  0713                     	;# 
  2975  0714                     	;# 
  2976  0715                     	;# 
  2977  0718                     	;# 
  2978  0718                     	;# 
  2979  0719                     	;# 
  2980  071A                     	;# 
  2981  071A                     	;# 
  2982  071B                     	;# 
  2983  071C                     	;# 
  2984  071D                     	;# 
  2985  0791                     	;# 
  2986  0791                     	;# 
  2987  0792                     	;# 
  2988  0793                     	;# 
  2989  0793                     	;# 
  2990  0794                     	;# 
  2991  0795                     	;# 
  2992  0795                     	;# 
  2993  0796                     	;# 
  2994  0797                     	;# 
  2995  0797                     	;# 
  2996  0798                     	;# 
  2997  0799                     	;# 
  2998  079A                     	;# 
  2999  080C                     	;# 
  3000  080C                     	;# 
  3001  080D                     	;# 
  3002  080E                     	;# 
  3003  080E                     	;# 
  3004  080F                     	;# 
  3005  0810                     	;# 
  3006  0810                     	;# 
  3007  0811                     	;# 
  3008  0812                     	;# 
  3009  0812                     	;# 
  3010  0813                     	;# 
  3011  0814                     	;# 
  3012  0815                     	;# 
  3013  0816                     	;# 
  3014  0817                     	;# 
  3015  0818                     	;# 
  3016  0819                     	;# 
  3017  081A                     	;# 
  3018  081A                     	;# 
  3019  081B                     	;# 
  3020  081C                     	;# 
  3021  081C                     	;# 
  3022  081D                     	;# 
  3023  088C                     	;# 
  3024  088D                     	;# 
  3025  088E                     	;# 
  3026  088F                     	;# 
  3027  088F                     	;# 
  3028  0890                     	;# 
  3029  0891                     	;# 
  3030  0892                     	;# 
  3031  0893                     	;# 
  3032  0893                     	;# 
  3033  0894                     	;# 
  3034  0895                     	;# 
  3035  0896                     	;# 
  3036  0897                     	;# 
  3037  0897                     	;# 
  3038  0898                     	;# 
  3039  0899                     	;# 
  3040  0D8C                     	;# 
  3041  0D8C                     	;# 
  3042  0D8D                     	;# 
  3043  0D8E                     	;# 
  3044  0D8F                     	;# 
  3045  0D8F                     	;# 
  3046  0D90                     	;# 
  3047  0D91                     	;# 
  3048  0D92                     	;# 
  3049  0D92                     	;# 
  3050  0D93                     	;# 
  3051  0D94                     	;# 
  3052  0D95                     	;# 
  3053  0D95                     	;# 
  3054  0D96                     	;# 
  3055  0D97                     	;# 
  3056  0D98                     	;# 
  3057  0D99                     	;# 
  3058  0D9A                     	;# 
  3059  0D9B                     	;# 
  3060  0D9C                     	;# 
  3061  0D9D                     	;# 
  3062  0D9E                     	;# 
  3063  0D9E                     	;# 
  3064  0D9F                     	;# 
  3065  0DA0                     	;# 
  3066  0DA1                     	;# 
  3067  0DA1                     	;# 
  3068  0DA2                     	;# 
  3069  0DA3                     	;# 
  3070  0DA4                     	;# 
  3071  0DA4                     	;# 
  3072  0DA5                     	;# 
  3073  0DA6                     	;# 
  3074  0DA7                     	;# 
  3075  0DA7                     	;# 
  3076  0DA8                     	;# 
  3077  0DA9                     	;# 
  3078  0DAA                     	;# 
  3079  0DAB                     	;# 
  3080  0DAC                     	;# 
  3081  0DAD                     	;# 
  3082  0DAE                     	;# 
  3083  0DAF                     	;# 
  3084  0E0F                     	;# 
  3085  0E10                     	;# 
  3086  0E11                     	;# 
  3087  0E12                     	;# 
  3088  0E13                     	;# 
  3089  0E14                     	;# 
  3090  0E15                     	;# 
  3091  0E16                     	;# 
  3092  0E17                     	;# 
  3093  0E18                     	;# 
  3094  0E19                     	;# 
  3095  0E1A                     	;# 
  3096  0E1B                     	;# 
  3097  0E1C                     	;# 
  3098  0E1D                     	;# 
  3099  0E1E                     	;# 
  3100  0E1F                     	;# 
  3101  0E20                     	;# 
  3102  0E21                     	;# 
  3103  0E22                     	;# 
  3104  0E23                     	;# 
  3105  0E24                     	;# 
  3106  0E25                     	;# 
  3107  0E26                     	;# 
  3108  0E27                     	;# 
  3109  0E28                     	;# 
  3110  0E29                     	;# 
  3111  0E2A                     	;# 
  3112  0E2B                     	;# 
  3113  0E2C                     	;# 
  3114  0E2D                     	;# 
  3115  0E2E                     	;# 
  3116  0E90                     	;# 
  3117  0E91                     	;# 
  3118  0E92                     	;# 
  3119  0E94                     	;# 
  3120  0E95                     	;# 
  3121  0E9C                     	;# 
  3122  0E9D                     	;# 
  3123  0E9E                     	;# 
  3124  0E9F                     	;# 
  3125  0EA0                     	;# 
  3126  0EA1                     	;# 
  3127  0EA2                     	;# 
  3128  0EA3                     	;# 
  3129  0EA4                     	;# 
  3130  0EA5                     	;# 
  3131  0EA6                     	;# 
  3132  0EA7                     	;# 
  3133  0F0F                     	;# 
  3134  0F10                     	;# 
  3135  0F11                     	;# 
  3136  0F12                     	;# 
  3137  0F13                     	;# 
  3138  0F14                     	;# 
  3139  0F15                     	;# 
  3140  0F16                     	;# 
  3141  0F17                     	;# 
  3142  0F18                     	;# 
  3143  0F19                     	;# 
  3144  0F1A                     	;# 
  3145  0F1B                     	;# 
  3146  0F1C                     	;# 
  3147  0F1D                     	;# 
  3148  0F1E                     	;# 
  3149  0F1F                     	;# 
  3150  0F20                     	;# 
  3151  0F21                     	;# 
  3152  0F22                     	;# 
  3153  0F23                     	;# 
  3154  0F24                     	;# 
  3155  0F25                     	;# 
  3156  0F26                     	;# 
  3157  0F27                     	;# 
  3158  0F28                     	;# 
  3159  0F29                     	;# 
  3160  0F2A                     	;# 
  3161  0F2B                     	;# 
  3162  0F2C                     	;# 
  3163  0F2D                     	;# 
  3164  0F2E                     	;# 
  3165  0F2F                     	;# 
  3166  0F30                     	;# 
  3167  0F31                     	;# 
  3168  0F32                     	;# 
  3169  0F33                     	;# 
  3170  0F34                     	;# 
  3171  0F35                     	;# 
  3172  0F36                     	;# 
  3173  0F37                     	;# 
  3174  0FE4                     	;# 
  3175  0FE5                     	;# 
  3176  0FE6                     	;# 
  3177  0FE7                     	;# 
  3178  0FE8                     	;# 
  3179  0FE9                     	;# 
  3180  0FEA                     	;# 
  3181  0FEB                     	;# 
  3182  0FED                     	;# 
  3183  0FEE                     	;# 
  3184  0FEF                     	;# 
  3185  0000                     	;# 
  3186  0001                     	;# 
  3187  0002                     	;# 
  3188  0003                     	;# 
  3189  0004                     	;# 
  3190  0005                     	;# 
  3191  0006                     	;# 
  3192  0007                     	;# 
  3193  0008                     	;# 
  3194  0009                     	;# 
  3195  000A                     	;# 
  3196  000B                     	;# 
  3197  000C                     	;# 
  3198  000D                     	;# 
  3199  000E                     	;# 
  3200  0010                     	;# 
  3201  0011                     	;# 
  3202  0012                     	;# 
  3203  0013                     	;# 
  3204  0014                     	;# 
  3205  0015                     	;# 
  3206  0016                     	;# 
  3207  0016                     	;# 
  3208  0017                     	;# 
  3209  0018                     	;# 
  3210  0019                     	;# 
  3211  001A                     	;# 
  3212  001A                     	;# 
  3213  001B                     	;# 
  3214  001B                     	;# 
  3215  001C                     	;# 
  3216  001D                     	;# 
  3217  001E                     	;# 
  3218  001F                     	;# 
  3219  008C                     	;# 
  3220  008D                     	;# 
  3221  008E                     	;# 
  3222  0090                     	;# 
  3223  0091                     	;# 
  3224  0092                     	;# 
  3225  0093                     	;# 
  3226  0094                     	;# 
  3227  0095                     	;# 
  3228  0096                     	;# 
  3229  0098                     	;# 
  3230  0099                     	;# 
  3231  009A                     	;# 
  3232  009B                     	;# 
  3233  009B                     	;# 
  3234  009C                     	;# 
  3235  009D                     	;# 
  3236  009E                     	;# 
  3237  009F                     	;# 
  3238  010C                     	;# 
  3239  010D                     	;# 
  3240  010E                     	;# 
  3241  0111                     	;# 
  3242  0112                     	;# 
  3243  0113                     	;# 
  3244  0114                     	;# 
  3245  0115                     	;# 
  3246  0116                     	;# 
  3247  0117                     	;# 
  3248  0118                     	;# 
  3249  0119                     	;# 
  3250  011C                     	;# 
  3251  018C                     	;# 
  3252  018D                     	;# 
  3253  018E                     	;# 
  3254  0191                     	;# 
  3255  0191                     	;# 
  3256  0192                     	;# 
  3257  0193                     	;# 
  3258  0193                     	;# 
  3259  0194                     	;# 
  3260  0195                     	;# 
  3261  0196                     	;# 
  3262  0197                     	;# 
  3263  0199                     	;# 
  3264  0199                     	;# 
  3265  0199                     	;# 
  3266  019A                     	;# 
  3267  019A                     	;# 
  3268  019A                     	;# 
  3269  019B                     	;# 
  3270  019B                     	;# 
  3271  019B                     	;# 
  3272  019B                     	;# 
  3273  019B                     	;# 
  3274  019C                     	;# 
  3275  019C                     	;# 
  3276  019C                     	;# 
  3277  019D                     	;# 
  3278  019D                     	;# 
  3279  019D                     	;# 
  3280  019E                     	;# 
  3281  019E                     	;# 
  3282  019E                     	;# 
  3283  019F                     	;# 
  3284  019F                     	;# 
  3285  019F                     	;# 
  3286  019F                     	;# 
  3287  019F                     	;# 
  3288  020C                     	;# 
  3289  020D                     	;# 
  3290  020E                     	;# 
  3291  0211                     	;# 
  3292  0211                     	;# 
  3293  0212                     	;# 
  3294  0212                     	;# 
  3295  0213                     	;# 
  3296  0213                     	;# 
  3297  0214                     	;# 
  3298  0214                     	;# 
  3299  0215                     	;# 
  3300  0215                     	;# 
  3301  0215                     	;# 
  3302  0215                     	;# 
  3303  0216                     	;# 
  3304  0216                     	;# 
  3305  0217                     	;# 
  3306  0217                     	;# 
  3307  028C                     	;# 
  3308  028D                     	;# 
  3309  028E                     	;# 
  3310  0291                     	;# 
  3311  0291                     	;# 
  3312  0292                     	;# 
  3313  0293                     	;# 
  3314  0294                     	;# 
  3315  0298                     	;# 
  3316  0298                     	;# 
  3317  0299                     	;# 
  3318  029A                     	;# 
  3319  029B                     	;# 
  3320  029E                     	;# 
  3321  030C                     	;# 
  3322  030D                     	;# 
  3323  030E                     	;# 
  3324  038C                     	;# 
  3325  038D                     	;# 
  3326  038E                     	;# 
  3327  0391                     	;# 
  3328  0392                     	;# 
  3329  0393                     	;# 
  3330  0394                     	;# 
  3331  0395                     	;# 
  3332  0396                     	;# 
  3333  0397                     	;# 
  3334  0398                     	;# 
  3335  0399                     	;# 
  3336  040E                     	;# 
  3337  0413                     	;# 
  3338  0413                     	;# 
  3339  0414                     	;# 
  3340  0414                     	;# 
  3341  0415                     	;# 
  3342  0416                     	;# 
  3343  0417                     	;# 
  3344  0418                     	;# 
  3345  041A                     	;# 
  3346  041A                     	;# 
  3347  041B                     	;# 
  3348  041B                     	;# 
  3349  041C                     	;# 
  3350  041D                     	;# 
  3351  041E                     	;# 
  3352  041F                     	;# 
  3353  0493                     	;# 
  3354  0494                     	;# 
  3355  0495                     	;# 
  3356  0496                     	;# 
  3357  049A                     	;# 
  3358  049B                     	;# 
  3359  049C                     	;# 
  3360  049D                     	;# 
  3361  058C                     	;# 
  3362  058C                     	;# 
  3363  058D                     	;# 
  3364  058E                     	;# 
  3365  058E                     	;# 
  3366  058F                     	;# 
  3367  0590                     	;# 
  3368  0590                     	;# 
  3369  0591                     	;# 
  3370  0592                     	;# 
  3371  0592                     	;# 
  3372  0593                     	;# 
  3373  0594                     	;# 
  3374  0594                     	;# 
  3375  0595                     	;# 
  3376  0596                     	;# 
  3377  0596                     	;# 
  3378  0597                     	;# 
  3379  0598                     	;# 
  3380  0599                     	;# 
  3381  059A                     	;# 
  3382  059B                     	;# 
  3383  059B                     	;# 
  3384  059C                     	;# 
  3385  059D                     	;# 
  3386  060C                     	;# 
  3387  060C                     	;# 
  3388  060D                     	;# 
  3389  060E                     	;# 
  3390  060F                     	;# 
  3391  060F                     	;# 
  3392  0610                     	;# 
  3393  0611                     	;# 
  3394  0612                     	;# 
  3395  0613                     	;# 
  3396  0614                     	;# 
  3397  0617                     	;# 
  3398  0617                     	;# 
  3399  0618                     	;# 
  3400  0619                     	;# 
  3401  061A                     	;# 
  3402  061A                     	;# 
  3403  061B                     	;# 
  3404  061C                     	;# 
  3405  0691                     	;# 
  3406  0692                     	;# 
  3407  0693                     	;# 
  3408  0694                     	;# 
  3409  0695                     	;# 
  3410  0696                     	;# 
  3411  0697                     	;# 
  3412  0699                     	;# 
  3413  069A                     	;# 
  3414  0711                     	;# 
  3415  0712                     	;# 
  3416  0713                     	;# 
  3417  0714                     	;# 
  3418  0715                     	;# 
  3419  0718                     	;# 
  3420  0718                     	;# 
  3421  0719                     	;# 
  3422  071A                     	;# 
  3423  071A                     	;# 
  3424  071B                     	;# 
  3425  071C                     	;# 
  3426  071D                     	;# 
  3427  0791                     	;# 
  3428  0791                     	;# 
  3429  0792                     	;# 
  3430  0793                     	;# 
  3431  0793                     	;# 
  3432  0794                     	;# 
  3433  0795                     	;# 
  3434  0795                     	;# 
  3435  0796                     	;# 
  3436  0797                     	;# 
  3437  0797                     	;# 
  3438  0798                     	;# 
  3439  0799                     	;# 
  3440  079A                     	;# 
  3441  080C                     	;# 
  3442  080C                     	;# 
  3443  080D                     	;# 
  3444  080E                     	;# 
  3445  080E                     	;# 
  3446  080F                     	;# 
  3447  0810                     	;# 
  3448  0810                     	;# 
  3449  0811                     	;# 
  3450  0812                     	;# 
  3451  0812                     	;# 
  3452  0813                     	;# 
  3453  0814                     	;# 
  3454  0815                     	;# 
  3455  0816                     	;# 
  3456  0817                     	;# 
  3457  0818                     	;# 
  3458  0819                     	;# 
  3459  081A                     	;# 
  3460  081A                     	;# 
  3461  081B                     	;# 
  3462  081C                     	;# 
  3463  081C                     	;# 
  3464  081D                     	;# 
  3465  088C                     	;# 
  3466  088D                     	;# 
  3467  088E                     	;# 
  3468  088F                     	;# 
  3469  088F                     	;# 
  3470  0890                     	;# 
  3471  0891                     	;# 
  3472  0892                     	;# 
  3473  0893                     	;# 
  3474  0893                     	;# 
  3475  0894                     	;# 
  3476  0895                     	;# 
  3477  0896                     	;# 
  3478  0897                     	;# 
  3479  0897                     	;# 
  3480  0898                     	;# 
  3481  0899                     	;# 
  3482  0D8C                     	;# 
  3483  0D8C                     	;# 
  3484  0D8D                     	;# 
  3485  0D8E                     	;# 
  3486  0D8F                     	;# 
  3487  0D8F                     	;# 
  3488  0D90                     	;# 
  3489  0D91                     	;# 
  3490  0D92                     	;# 
  3491  0D92                     	;# 
  3492  0D93                     	;# 
  3493  0D94                     	;# 
  3494  0D95                     	;# 
  3495  0D95                     	;# 
  3496  0D96                     	;# 
  3497  0D97                     	;# 
  3498  0D98                     	;# 
  3499  0D99                     	;# 
  3500  0D9A                     	;# 
  3501  0D9B                     	;# 
  3502  0D9C                     	;# 
  3503  0D9D                     	;# 
  3504  0D9E                     	;# 
  3505  0D9E                     	;# 
  3506  0D9F                     	;# 
  3507  0DA0                     	;# 
  3508  0DA1                     	;# 
  3509  0DA1                     	;# 
  3510  0DA2                     	;# 
  3511  0DA3                     	;# 
  3512  0DA4                     	;# 
  3513  0DA4                     	;# 
  3514  0DA5                     	;# 
  3515  0DA6                     	;# 
  3516  0DA7                     	;# 
  3517  0DA7                     	;# 
  3518  0DA8                     	;# 
  3519  0DA9                     	;# 
  3520  0DAA                     	;# 
  3521  0DAB                     	;# 
  3522  0DAC                     	;# 
  3523  0DAD                     	;# 
  3524  0DAE                     	;# 
  3525  0DAF                     	;# 
  3526  0E0F                     	;# 
  3527  0E10                     	;# 
  3528  0E11                     	;# 
  3529  0E12                     	;# 
  3530  0E13                     	;# 
  3531  0E14                     	;# 
  3532  0E15                     	;# 
  3533  0E16                     	;# 
  3534  0E17                     	;# 
  3535  0E18                     	;# 
  3536  0E19                     	;# 
  3537  0E1A                     	;# 
  3538  0E1B                     	;# 
  3539  0E1C                     	;# 
  3540  0E1D                     	;# 
  3541  0E1E                     	;# 
  3542  0E1F                     	;# 
  3543  0E20                     	;# 
  3544  0E21                     	;# 
  3545  0E22                     	;# 
  3546  0E23                     	;# 
  3547  0E24                     	;# 
  3548  0E25                     	;# 
  3549  0E26                     	;# 
  3550  0E27                     	;# 
  3551  0E28                     	;# 
  3552  0E29                     	;# 
  3553  0E2A                     	;# 
  3554  0E2B                     	;# 
  3555  0E2C                     	;# 
  3556  0E2D                     	;# 
  3557  0E2E                     	;# 
  3558  0E90                     	;# 
  3559  0E91                     	;# 
  3560  0E92                     	;# 
  3561  0E94                     	;# 
  3562  0E95                     	;# 
  3563  0E9C                     	;# 
  3564  0E9D                     	;# 
  3565  0E9E                     	;# 
  3566  0E9F                     	;# 
  3567  0EA0                     	;# 
  3568  0EA1                     	;# 
  3569  0EA2                     	;# 
  3570  0EA3                     	;# 
  3571  0EA4                     	;# 
  3572  0EA5                     	;# 
  3573  0EA6                     	;# 
  3574  0EA7                     	;# 
  3575  0F0F                     	;# 
  3576  0F10                     	;# 
  3577  0F11                     	;# 
  3578  0F12                     	;# 
  3579  0F13                     	;# 
  3580  0F14                     	;# 
  3581  0F15                     	;# 
  3582  0F16                     	;# 
  3583  0F17                     	;# 
  3584  0F18                     	;# 
  3585  0F19                     	;# 
  3586  0F1A                     	;# 
  3587  0F1B                     	;# 
  3588  0F1C                     	;# 
  3589  0F1D                     	;# 
  3590  0F1E                     	;# 
  3591  0F1F                     	;# 
  3592  0F20                     	;# 
  3593  0F21                     	;# 
  3594  0F22                     	;# 
  3595  0F23                     	;# 
  3596  0F24                     	;# 
  3597  0F25                     	;# 
  3598  0F26                     	;# 
  3599  0F27                     	;# 
  3600  0F28                     	;# 
  3601  0F29                     	;# 
  3602  0F2A                     	;# 
  3603  0F2B                     	;# 
  3604  0F2C                     	;# 
  3605  0F2D                     	;# 
  3606  0F2E                     	;# 
  3607  0F2F                     	;# 
  3608  0F30                     	;# 
  3609  0F31                     	;# 
  3610  0F32                     	;# 
  3611  0F33                     	;# 
  3612  0F34                     	;# 
  3613  0F35                     	;# 
  3614  0F36                     	;# 
  3615  0F37                     	;# 
  3616  0FE4                     	;# 
  3617  0FE5                     	;# 
  3618  0FE6                     	;# 
  3619  0FE7                     	;# 
  3620  0FE8                     	;# 
  3621  0FE9                     	;# 
  3622  0FEA                     	;# 
  3623  0FEB                     	;# 
  3624  0FED                     	;# 
  3625  0FEE                     	;# 
  3626  0FEF                     	;# 
  3627                           
  3628 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  3629  0000                     
  3630 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  3631  0000                     
  3632 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  3633  0000                     
  3634                           	psect	stringtext1
  3635  100D                     __pstringtext1:
  3636  100D                     _spi_configuration:
  3637  100D  3400               	retlw	0
  3638  100E  34C0               	retlw	192
  3639  100F  3401               	retlw	1
  3640  1010  3400               	retlw	0
  3641  1011                     __end_of_spi_configuration:
  3642                           
  3643                           	psect	nvBANK1
  3644  00D3                     __pnvBANK1:
  3645  00D3                     _INT_InterruptHandler:
  3646  00D3                     	ds	2
  3647  00D5                     _EUSART_ErrorHandler:
  3648  00D5                     	ds	2
  3649  00D7                     _EUSART_OverrunErrorHandler:
  3650  00D7                     	ds	2
  3651  00D9                     _EUSART_FramingErrorHandler:
  3652  00D9                     	ds	2
  3653  000B                     _INTCONbits	set	11
  3654  0010                     _PIR1bits	set	16
  3655  008E                     _TRISCbits	set	142
  3656  008D                     _TRISBbits	set	141
  3657  0095                     _OPTION_REGbits	set	149
  3658  008E                     _TRISC	set	142
  3659  008D                     _TRISB	set	141
  3660  008C                     _TRISA	set	140
  3661  0098                     _OSCTUNE	set	152
  3662  0099                     _OSCCON	set	153
  3663  010E                     _LATCbits	set	270
  3664  010E                     _LATC	set	270
  3665  010D                     _LATB	set	269
  3666  010C                     _LATA	set	268
  3667  0116                     _BORCON	set	278
  3668  018E                     _ANSELCbits	set	398
  3669  019A                     _TX1REG	set	410
  3670  0199                     _RC1REG	set	409
  3671  019D                     _RC1STAbits	set	413
  3672  019E                     _TX1STAbits	set	414
  3673  019C                     _SPBRGH	set	412
  3674  019B                     _SPBRGL	set	411
  3675  019E                     _TX1STA	set	414
  3676  019D                     _RC1STA	set	413
  3677  019F                     _BAUD1CON	set	415
  3678  018C                     _ANSELA	set	396
  3679  018D                     _ANSELB	set	397
  3680  018E                     _ANSELC	set	398
  3681  0211                     _SSP1BUF	set	529
  3682  0216                     _SSP1CON2	set	534
  3683  0215                     _SSP1CON1bits	set	533
  3684  0212                     _SSP1ADD	set	530
  3685  0215                     _SSP1CON1	set	533
  3686  0214                     _SSP1STAT	set	532
  3687  020E                     _WPUC	set	526
  3688  020C                     _WPUA	set	524
  3689  020D                     _WPUB	set	525
  3690  028E                     _ODCONC	set	654
  3691  028D                     _ODCONB	set	653
  3692  028C                     _ODCONA	set	652
  3693  030E                     _SLRCONC	set	782
  3694  030D                     _SLRCONB	set	781
  3695  030C                     _SLRCONA	set	780
  3696  038E                     _INLVLC	set	910
  3697  038D                     _INLVLB	set	909
  3698  038C                     _INLVLA	set	908
  3699  0E20                     _SSPCLKPPS	set	3616
  3700  0E21                     _SSPDATPPS	set	3617
  3701  0E24                     _RXPPS	set	3620
  3702  0E10                     _INTPPS	set	3600
  3703  0EA4                     _RC4PPS	set	3748
  3704  0E9D                     _RB5PPS	set	3741
  3705  0E9E                     _RB6PPS	set	3742
  3706                           
  3707                           	psect	stringtext2
  3708  1000                     __pstringtext2:
  3709  1000                     STR_1:
  3710  1000  3463               	retlw	99	;'c'
  3711  1001  346F               	retlw	111	;'o'
  3712  1002  3475               	retlw	117	;'u'
  3713  1003  346E               	retlw	110	;'n'
  3714  1004  3474               	retlw	116	;'t'
  3715  1005  3420               	retlw	32	;' '
  3716  1006  343D               	retlw	61	;'='
  3717  1007  3420               	retlw	32	;' '
  3718  1008  3425               	retlw	37	;'%'
  3719  1009  3464               	retlw	100	;'d'
  3720  100A  340D               	retlw	13
  3721  100B  340A               	retlw	10
  3722  100C  3400               	retlw	0
  3723                           
  3724                           	psect	stringtext3
  3725  0000                     __pstringtext3:
  3726                           
  3727                           	psect	cinit
  3728  0015                     start_initialization:	
  3729                           ; #config settings
  3730                           
  3731  0015                     __initialization:
  3732                           
  3733                           ; Clear objects allocated to COMMON
  3734  0015  01F0               	clrf	__pbssCOMMON& (0+127)
  3735  0016  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  3736  0017  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  3737  0018  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  3738  0019  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  3739                           
  3740                           ; Clear objects allocated to BANK1
  3741  001A  30A0               	movlw	low __pbssBANK1
  3742  001B  0084               	movwf	4
  3743  001C  3000               	movlw	high __pbssBANK1
  3744  001D  0085               	movwf	5
  3745  001E  3025               	movlw	37
  3746  001F  318E  26F1  3180   	fcall	clear_ram0
  3747  0022                     end_of_initialization:	
  3748                           ;End of C runtime variable initialization code
  3749                           
  3750  0022                     __end_of__initialization:
  3751  0022  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3752  0023  0020               	movlb	0
  3753  0024  3185  2D3B         	ljmp	_main	;jump to C main() function
  3754                           
  3755                           	psect	bssCOMMON
  3756  0070                     __pbssCOMMON:
  3757  0070                     _prec:
  3758  0070                     	ds	2
  3759  0072                     _flags:
  3760  0072                     	ds	2
  3761  0074                     _PTX:
  3762  0074                     	ds	1
  3763                           
  3764                           	psect	bssBANK1
  3765  00A0                     __pbssBANK1:
  3766  00A0                     _nout:
  3767  00A0                     	ds	2
  3768  00A2                     _width:
  3769  00A2                     	ds	2
  3770  00A4                     _eusartRxLastError:
  3771  00A4                     	ds	1
  3772  00A5                     _dbuf:
  3773  00A5                     	ds	32
  3774                           
  3775                           	psect	clrtext
  3776  0EF1                     clear_ram0:	
  3777                           ;	Called with FSR0 containing the base address, and
  3778                           ;	WREG with the size to clear
  3779                           
  3780  0EF1  0064               	clrwdt	;clear the watchdog before getting into this loop
  3781  0EF2                     clrloop0:
  3782  0EF2  0180               	clrf	0	;clear RAM location pointed to by FSR
  3783  0EF3  3101               	addfsr 0,1
  3784  0EF4  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3785  0EF5  2EF2               	goto	clrloop0	;have we reached the end yet?
  3786  0EF6  3400               	retlw	0	;all done for this memory range, return
  3787                           
  3788                           	psect	cstackBANK1
  3789  00C5                     __pcstackBANK1:
  3790  00C5                     vfprintf@fp:
  3791                           
  3792                           ; 1 bytes @ 0x0
  3793  00C5                     	ds	1
  3794  00C6                     vfprintf@cfmt:
  3795                           
  3796                           ; 2 bytes @ 0x1
  3797  00C6                     	ds	2
  3798  00C8                     ?_printf:
  3799  00C8                     printf@fmt:	
  3800                           ; 2 bytes @ 0x3
  3801                           
  3802                           
  3803                           ; 2 bytes @ 0x3
  3804  00C8                     	ds	6
  3805  00CE                     printf@ap:
  3806                           
  3807                           ; 1 bytes @ 0x9
  3808  00CE                     	ds	1
  3809  00CF                     ??_main:
  3810                           
  3811                           ; 1 bytes @ 0xA
  3812  00CF                     	ds	2
  3813  00D1                     main@seconds:
  3814                           
  3815                           ; 2 bytes @ 0xC
  3816  00D1                     	ds	2
  3817                           
  3818                           	psect	cstackCOMMON
  3819  0075                     __pcstackCOMMON:
  3820  0075                     ?_SPI_Initialize:
  3821  0075                     ?_PIN_MANAGER_Initialize:	
  3822                           ; 1 bytes @ 0x0
  3823                           
  3824  0075                     ?_OSCILLATOR_Initialize:	
  3825                           ; 1 bytes @ 0x0
  3826                           
  3827  0075                     ?_EXT_INT_Initialize:	
  3828                           ; 1 bytes @ 0x0
  3829                           
  3830  0075                     ?_EUSART_Initialize:	
  3831                           ; 1 bytes @ 0x0
  3832                           
  3833  0075                     ?_INT_ISR:	
  3834                           ; 1 bytes @ 0x0
  3835                           
  3836  0075                     ?_INT_CallBack:	
  3837                           ; 1 bytes @ 0x0
  3838                           
  3839  0075                     ?_ISR:	
  3840                           ; 1 bytes @ 0x0
  3841                           
  3842  0075                     ?_wl_module_init:	
  3843                           ; 1 bytes @ 0x0
  3844                           
  3845  0075                     ?_wl_module_rx_config:	
  3846                           ; 1 bytes @ 0x0
  3847                           
  3848  0075                     ?_SYSTEM_Initialize:	
  3849                           ; 1 bytes @ 0x0
  3850                           
  3851  0075                     ?_EUSART_Write:	
  3852                           ; 1 bytes @ 0x0
  3853                           
  3854  0075                     ?_putch:	
  3855                           ; 1 bytes @ 0x0
  3856                           
  3857  0075                     ?_SPI_Open:	
  3858                           ; 1 bytes @ 0x0
  3859                           
  3860  0075                     ?_SPI_ExchangeByte:	
  3861                           ; 1 bytes @ 0x0
  3862                           
  3863  0075                     ?_INTERRUPT_InterruptManager:	
  3864                           ; 1 bytes @ 0x0
  3865                           
  3866  0075                     ?_INT_DefaultInterruptHandler:	
  3867                           ; 1 bytes @ 0x0
  3868                           
  3869  0075                     ??_INT_DefaultInterruptHandler:	
  3870                           ; 1 bytes @ 0x0
  3871                           
  3872  0075                     ?_main:	
  3873                           ; 1 bytes @ 0x0
  3874                           
  3875  0075                     ?i1_SPI_ExchangeByte:	
  3876                           ; 1 bytes @ 0x0
  3877                           
  3878  0075                     ??i1_SPI_ExchangeByte:	
  3879                           ; 1 bytes @ 0x0
  3880                           
  3881  0075                     i1SPI_ExchangeByte@data:	
  3882                           ; 1 bytes @ 0x0
  3883                           
  3884                           
  3885                           ; 1 bytes @ 0x0
  3886  0075                     	ds	1
  3887  0076                     ?i1_wl_module_config_register:
  3888  0076                     i1wl_module_config_register@value:	
  3889                           ; 1 bytes @ 0x1
  3890                           
  3891                           
  3892                           ; 1 bytes @ 0x1
  3893  0076                     	ds	1
  3894  0077                     ??i1_wl_module_config_register:
  3895  0077                     i1wl_module_config_register@reg:	
  3896                           ; 1 bytes @ 0x2
  3897                           
  3898                           
  3899                           ; 1 bytes @ 0x2
  3900  0077                     	ds	1
  3901  0078                     ??_ISR:
  3902                           
  3903                           ; 1 bytes @ 0x3
  3904  0078                     	ds	1
  3905  0079                     ISR@status:
  3906                           
  3907                           ; 1 bytes @ 0x4
  3908  0079                     	ds	1
  3909  007A                     ??_INT_ISR:
  3910  007A                     ??_INT_CallBack:	
  3911                           ; 1 bytes @ 0x5
  3912                           
  3913  007A                     ??_INTERRUPT_InterruptManager:	
  3914                           ; 1 bytes @ 0x5
  3915                           
  3916                           
  3917                           	psect	cstackBANK0
  3918  0020                     __pcstackBANK0:	
  3919                           ; 1 bytes @ 0x5
  3920                           
  3921  0020                     ??_SPI_Initialize:
  3922  0020                     ??_PIN_MANAGER_Initialize:	
  3923                           ; 1 bytes @ 0x0
  3924                           
  3925  0020                     ??_OSCILLATOR_Initialize:	
  3926                           ; 1 bytes @ 0x0
  3927                           
  3928  0020                     ?_EUSART_SetFramingErrorHandler:	
  3929                           ; 1 bytes @ 0x0
  3930                           
  3931  0020                     ?_EUSART_SetOverrunErrorHandler:	
  3932                           ; 1 bytes @ 0x0
  3933                           
  3934  0020                     ?_EUSART_SetErrorHandler:	
  3935                           ; 1 bytes @ 0x0
  3936                           
  3937  0020                     ??_wl_module_init:	
  3938                           ; 1 bytes @ 0x0
  3939                           
  3940  0020                     ??_EUSART_Write:	
  3941                           ; 1 bytes @ 0x0
  3942                           
  3943  0020                     ??_SPI_Open:	
  3944                           ; 1 bytes @ 0x0
  3945                           
  3946  0020                     ??_SPI_ExchangeByte:	
  3947                           ; 1 bytes @ 0x0
  3948                           
  3949  0020                     ?_INT_SetInterruptHandler:	
  3950                           ; 1 bytes @ 0x0
  3951                           
  3952  0020                     ?_strlen:	
  3953                           ; 1 bytes @ 0x0
  3954                           
  3955  0020                     ?___aodiv:	
  3956                           ; 2 bytes @ 0x0
  3957                           
  3958  0020                     ?___aomod:	
  3959                           ; 8 bytes @ 0x0
  3960                           
  3961  0020                     EUSART_Write@txData:	
  3962                           ; 8 bytes @ 0x0
  3963                           
  3964  0020                     SPI_ExchangeByte@data:	
  3965                           ; 1 bytes @ 0x0
  3966                           
  3967  0020                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3968                           ; 1 bytes @ 0x0
  3969                           
  3970  0020                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3971                           ; 2 bytes @ 0x0
  3972                           
  3973  0020                     EUSART_SetErrorHandler@interruptHandler:	
  3974                           ; 2 bytes @ 0x0
  3975                           
  3976  0020                     INT_SetInterruptHandler@InterruptHandler:	
  3977                           ; 2 bytes @ 0x0
  3978                           
  3979  0020                     ___aodiv@divisor:	
  3980                           ; 2 bytes @ 0x0
  3981                           
  3982  0020                     ___aomod@divisor:	
  3983                           ; 8 bytes @ 0x0
  3984                           
  3985                           
  3986                           ; 8 bytes @ 0x0
  3987  0020                     	ds	1
  3988  0021                     ?_wl_module_config_register:
  3989  0021                     ??_putch:	
  3990                           ; 1 bytes @ 0x1
  3991                           
  3992  0021                     ?_SPI_WriteBlock:	
  3993                           ; 1 bytes @ 0x1
  3994                           
  3995  0021                     putch@txData:	
  3996                           ; 1 bytes @ 0x1
  3997                           
  3998  0021                     wl_module_config_register@value:	
  3999                           ; 1 bytes @ 0x1
  4000                           
  4001  0021                     SPI_WriteBlock@block:	
  4002                           ; 1 bytes @ 0x1
  4003                           
  4004                           
  4005                           ; 2 bytes @ 0x1
  4006  0021                     	ds	1
  4007  0022                     ??_EXT_INT_Initialize:
  4008  0022                     ??_EUSART_Initialize:	
  4009                           ; 1 bytes @ 0x2
  4010                           
  4011  0022                     ??_EUSART_SetFramingErrorHandler:	
  4012                           ; 1 bytes @ 0x2
  4013                           
  4014  0022                     ??_EUSART_SetOverrunErrorHandler:	
  4015                           ; 1 bytes @ 0x2
  4016                           
  4017  0022                     ??_EUSART_SetErrorHandler:	
  4018                           ; 1 bytes @ 0x2
  4019                           
  4020  0022                     ??_wl_module_config_register:	
  4021                           ; 1 bytes @ 0x2
  4022                           
  4023  0022                     ??_strlen:	
  4024                           ; 1 bytes @ 0x2
  4025                           
  4026  0022                     ??_SYSTEM_Initialize:	
  4027                           ; 1 bytes @ 0x2
  4028                           
  4029  0022                     ??_INT_SetInterruptHandler:	
  4030                           ; 1 bytes @ 0x2
  4031                           
  4032  0022                     ?_fputc:	
  4033                           ; 1 bytes @ 0x2
  4034                           
  4035  0022                     wl_module_config_register@reg:	
  4036                           ; 2 bytes @ 0x2
  4037                           
  4038  0022                     fputc@c:	
  4039                           ; 1 bytes @ 0x2
  4040                           
  4041                           
  4042                           ; 2 bytes @ 0x2
  4043  0022                     	ds	1
  4044  0023                     SPI_Open@spiUniqueConfiguration:
  4045  0023                     strlen@a:	
  4046                           ; 1 bytes @ 0x3
  4047                           
  4048  0023                     SPI_WriteBlock@blockSize:	
  4049                           ; 1 bytes @ 0x3
  4050                           
  4051                           
  4052                           ; 2 bytes @ 0x3
  4053  0023                     	ds	1
  4054  0024                     fputc@fp:
  4055  0024                     strlen@s:	
  4056                           ; 1 bytes @ 0x4
  4057                           
  4058                           
  4059                           ; 1 bytes @ 0x4
  4060  0024                     	ds	1
  4061  0025                     ??_fputc:
  4062  0025                     ??_SPI_WriteBlock:	
  4063                           ; 1 bytes @ 0x5
  4064                           
  4065  0025                     SPI_WriteBlock@data:	
  4066                           ; 1 bytes @ 0x5
  4067                           
  4068                           
  4069                           ; 2 bytes @ 0x5
  4070  0025                     	ds	2
  4071  0027                     ?_wl_module_write_register:
  4072  0027                     wl_module_write_register@value:	
  4073                           ; 1 bytes @ 0x7
  4074                           
  4075                           
  4076                           ; 2 bytes @ 0x7
  4077  0027                     	ds	1
  4078  0028                     ___aodiv@dividend:
  4079  0028                     ___aomod@dividend:	
  4080                           ; 8 bytes @ 0x8
  4081                           
  4082                           
  4083                           ; 8 bytes @ 0x8
  4084  0028                     	ds	1
  4085  0029                     wl_module_write_register@len:
  4086                           
  4087                           ; 1 bytes @ 0x9
  4088  0029                     	ds	1
  4089  002A                     ??_wl_module_write_register:
  4090  002A                     ?_fputs:	
  4091                           ; 1 bytes @ 0xA
  4092                           
  4093  002A                     fputs@fp:	
  4094                           ; 2 bytes @ 0xA
  4095                           
  4096                           
  4097                           ; 1 bytes @ 0xA
  4098  002A                     	ds	1
  4099  002B                     ??_fputs:
  4100                           
  4101                           ; 1 bytes @ 0xB
  4102  002B                     	ds	1
  4103  002C                     wl_module_write_register@reg:
  4104                           
  4105                           ; 1 bytes @ 0xC
  4106  002C                     	ds	1
  4107  002D                     ?_wl_module_set_rx_addr:
  4108  002D                     wl_module_set_rx_addr@len:	
  4109                           ; 1 bytes @ 0xD
  4110                           
  4111                           
  4112                           ; 1 bytes @ 0xD
  4113  002D                     	ds	1
  4114  002E                     wl_module_set_rx_addr@rxpipenum:
  4115  002E                     fputs@c:	
  4116                           ; 1 bytes @ 0xE
  4117                           
  4118                           
  4119                           ; 1 bytes @ 0xE
  4120  002E                     	ds	1
  4121  002F                     ??_wl_module_set_rx_addr:
  4122  002F                     fputs@i:	
  4123                           ; 1 bytes @ 0xF
  4124                           
  4125                           
  4126                           ; 2 bytes @ 0xF
  4127  002F                     	ds	1
  4128  0030                     ??___aodiv:
  4129  0030                     ??___aomod:	
  4130                           ; 1 bytes @ 0x10
  4131                           
  4132  0030                     wl_module_set_rx_addr@address:	
  4133                           ; 1 bytes @ 0x10
  4134                           
  4135                           
  4136                           ; 1 bytes @ 0x10
  4137  0030                     	ds	1
  4138  0031                     ??_wl_module_rx_config:
  4139  0031                     ___aodiv@counter:	
  4140                           ; 1 bytes @ 0x11
  4141                           
  4142  0031                     ___aomod@counter:	
  4143                           ; 1 bytes @ 0x11
  4144                           
  4145  0031                     fputs@s:	
  4146                           ; 1 bytes @ 0x11
  4147                           
  4148                           
  4149                           ; 1 bytes @ 0x11
  4150  0031                     	ds	1
  4151  0032                     ?_pad:
  4152  0032                     ___aodiv@sign:	
  4153                           ; 2 bytes @ 0x12
  4154                           
  4155  0032                     ___aomod@sign:	
  4156                           ; 1 bytes @ 0x12
  4157                           
  4158  0032                     pad@buf:	
  4159                           ; 1 bytes @ 0x12
  4160                           
  4161  0032                     wl_module_rx_config@data:	
  4162                           ; 1 bytes @ 0x12
  4163                           
  4164                           
  4165                           ; 5 bytes @ 0x12
  4166  0032                     	ds	1
  4167  0033                     ?_abs:
  4168  0033                     pad@p:	
  4169                           ; 2 bytes @ 0x13
  4170                           
  4171  0033                     abs@a:	
  4172                           ; 2 bytes @ 0x13
  4173                           
  4174  0033                     ___aodiv@quotient:	
  4175                           ; 2 bytes @ 0x13
  4176                           
  4177                           
  4178                           ; 8 bytes @ 0x13
  4179  0033                     	ds	2
  4180  0035                     ??_abs:
  4181  0035                     ??_pad:	
  4182                           ; 1 bytes @ 0x15
  4183                           
  4184                           
  4185                           ; 1 bytes @ 0x15
  4186  0035                     	ds	1
  4187  0036                     pad@i:
  4188                           
  4189                           ; 2 bytes @ 0x16
  4190  0036                     	ds	2
  4191  0038                     pad@w:
  4192                           
  4193                           ; 2 bytes @ 0x18
  4194  0038                     	ds	2
  4195  003A                     pad@fp:
  4196                           
  4197                           ; 1 bytes @ 0x1A
  4198  003A                     	ds	1
  4199  003B                     ?_dtoa:
  4200  003B                     dtoa@d:	
  4201                           ; 2 bytes @ 0x1B
  4202                           
  4203                           
  4204                           ; 8 bytes @ 0x1B
  4205  003B                     	ds	8
  4206  0043                     ??_dtoa:
  4207                           
  4208                           ; 1 bytes @ 0x23
  4209  0043                     	ds	3
  4210  0046                     _dtoa$1180:
  4211                           
  4212                           ; 2 bytes @ 0x26
  4213  0046                     	ds	2
  4214  0048                     dtoa@fp:
  4215                           
  4216                           ; 1 bytes @ 0x28
  4217  0048                     	ds	1
  4218  0049                     dtoa@p:
  4219                           
  4220                           ; 2 bytes @ 0x29
  4221  0049                     	ds	2
  4222  004B                     dtoa@w:
  4223                           
  4224                           ; 2 bytes @ 0x2B
  4225  004B                     	ds	2
  4226  004D                     dtoa@s:
  4227                           
  4228                           ; 2 bytes @ 0x2D
  4229  004D                     	ds	2
  4230  004F                     dtoa@n:
  4231                           
  4232                           ; 8 bytes @ 0x2F
  4233  004F                     	ds	8
  4234  0057                     dtoa@i:
  4235                           
  4236                           ; 2 bytes @ 0x37
  4237  0057                     	ds	2
  4238  0059                     ?_vfpfcnvrt:
  4239  0059                     vfpfcnvrt@fmt:	
  4240                           ; 2 bytes @ 0x39
  4241                           
  4242                           
  4243                           ; 1 bytes @ 0x39
  4244  0059                     	ds	1
  4245  005A                     vfpfcnvrt@ap:
  4246                           
  4247                           ; 1 bytes @ 0x3A
  4248  005A                     	ds	1
  4249  005B                     ??_vfpfcnvrt:
  4250                           
  4251                           ; 1 bytes @ 0x3B
  4252  005B                     	ds	5
  4253  0060                     vfpfcnvrt@ll:
  4254                           
  4255                           ; 8 bytes @ 0x40
  4256  0060                     	ds	8
  4257  0068                     vfpfcnvrt@fp:
  4258                           
  4259                           ; 1 bytes @ 0x48
  4260  0068                     	ds	1
  4261  0069                     ?_vfprintf:
  4262  0069                     vfprintf@fmt:	
  4263                           ; 2 bytes @ 0x49
  4264                           
  4265                           
  4266                           ; 2 bytes @ 0x49
  4267  0069                     	ds	2
  4268  006B                     vfprintf@ap:
  4269                           
  4270                           ; 1 bytes @ 0x4B
  4271  006B                     	ds	1
  4272  006C                     ??_vfprintf:
  4273                           
  4274                           ; 1 bytes @ 0x4C
  4275  006C                     	ds	2
  4276  006E                     ??_printf:
  4277                           
  4278                           ; 1 bytes @ 0x4E
  4279  006E                     	ds	1
  4280                           
  4281                           	psect	maintext
  4282  053B                     __pmaintext:	
  4283 ;;
  4284 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4285 ;;
  4286 ;; *************** function _main *****************
  4287 ;; Defined at:
  4288 ;;		line 51 in file "main.c"
  4289 ;; Parameters:    Size  Location     Type
  4290 ;;		None
  4291 ;; Auto vars:     Size  Location     Type
  4292 ;;  payload        32    0        unsigned char [32]
  4293 ;;  seconds         2   12[BANK1 ] int 
  4294 ;;  nRF_status      1    0        unsigned char 
  4295 ;; Return value:  Size  Location     Type
  4296 ;;                  1    wreg      void 
  4297 ;; Registers used:
  4298 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4299 ;; Tracked objects:
  4300 ;;		On entry : B1F/0
  4301 ;;		On exit  : 0/0
  4302 ;;		Unchanged: 0/0
  4303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4305 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4306 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4307 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4308 ;;Total ram usage:        4 bytes
  4309 ;; Hardware stack levels required when called:   15
  4310 ;; This function calls:
  4311 ;;		_INT_SetInterruptHandler
  4312 ;;		_SPI_Open
  4313 ;;		_SYSTEM_Initialize
  4314 ;;		_printf
  4315 ;;		_wl_module_init
  4316 ;;		_wl_module_rx_config
  4317 ;; This function is called by:
  4318 ;;		Startup code after reset
  4319 ;; This function uses a non-reentrant model
  4320 ;;
  4321                           
  4322                           
  4323                           ;psect for function _main
  4324  053B                     _main:
  4325  053B                     l3134:	
  4326                           ;incstack = 0
  4327                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4328                           
  4329                           
  4330                           ;main.c: 54:     SYSTEM_Initialize();
  4331  053B  318F  2781  3185   	fcall	_SYSTEM_Initialize
  4332  053E                     l3136:
  4333                           
  4334                           ;main.c: 60:     (INTCONbits.GIE = 1);
  4335  053E  178B               	bsf	11,7	;volatile
  4336  053F                     l3138:
  4337                           
  4338                           ;main.c: 63:     (INTCONbits.PEIE = 1);
  4339  053F  170B               	bsf	11,6	;volatile
  4340  0540                     l3140:
  4341                           
  4342                           ;main.c: 71:     int seconds = 0;
  4343  0540  0021               	movlb	1	; select bank1
  4344  0541  01D1               	clrf	main@seconds^(0+128)
  4345  0542  01D2               	clrf	(main@seconds+1)^(0+128)
  4346  0543                     l3142:
  4347                           
  4348                           ;main.c: 72:     SPI_Open(SPI_DEFAULT);
  4349  0543  3000               	movlw	0
  4350  0544  3185  25BF  3185   	fcall	_SPI_Open
  4351  0547                     l3144:
  4352                           
  4353                           ;main.c: 74:     INT_SetInterruptHandler(ISR);
  4354  0547  30EA               	movlw	low _ISR
  4355  0548  0020               	movlb	0	; select bank0
  4356  0549  00A0               	movwf	INT_SetInterruptHandler@InterruptHandler
  4357  054A  3006               	movlw	high _ISR
  4358  054B  00A1               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  4359  054C  318F  2720  3185   	fcall	_INT_SetInterruptHandler
  4360  054F                     l3146:
  4361                           
  4362                           ;main.c: 76:     unsigned char payload[32];;main.c: 77:     unsigned char nRF_status;;ma
      +                          in.c: 79:     wl_module_init();
  4363  054F  318F  2729  3185   	fcall	_wl_module_init
  4364  0552                     l3148:
  4365                           
  4366                           ;main.c: 80:     _delay((unsigned long)((50)*(16000000/4000.0)));
  4367  0552  3002               	movlw	2
  4368  0553  0021               	movlb	1	; select bank1
  4369  0554  00D0               	movwf	(??_main^(0+128)+1)
  4370  0555  3004               	movlw	4
  4371  0556  00CF               	movwf	??_main^(0+128)
  4372  0557  30BA               	movlw	186
  4373  0558                     u2427:
  4374  0558  0B89               	decfsz	9,f
  4375  0559  2D58               	goto	u2427
  4376  055A  0BCF               	decfsz	??_main^(0+128),f
  4377  055B  2D58               	goto	u2427
  4378  055C  0BD0               	decfsz	(??_main^(0+128)+1),f
  4379  055D  2D58               	goto	u2427
  4380  055E  0000               	nop
  4381  055F                     l3150:
  4382                           
  4383                           ;main.c: 81:     wl_module_rx_config();
  4384  055F  3183  237A  3185   	fcall	_wl_module_rx_config
  4385  0562                     l3152:
  4386                           
  4387                           ;main.c: 82:     _delay((unsigned long)((50)*(16000000/4000.0)));
  4388  0562  3002               	movlw	2
  4389  0563  0021               	movlb	1	; select bank1
  4390  0564  00D0               	movwf	(??_main^(0+128)+1)
  4391  0565  3004               	movlw	4
  4392  0566  00CF               	movwf	??_main^(0+128)
  4393  0567  30BA               	movlw	186
  4394  0568                     u2437:
  4395  0568  0B89               	decfsz	9,f
  4396  0569  2D68               	goto	u2437
  4397  056A  0BCF               	decfsz	??_main^(0+128),f
  4398  056B  2D68               	goto	u2437
  4399  056C  0BD0               	decfsz	(??_main^(0+128)+1),f
  4400  056D  2D68               	goto	u2437
  4401  056E  0000               	nop
  4402  056F                     l3154:
  4403                           
  4404                           ;main.c: 87:     {;main.c: 99:         _delay((unsigned long)((500)*(16000000/4000.0)));
  4405  056F  300B               	movlw	11
  4406  0570  0021               	movlb	1	; select bank1
  4407  0571  00D0               	movwf	(??_main^(0+128)+1)
  4408  0572  3026               	movlw	38
  4409  0573  00CF               	movwf	??_main^(0+128)
  4410  0574  305D               	movlw	93
  4411  0575                     u2447:
  4412  0575  0B89               	decfsz	9,f
  4413  0576  2D75               	goto	u2447
  4414  0577  0BCF               	decfsz	??_main^(0+128),f
  4415  0578  2D75               	goto	u2447
  4416  0579  0BD0               	decfsz	(??_main^(0+128)+1),f
  4417  057A  2D75               	goto	u2447
  4418  057B  3200               	nop2
  4419  057C                     l3156:
  4420  057C  1003               	clrc
  4421  057D  0022               	movlb	2	; select bank2
  4422  057E  1C0E               	btfss	14,0	;volatile
  4423  057F  1403               	setc
  4424  0580  1803               	btfsc	3,0
  4425  0581  2D83               	goto	u2281
  4426  0582  2D86               	goto	u2280
  4427  0583                     u2281:
  4428  0583  0022               	movlb	2	; select bank2
  4429  0584  140E               	bsf	14,0	;volatile
  4430  0585  2D88               	goto	u2294
  4431  0586                     u2280:
  4432  0586  0022               	movlb	2	; select bank2
  4433  0587  100E               	bcf	14,0	;volatile
  4434  0588                     u2294:
  4435  0588                     l3158:
  4436  0588  1003               	clrc
  4437  0589  1C8E               	btfss	14,1	;volatile
  4438  058A  1403               	setc
  4439  058B  1803               	btfsc	3,0
  4440  058C  2D8E               	goto	u2301
  4441  058D  2D91               	goto	u2300
  4442  058E                     u2301:
  4443  058E  0022               	movlb	2	; select bank2
  4444  058F  148E               	bsf	14,1	;volatile
  4445  0590  2D93               	goto	u2314
  4446  0591                     u2300:
  4447  0591  0022               	movlb	2	; select bank2
  4448  0592  108E               	bcf	14,1	;volatile
  4449  0593                     u2314:
  4450  0593                     l3160:
  4451  0593  1003               	clrc
  4452  0594  1D0E               	btfss	14,2	;volatile
  4453  0595  1403               	setc
  4454  0596  1803               	btfsc	3,0
  4455  0597  2D99               	goto	u2321
  4456  0598  2D9C               	goto	u2320
  4457  0599                     u2321:
  4458  0599  0022               	movlb	2	; select bank2
  4459  059A  150E               	bsf	14,2	;volatile
  4460  059B  2D9E               	goto	u2334
  4461  059C                     u2320:
  4462  059C  0022               	movlb	2	; select bank2
  4463  059D  110E               	bcf	14,2	;volatile
  4464  059E                     u2334:
  4465  059E                     l3162:
  4466                           
  4467                           ;main.c: 103:         printf("count = %d\r\n",seconds);
  4468  059E  3000               	movlw	low (STR_1| (0+32768))
  4469  059F  0021               	movlb	1	; select bank1
  4470  05A0  00C8               	movwf	printf@fmt^(0+128)
  4471  05A1  3090               	movlw	high (STR_1| (0+32768))
  4472  05A2  00C9               	movwf	(printf@fmt^(0+128)+1)
  4473  05A3  0852               	movf	(main@seconds+1)^(0+128),w
  4474  05A4  00CB               	movwf	((?_printf+1)^(0+128)+2)
  4475  05A5  0851               	movf	main@seconds^(0+128),w
  4476  05A6  00CA               	movwf	(?_printf^(0+128)+2)
  4477  05A7  318F  27B9  3185   	fcall	_printf
  4478  05AA                     l3164:
  4479                           
  4480                           ;main.c: 104:         seconds += 1;
  4481  05AA  3001               	movlw	1
  4482  05AB  0021               	movlb	1	; select bank1
  4483  05AC  07D1               	addwf	main@seconds^(0+128),f
  4484  05AD  3000               	movlw	0
  4485  05AE  3DD2               	addwfc	(main@seconds+1)^(0+128),f
  4486  05AF                     l3166:
  4487                           
  4488                           ;main.c: 105:         _delay((unsigned long)((500)*(16000000/4000.0)));
  4489  05AF  300B               	movlw	11
  4490  05B0  0021               	movlb	1	; select bank1
  4491  05B1  00D0               	movwf	(??_main^(0+128)+1)
  4492  05B2  3026               	movlw	38
  4493  05B3  00CF               	movwf	??_main^(0+128)
  4494  05B4  305D               	movlw	93
  4495  05B5                     u2457:
  4496  05B5  0B89               	decfsz	9,f
  4497  05B6  2DB5               	goto	u2457
  4498  05B7  0BCF               	decfsz	??_main^(0+128),f
  4499  05B8  2DB5               	goto	u2457
  4500  05B9  0BD0               	decfsz	(??_main^(0+128)+1),f
  4501  05BA  2DB5               	goto	u2457
  4502  05BB  3200               	nop2
  4503  05BC  2D6F               	goto	l3154
  4504  05BD  3180  2813         	ljmp	start
  4505  05BF                     __end_of_main:
  4506                           
  4507                           	psect	text1
  4508  037A                     __ptext1:	
  4509 ;; *************** function _wl_module_rx_config *****************
  4510 ;; Defined at:
  4511 ;;		line 82 in file "wl_module.c"
  4512 ;; Parameters:    Size  Location     Type
  4513 ;;		None
  4514 ;; Auto vars:     Size  Location     Type
  4515 ;;  data            5   18[BANK0 ] unsigned char [5]
  4516 ;; Return value:  Size  Location     Type
  4517 ;;                  1    wreg      void 
  4518 ;; Registers used:
  4519 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4520 ;; Tracked objects:
  4521 ;;		On entry : 0/0
  4522 ;;		On exit  : 0/0
  4523 ;;		Unchanged: 0/0
  4524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4526 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4527 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4528 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4529 ;;Total ram usage:        6 bytes
  4530 ;; Hardware stack levels used:    1
  4531 ;; Hardware stack levels required when called:   10
  4532 ;; This function calls:
  4533 ;;		_wl_module_config_register
  4534 ;;		_wl_module_set_rx_addr
  4535 ;; This function is called by:
  4536 ;;		_main
  4537 ;; This function uses a non-reentrant model
  4538 ;;
  4539                           
  4540                           
  4541                           ;psect for function _wl_module_rx_config
  4542  037A                     _wl_module_rx_config:
  4543  037A                     l3086:	
  4544                           ;incstack = 0
  4545                           ; Regs used in _wl_module_rx_config: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4546                           
  4547  037A  0022               	movlb	2	; select bank2
  4548  037B  128E               	bcf	14,5	;volatile
  4549  037C                     l3088:
  4550                           
  4551                           ;wl_module.c: 86:  unsigned char data[5];;wl_module.c: 87:     wl_module_config_register
      +                          (0x01 , 0x00);
  4552  037C  0020               	movlb	0	; select bank0
  4553  037D  01A1               	clrf	wl_module_config_register@value
  4554  037E  3001               	movlw	1
  4555  037F  318F  2791  3183   	fcall	_wl_module_config_register
  4556                           
  4557                           ;wl_module.c: 88:     wl_module_config_register(0x04,(0x00 | 0x00));
  4558  0382  0020               	movlb	0	; select bank0
  4559  0383  01A1               	clrf	wl_module_config_register@value
  4560  0384  3004               	movlw	4
  4561  0385  318F  2791  3183   	fcall	_wl_module_config_register
  4562                           
  4563                           ;wl_module.c: 89:     wl_module_config_register(0x00, ( (1<<6) | (1<<3) | (1<<2) ));
  4564  0388  304C               	movlw	76
  4565  0389  0020               	movlb	0	; select bank0
  4566  038A  00B1               	movwf	??_wl_module_rx_config
  4567  038B  0831               	movf	??_wl_module_rx_config,w
  4568  038C  00A1               	movwf	wl_module_config_register@value
  4569  038D  3000               	movlw	0
  4570  038E  318F  2791  3183   	fcall	_wl_module_config_register
  4571                           
  4572                           ;wl_module.c: 91:     wl_module_config_register(0x05,2);
  4573  0391  3002               	movlw	2
  4574  0392  0020               	movlb	0	; select bank0
  4575  0393  00B1               	movwf	??_wl_module_rx_config
  4576  0394  0831               	movf	??_wl_module_rx_config,w
  4577  0395  00A1               	movwf	wl_module_config_register@value
  4578  0396  3005               	movlw	5
  4579  0397  318F  2791  3183   	fcall	_wl_module_config_register
  4580                           
  4581                           ;wl_module.c: 93:  wl_module_config_register(0x06,(0x06 | 0x00));
  4582  039A  3006               	movlw	6
  4583  039B  0020               	movlb	0	; select bank0
  4584  039C  00B1               	movwf	??_wl_module_rx_config
  4585  039D  0831               	movf	??_wl_module_rx_config,w
  4586  039E  00A1               	movwf	wl_module_config_register@value
  4587  039F  3006               	movlw	6
  4588  03A0  318F  2791  3183   	fcall	_wl_module_config_register
  4589                           
  4590                           ;wl_module.c: 95:  wl_module_config_register(0x02, 0x3F);
  4591  03A3  303F               	movlw	63
  4592  03A4  0020               	movlb	0	; select bank0
  4593  03A5  00B1               	movwf	??_wl_module_rx_config
  4594  03A6  0831               	movf	??_wl_module_rx_config,w
  4595  03A7  00A1               	movwf	wl_module_config_register@value
  4596  03A8  3002               	movlw	2
  4597  03A9  318F  2791  3183   	fcall	_wl_module_config_register
  4598  03AC                     l3090:
  4599                           
  4600                           ;wl_module.c: 97:  data[0]= data[1]= data[2]= data[3]= data[4]= 0x32;
  4601  03AC  3001               	movlw	1
  4602  03AD  3E32               	addlw	(low (wl_module_rx_config@data| 0))& (0+255)
  4603  03AE  0086               	movwf	6
  4604  03AF  0187               	clrf	7
  4605  03B0  3002               	movlw	2
  4606  03B1  3E32               	addlw	(low (wl_module_rx_config@data| 0))& (0+255)
  4607  03B2  0084               	movwf	4
  4608  03B3  0185               	clrf	5
  4609  03B4  3032               	movlw	50
  4610  03B5  0020               	movlb	0	; select bank0
  4611  03B6  00B6               	movwf	wl_module_rx_config@data+4
  4612  03B7  00B5               	movwf	wl_module_rx_config@data+3
  4613  03B8  3F80               	movwi [0]fsr0
  4614  03B9  3FC0               	movwi [0]fsr1
  4615  03BA  00B1               	movwf	??_wl_module_rx_config
  4616  03BB  0831               	movf	??_wl_module_rx_config,w
  4617  03BC  00B2               	movwf	wl_module_rx_config@data
  4618  03BD                     l3092:
  4619                           
  4620                           ;wl_module.c: 98:  wl_module_set_rx_addr(data, 5, 0);
  4621  03BD  3005               	movlw	5
  4622  03BE  00B1               	movwf	??_wl_module_rx_config
  4623  03BF  0831               	movf	??_wl_module_rx_config,w
  4624  03C0  00AD               	movwf	wl_module_set_rx_addr@len
  4625  03C1  01AE               	clrf	wl_module_set_rx_addr@rxpipenum
  4626  03C2  3032               	movlw	(low (wl_module_rx_config@data| 0))& (0+255)
  4627  03C3  318F  27CF  3183   	fcall	_wl_module_set_rx_addr
  4628  03C6                     l3094:
  4629                           
  4630                           ;wl_module.c: 100:  data[0]= data[1]= data[2]= data[3]= data[4]= 0x30;
  4631  03C6  3001               	movlw	1
  4632  03C7  3E32               	addlw	(low (wl_module_rx_config@data| 0))& (0+255)
  4633  03C8  0086               	movwf	6
  4634  03C9  0187               	clrf	7
  4635  03CA  3002               	movlw	2
  4636  03CB  3E32               	addlw	(low (wl_module_rx_config@data| 0))& (0+255)
  4637  03CC  0084               	movwf	4
  4638  03CD  0185               	clrf	5
  4639  03CE  3030               	movlw	48
  4640  03CF  0020               	movlb	0	; select bank0
  4641  03D0  00B6               	movwf	wl_module_rx_config@data+4
  4642  03D1  00B5               	movwf	wl_module_rx_config@data+3
  4643  03D2  3F80               	movwi [0]fsr0
  4644  03D3  3FC0               	movwi [0]fsr1
  4645  03D4  00B1               	movwf	??_wl_module_rx_config
  4646  03D5  0831               	movf	??_wl_module_rx_config,w
  4647  03D6  00B2               	movwf	wl_module_rx_config@data
  4648  03D7                     l3096:
  4649                           
  4650                           ;wl_module.c: 101:  wl_module_set_rx_addr(data, 5, 1);
  4651  03D7  3005               	movlw	5
  4652  03D8  00B1               	movwf	??_wl_module_rx_config
  4653  03D9  0831               	movf	??_wl_module_rx_config,w
  4654  03DA  00AD               	movwf	wl_module_set_rx_addr@len
  4655  03DB  01AE               	clrf	wl_module_set_rx_addr@rxpipenum
  4656  03DC  0AAE               	incf	wl_module_set_rx_addr@rxpipenum,f
  4657  03DD  3032               	movlw	(low (wl_module_rx_config@data| 0))& (0+255)
  4658  03DE  318F  27CF  3183   	fcall	_wl_module_set_rx_addr
  4659  03E1                     l3098:
  4660                           
  4661                           ;wl_module.c: 103:  data[0]=0xC3;
  4662  03E1  30C3               	movlw	195
  4663  03E2  0020               	movlb	0	; select bank0
  4664  03E3  00B1               	movwf	??_wl_module_rx_config
  4665  03E4  0831               	movf	??_wl_module_rx_config,w
  4666  03E5  00B2               	movwf	wl_module_rx_config@data
  4667  03E6                     l3100:
  4668                           
  4669                           ;wl_module.c: 104:  wl_module_set_rx_addr(data, 1, 2);
  4670  03E6  01AD               	clrf	wl_module_set_rx_addr@len
  4671  03E7  0AAD               	incf	wl_module_set_rx_addr@len,f
  4672  03E8  3002               	movlw	2
  4673  03E9  00B1               	movwf	??_wl_module_rx_config
  4674  03EA  0831               	movf	??_wl_module_rx_config,w
  4675  03EB  00AE               	movwf	wl_module_set_rx_addr@rxpipenum
  4676  03EC  3032               	movlw	(low (wl_module_rx_config@data| 0))& (0+255)
  4677  03ED  318F  27CF  3183   	fcall	_wl_module_set_rx_addr
  4678  03F0                     l3102:
  4679                           
  4680                           ;wl_module.c: 105:  data[0]=0xC4;
  4681  03F0  30C4               	movlw	196
  4682  03F1  0020               	movlb	0	; select bank0
  4683  03F2  00B1               	movwf	??_wl_module_rx_config
  4684  03F3  0831               	movf	??_wl_module_rx_config,w
  4685  03F4  00B2               	movwf	wl_module_rx_config@data
  4686  03F5                     l3104:
  4687                           
  4688                           ;wl_module.c: 106:  wl_module_set_rx_addr(data, 1, 3);
  4689  03F5  01AD               	clrf	wl_module_set_rx_addr@len
  4690  03F6  0AAD               	incf	wl_module_set_rx_addr@len,f
  4691  03F7  3003               	movlw	3
  4692  03F8  00B1               	movwf	??_wl_module_rx_config
  4693  03F9  0831               	movf	??_wl_module_rx_config,w
  4694  03FA  00AE               	movwf	wl_module_set_rx_addr@rxpipenum
  4695  03FB  3032               	movlw	(low (wl_module_rx_config@data| 0))& (0+255)
  4696  03FC  318F  27CF  3183   	fcall	_wl_module_set_rx_addr
  4697  03FF                     l3106:
  4698                           
  4699                           ;wl_module.c: 107:  data[0]=0xC5;
  4700  03FF  30C5               	movlw	197
  4701  0400  0020               	movlb	0	; select bank0
  4702  0401  00B1               	movwf	??_wl_module_rx_config
  4703  0402  0831               	movf	??_wl_module_rx_config,w
  4704  0403  00B2               	movwf	wl_module_rx_config@data
  4705  0404                     l3108:
  4706                           
  4707                           ;wl_module.c: 108:  wl_module_set_rx_addr(data, 1, 4);
  4708  0404  01AD               	clrf	wl_module_set_rx_addr@len
  4709  0405  0AAD               	incf	wl_module_set_rx_addr@len,f
  4710  0406  3004               	movlw	4
  4711  0407  00B1               	movwf	??_wl_module_rx_config
  4712  0408  0831               	movf	??_wl_module_rx_config,w
  4713  0409  00AE               	movwf	wl_module_set_rx_addr@rxpipenum
  4714  040A  3032               	movlw	(low (wl_module_rx_config@data| 0))& (0+255)
  4715  040B  318F  27CF  3183   	fcall	_wl_module_set_rx_addr
  4716  040E                     l3110:
  4717                           
  4718                           ;wl_module.c: 109:  data[0]=0xC6;
  4719  040E  30C6               	movlw	198
  4720  040F  0020               	movlb	0	; select bank0
  4721  0410  00B1               	movwf	??_wl_module_rx_config
  4722  0411  0831               	movf	??_wl_module_rx_config,w
  4723  0412  00B2               	movwf	wl_module_rx_config@data
  4724  0413                     l3112:
  4725                           
  4726                           ;wl_module.c: 110:  wl_module_set_rx_addr(data, 1, 5);
  4727  0413  01AD               	clrf	wl_module_set_rx_addr@len
  4728  0414  0AAD               	incf	wl_module_set_rx_addr@len,f
  4729  0415  3005               	movlw	5
  4730  0416  00B1               	movwf	??_wl_module_rx_config
  4731  0417  0831               	movf	??_wl_module_rx_config,w
  4732  0418  00AE               	movwf	wl_module_set_rx_addr@rxpipenum
  4733  0419  3032               	movlw	(low (wl_module_rx_config@data| 0))& (0+255)
  4734  041A  318F  27CF  3183   	fcall	_wl_module_set_rx_addr
  4735                           
  4736                           ;wl_module.c: 112:     wl_module_config_register(0x11, 32);
  4737  041D  3020               	movlw	32
  4738  041E  0020               	movlb	0	; select bank0
  4739  041F  00B1               	movwf	??_wl_module_rx_config
  4740  0420  0831               	movf	??_wl_module_rx_config,w
  4741  0421  00A1               	movwf	wl_module_config_register@value
  4742  0422  3011               	movlw	17
  4743  0423  318F  2791  3183   	fcall	_wl_module_config_register
  4744                           
  4745                           ;wl_module.c: 113:  wl_module_config_register(0x12, 32);
  4746  0426  3020               	movlw	32
  4747  0427  0020               	movlb	0	; select bank0
  4748  0428  00B1               	movwf	??_wl_module_rx_config
  4749  0429  0831               	movf	??_wl_module_rx_config,w
  4750  042A  00A1               	movwf	wl_module_config_register@value
  4751  042B  3012               	movlw	18
  4752  042C  318F  2791  3183   	fcall	_wl_module_config_register
  4753                           
  4754                           ;wl_module.c: 114:  wl_module_config_register(0x13, 32);
  4755  042F  3020               	movlw	32
  4756  0430  0020               	movlb	0	; select bank0
  4757  0431  00B1               	movwf	??_wl_module_rx_config
  4758  0432  0831               	movf	??_wl_module_rx_config,w
  4759  0433  00A1               	movwf	wl_module_config_register@value
  4760  0434  3013               	movlw	19
  4761  0435  318F  2791  3183   	fcall	_wl_module_config_register
  4762                           
  4763                           ;wl_module.c: 115:  wl_module_config_register(0x14, 32);
  4764  0438  3020               	movlw	32
  4765  0439  0020               	movlb	0	; select bank0
  4766  043A  00B1               	movwf	??_wl_module_rx_config
  4767  043B  0831               	movf	??_wl_module_rx_config,w
  4768  043C  00A1               	movwf	wl_module_config_register@value
  4769  043D  3014               	movlw	20
  4770  043E  318F  2791  3183   	fcall	_wl_module_config_register
  4771                           
  4772                           ;wl_module.c: 116:  wl_module_config_register(0x15, 32);
  4773  0441  3020               	movlw	32
  4774  0442  0020               	movlb	0	; select bank0
  4775  0443  00B1               	movwf	??_wl_module_rx_config
  4776  0444  0831               	movf	??_wl_module_rx_config,w
  4777  0445  00A1               	movwf	wl_module_config_register@value
  4778  0446  3015               	movlw	21
  4779  0447  318F  2791  3183   	fcall	_wl_module_config_register
  4780                           
  4781                           ;wl_module.c: 117:  wl_module_config_register(0x16, 32);
  4782  044A  3020               	movlw	32
  4783  044B  0020               	movlb	0	; select bank0
  4784  044C  00B1               	movwf	??_wl_module_rx_config
  4785  044D  0831               	movf	??_wl_module_rx_config,w
  4786  044E  00A1               	movwf	wl_module_config_register@value
  4787  044F  3016               	movlw	22
  4788  0450  318F  2791  3183   	fcall	_wl_module_config_register
  4789  0453                     l3114:
  4790                           
  4791                           ;wl_module.c: 121:     PTX = 0;
  4792  0453  01F4               	clrf	_PTX	;volatile
  4793  0454                     l3116:
  4794                           
  4795                           ;wl_module.c: 122:     wl_module_config_register(0x00, ( (1<<6) | (1<<3) | (1<<2) ) | ( 
      +                          (1<<1) | (1<<0) ) );
  4796  0454  304F               	movlw	79
  4797  0455  0020               	movlb	0	; select bank0
  4798  0456  00B1               	movwf	??_wl_module_rx_config
  4799  0457  0831               	movf	??_wl_module_rx_config,w
  4800  0458  00A1               	movwf	wl_module_config_register@value
  4801  0459  3000               	movlw	0
  4802  045A  318F  2791  3183   	fcall	_wl_module_config_register
  4803  045D                     l3118:
  4804                           
  4805                           ;wl_module.c: 123:     LATCbits.LATC5 = 1;;
  4806  045D  0022               	movlb	2	; select bank2
  4807  045E  168E               	bsf	14,5	;volatile
  4808  045F                     l363:
  4809  045F  0008               	return
  4810  0460                     __end_of_wl_module_rx_config:
  4811                           
  4812                           	psect	text2
  4813  0FCF                     __ptext2:	
  4814 ;; *************** function _wl_module_set_rx_addr *****************
  4815 ;; Defined at:
  4816 ;;		line 258 in file "wl_module.c"
  4817 ;; Parameters:    Size  Location     Type
  4818 ;;  address         1    wreg     PTR unsigned char 
  4819 ;;		 -> wl_module_rx_config@data(5), 
  4820 ;;  len             1   13[BANK0 ] unsigned char 
  4821 ;;  rxpipenum       1   14[BANK0 ] unsigned char 
  4822 ;; Auto vars:     Size  Location     Type
  4823 ;;  address         1   16[BANK0 ] PTR unsigned char 
  4824 ;;		 -> wl_module_rx_config@data(5), 
  4825 ;; Return value:  Size  Location     Type
  4826 ;;                  1    wreg      void 
  4827 ;; Registers used:
  4828 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4829 ;; Tracked objects:
  4830 ;;		On entry : 0/0
  4831 ;;		On exit  : 0/0
  4832 ;;		Unchanged: 0/0
  4833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4834 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4835 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4836 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4837 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4838 ;;Total ram usage:        4 bytes
  4839 ;; Hardware stack levels used:    1
  4840 ;; Hardware stack levels required when called:    9
  4841 ;; This function calls:
  4842 ;;		_wl_module_write_register
  4843 ;; This function is called by:
  4844 ;;		_wl_module_rx_config
  4845 ;; This function uses a non-reentrant model
  4846 ;;
  4847                           
  4848                           
  4849                           ;psect for function _wl_module_set_rx_addr
  4850  0FCF                     _wl_module_set_rx_addr:
  4851                           
  4852                           ;incstack = 0
  4853                           ; Regs used in _wl_module_set_rx_addr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  4854                           ;wl_module_set_rx_addr@address stored from wreg
  4855  0FCF  0020               	movlb	0	; select bank0
  4856  0FD0  00B0               	movwf	wl_module_set_rx_addr@address
  4857  0FD1                     l3050:
  4858                           
  4859                           ;wl_module.c: 258: extern void wl_module_set_rx_addr(unsigned char * address, unsigned c
      +                          har len, unsigned char rxpipenum);wl_module.c: 259: {;wl_module.c: 260:  if(rxpipenum > 
      +                          5)
  4860  0FD1  3006               	movlw	6
  4861  0FD2  022E               	subwf	wl_module_set_rx_addr@rxpipenum,w
  4862  0FD3  1C03               	skipc
  4863  0FD4  2FD6               	goto	u2241
  4864  0FD5  2FD7               	goto	u2240
  4865  0FD6                     u2241:
  4866  0FD6  2FD8               	goto	l3054
  4867  0FD7                     u2240:
  4868  0FD7  2FE5               	goto	l389
  4869  0FD8                     l3054:
  4870                           
  4871                           ;wl_module.c: 263:  wl_module_write_register(0x0A + rxpipenum, address, len);
  4872  0FD8  0830               	movf	wl_module_set_rx_addr@address,w
  4873  0FD9  00A7               	movwf	wl_module_write_register@value
  4874  0FDA  3000               	movlw	0
  4875  0FDB  00A8               	movwf	wl_module_write_register@value+1
  4876  0FDC  082D               	movf	wl_module_set_rx_addr@len,w
  4877  0FDD  00AF               	movwf	??_wl_module_set_rx_addr
  4878  0FDE  082F               	movf	??_wl_module_set_rx_addr,w
  4879  0FDF  00A9               	movwf	wl_module_write_register@len
  4880  0FE0  082E               	movf	wl_module_set_rx_addr@rxpipenum,w
  4881  0FE1  3E0A               	addlw	10
  4882  0FE2  3187  27C5  318F   	fcall	_wl_module_write_register
  4883  0FE5                     l389:
  4884  0FE5  0008               	return
  4885  0FE6                     __end_of_wl_module_set_rx_addr:
  4886                           
  4887                           	psect	text3
  4888  07C5                     __ptext3:	
  4889 ;; *************** function _wl_module_write_register *****************
  4890 ;; Defined at:
  4891 ;;		line 463 in file "wl_module.c"
  4892 ;; Parameters:    Size  Location     Type
  4893 ;;  reg             1    wreg     unsigned char 
  4894 ;;  value           2    7[BANK0 ] PTR unsigned char 
  4895 ;;		 -> wl_module_set_rx_pw@payloadwidth(1), wl_module_power_down@config(1), wl_module_set_as_tx@config(1), wl_module_tx
      +_config@tx_addr(5), 
  4896 ;;		 -> wl_module_rx_config@data(5), RAM(4096), 
  4897 ;;  len             1    9[BANK0 ] unsigned char 
  4898 ;; Auto vars:     Size  Location     Type
  4899 ;;  reg             1   12[BANK0 ] unsigned char 
  4900 ;; Return value:  Size  Location     Type
  4901 ;;                  1    wreg      void 
  4902 ;; Registers used:
  4903 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4904 ;; Tracked objects:
  4905 ;;		On entry : 0/0
  4906 ;;		On exit  : 0/0
  4907 ;;		Unchanged: 0/0
  4908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4909 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4910 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4911 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4912 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4913 ;;Total ram usage:        6 bytes
  4914 ;; Hardware stack levels used:    1
  4915 ;; Hardware stack levels required when called:    8
  4916 ;; This function calls:
  4917 ;;		_SPI_ExchangeByte
  4918 ;;		_SPI_WriteBlock
  4919 ;; This function is called by:
  4920 ;;		_wl_module_set_rx_addr
  4921 ;;		_wl_module_set_tx_addr
  4922 ;;		_wl_module_set_as_tx
  4923 ;;		_wl_module_power_down
  4924 ;;		_wl_module_set_rx_pw
  4925 ;;		_wl_module_set_RADDR
  4926 ;;		_wl_module_set_TADDR
  4927 ;; This function uses a non-reentrant model
  4928 ;;
  4929                           
  4930                           
  4931                           ;psect for function _wl_module_write_register
  4932  07C5                     _wl_module_write_register:
  4933                           
  4934                           ;incstack = 0
  4935                           ; Regs used in _wl_module_write_register: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  4936                           ;wl_module_write_register@reg stored from wreg
  4937  07C5  0020               	movlb	0	; select bank0
  4938  07C6  00AC               	movwf	wl_module_write_register@reg
  4939  07C7                     l2908:
  4940                           
  4941                           ;wl_module.c: 463: void wl_module_write_register(unsigned char reg, unsigned char * valu
      +                          e, unsigned char len);wl_module.c: 465: {;wl_module.c: 466:     LATCbits.LATC6 = 0;;
  4942  07C7  0022               	movlb	2	; select bank2
  4943  07C8  130E               	bcf	14,6	;volatile
  4944  07C9                     l2910:
  4945                           
  4946                           ;wl_module.c: 467:     SPI_ExchangeByte(0x20 | (0x1F & reg));
  4947  07C9  0020               	movlb	0	; select bank0
  4948  07CA  082C               	movf	wl_module_write_register@reg,w
  4949  07CB  391F               	andlw	31
  4950  07CC  3820               	iorlw	32
  4951  07CD  318F  2763  3187   	fcall	_SPI_ExchangeByte
  4952  07D0                     l2912:
  4953                           
  4954                           ;wl_module.c: 468:    SPI_WriteBlock(value,len);
  4955  07D0  0020               	movlb	0	; select bank0
  4956  07D1  0828               	movf	wl_module_write_register@value+1,w
  4957  07D2  00A2               	movwf	SPI_WriteBlock@block+1
  4958  07D3  0827               	movf	wl_module_write_register@value,w
  4959  07D4  00A1               	movwf	SPI_WriteBlock@block
  4960  07D5  0829               	movf	wl_module_write_register@len,w
  4961  07D6  00AA               	movwf	??_wl_module_write_register
  4962  07D7  01AB               	clrf	??_wl_module_write_register+1
  4963  07D8  082A               	movf	??_wl_module_write_register,w
  4964  07D9  00A3               	movwf	SPI_WriteBlock@blockSize
  4965  07DA  082B               	movf	??_wl_module_write_register+1,w
  4966  07DB  00A4               	movwf	SPI_WriteBlock@blockSize+1
  4967  07DC  3187  27A5  3187   	fcall	_SPI_WriteBlock
  4968  07DF                     l2914:
  4969                           
  4970                           ;wl_module.c: 469:     LATCbits.LATC6 = 1;;
  4971  07DF  0022               	movlb	2	; select bank2
  4972  07E0  170E               	bsf	14,6	;volatile
  4973  07E1                     l458:
  4974  07E1  0008               	return
  4975  07E2                     __end_of_wl_module_write_register:
  4976                           
  4977                           	psect	text4
  4978  07A5                     __ptext4:	
  4979 ;; *************** function _SPI_WriteBlock *****************
  4980 ;; Defined at:
  4981 ;;		line 118 in file "mcc_generated_files/spi.c"
  4982 ;; Parameters:    Size  Location     Type
  4983 ;;  block           2    1[BANK0 ] PTR void 
  4984 ;;		 -> wl_module_set_rx_pw@payloadwidth(1), wl_module_power_down@config(1), wl_module_set_as_tx@config(1), wl_module_tx
      +_config@tx_addr(5), 
  4985 ;;		 -> wl_module_rx_config@data(5), RAM(4096), 
  4986 ;;  blockSize       2    3[BANK0 ] unsigned int 
  4987 ;; Auto vars:     Size  Location     Type
  4988 ;;  data            2    5[BANK0 ] PTR unsigned char 
  4989 ;;		 -> wl_module_set_rx_pw@payloadwidth(1), wl_module_power_down@config(1), wl_module_set_as_tx@config(1), wl_module_tx
      +_config@tx_addr(5), 
  4990 ;;		 -> wl_module_rx_config@data(5), RAM(4096), 
  4991 ;; Return value:  Size  Location     Type
  4992 ;;                  1    wreg      void 
  4993 ;; Registers used:
  4994 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4995 ;; Tracked objects:
  4996 ;;		On entry : 0/0
  4997 ;;		On exit  : 0/0
  4998 ;;		Unchanged: 0/0
  4999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5000 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5001 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5003 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5004 ;;Total ram usage:        6 bytes
  5005 ;; Hardware stack levels used:    1
  5006 ;; Hardware stack levels required when called:    7
  5007 ;; This function calls:
  5008 ;;		_SPI_ExchangeByte
  5009 ;; This function is called by:
  5010 ;;		_wl_module_write_register
  5011 ;;		_wl_module_send
  5012 ;; This function uses a non-reentrant model
  5013 ;;
  5014                           
  5015                           
  5016                           ;psect for function _SPI_WriteBlock
  5017  07A5                     _SPI_WriteBlock:
  5018  07A5                     l2834:	
  5019                           ;incstack = 0
  5020                           ; Regs used in _SPI_WriteBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5021                           
  5022                           
  5023                           ;mcc_generated_files/spi.c: 118: void SPI_WriteBlock(void *block, size_t blockSize);mcc_
      +                          generated_files/spi.c: 119: {;mcc_generated_files/spi.c: 120:     uint8_t *data = block;
  5024  07A5  0020               	movlb	0	; select bank0
  5025  07A6  0822               	movf	SPI_WriteBlock@block+1,w
  5026  07A7  00A6               	movwf	SPI_WriteBlock@data+1
  5027  07A8  0821               	movf	SPI_WriteBlock@block,w
  5028  07A9  00A5               	movwf	SPI_WriteBlock@data
  5029                           
  5030                           ;mcc_generated_files/spi.c: 121:     while(blockSize--)
  5031  07AA  2FB8               	goto	l2840
  5032  07AB                     l2836:
  5033                           
  5034                           ;mcc_generated_files/spi.c: 122:     {;mcc_generated_files/spi.c: 123:         SPI_Excha
      +                          ngeByte(*data++);
  5035  07AB  0825               	movf	SPI_WriteBlock@data,w
  5036  07AC  0086               	movwf	6
  5037  07AD  0826               	movf	SPI_WriteBlock@data+1,w
  5038  07AE  0087               	movwf	7
  5039  07AF  0801               	movf	1,w
  5040  07B0  318F  2763  3187   	fcall	_SPI_ExchangeByte
  5041  07B3                     l2838:
  5042  07B3  3001               	movlw	1
  5043  07B4  0020               	movlb	0	; select bank0
  5044  07B5  07A5               	addwf	SPI_WriteBlock@data,f
  5045  07B6  3000               	movlw	0
  5046  07B7  3DA6               	addwfc	SPI_WriteBlock@data+1,f
  5047  07B8                     l2840:
  5048                           
  5049                           ;mcc_generated_files/spi.c: 121:     while(blockSize--)
  5050  07B8  3001               	movlw	1
  5051  07B9  02A3               	subwf	SPI_WriteBlock@blockSize,f
  5052  07BA  3000               	movlw	0
  5053  07BB  3BA4               	subwfb	SPI_WriteBlock@blockSize+1,f
  5054  07BC  0A23               	incf	SPI_WriteBlock@blockSize,w
  5055  07BD  1D03               	skipz
  5056  07BE  2FC3               	goto	u2031
  5057  07BF  0A24               	incf	SPI_WriteBlock@blockSize+1,w
  5058  07C0  1D03               	btfss	3,2
  5059  07C1  2FC3               	goto	u2031
  5060  07C2  2FC4               	goto	u2030
  5061  07C3                     u2031:
  5062  07C3  2FAB               	goto	l2836
  5063  07C4                     u2030:
  5064  07C4                     l237:
  5065  07C4  0008               	return
  5066  07C5                     __end_of_SPI_WriteBlock:
  5067                           
  5068                           	psect	text5
  5069  0F91                     __ptext5:	
  5070 ;; *************** function _wl_module_config_register *****************
  5071 ;; Defined at:
  5072 ;;		line 445 in file "wl_module.c"
  5073 ;; Parameters:    Size  Location     Type
  5074 ;;  reg             1    wreg     unsigned char 
  5075 ;;  value           1    1[BANK0 ] unsigned char 
  5076 ;; Auto vars:     Size  Location     Type
  5077 ;;  reg             1    2[BANK0 ] unsigned char 
  5078 ;; Return value:  Size  Location     Type
  5079 ;;                  1    wreg      void 
  5080 ;; Registers used:
  5081 ;;		wreg, status,2, status,0, pclath, cstack
  5082 ;; Tracked objects:
  5083 ;;		On entry : 0/0
  5084 ;;		On exit  : 0/0
  5085 ;;		Unchanged: 0/0
  5086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5087 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5088 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5090 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5091 ;;Total ram usage:        2 bytes
  5092 ;; Hardware stack levels used:    1
  5093 ;; Hardware stack levels required when called:    7
  5094 ;; This function calls:
  5095 ;;		_SPI_ExchangeByte
  5096 ;; This function is called by:
  5097 ;;		_wl_module_rx_config
  5098 ;;		_wl_module_config
  5099 ;;		_wl_module_tx_config
  5100 ;;		_wl_module_get_data
  5101 ;;		_wl_module_send
  5102 ;; This function uses a non-reentrant model
  5103 ;;
  5104                           
  5105                           
  5106                           ;psect for function _wl_module_config_register
  5107  0F91                     _wl_module_config_register:
  5108                           
  5109                           ;incstack = 0
  5110                           ; Regs used in _wl_module_config_register: [wreg+status,2+status,0+pclath+cstack]
  5111                           ;wl_module_config_register@reg stored from wreg
  5112  0F91  0020               	movlb	0	; select bank0
  5113  0F92  00A2               	movwf	wl_module_config_register@reg
  5114  0F93                     l3044:
  5115                           
  5116                           ;wl_module.c: 445: void wl_module_config_register(unsigned char reg, unsigned char value
      +                          );wl_module.c: 447: {;wl_module.c: 448:     LATCbits.LATC6 = 0;;
  5117  0F93  0022               	movlb	2	; select bank2
  5118  0F94  130E               	bcf	14,6	;volatile
  5119  0F95                     l3046:
  5120                           
  5121                           ;wl_module.c: 449:     SPI_ExchangeByte(0x20 | (0x1F & reg));
  5122  0F95  0020               	movlb	0	; select bank0
  5123  0F96  0822               	movf	wl_module_config_register@reg,w
  5124  0F97  391F               	andlw	31
  5125  0F98  3820               	iorlw	32
  5126  0F99  318F  2763  318F   	fcall	_SPI_ExchangeByte
  5127                           
  5128                           ;wl_module.c: 450:    SPI_ExchangeByte(value);
  5129  0F9C  0020               	movlb	0	; select bank0
  5130  0F9D  0821               	movf	wl_module_config_register@value,w
  5131  0F9E  318F  2763  318F   	fcall	_SPI_ExchangeByte
  5132  0FA1                     l3048:
  5133                           
  5134                           ;wl_module.c: 451:     LATCbits.LATC6 = 1;;
  5135  0FA1  0022               	movlb	2	; select bank2
  5136  0FA2  170E               	bsf	14,6	;volatile
  5137  0FA3                     l452:
  5138  0FA3  0008               	return
  5139  0FA4                     __end_of_wl_module_config_register:
  5140                           
  5141                           	psect	text6
  5142  0F63                     __ptext6:	
  5143 ;; *************** function _SPI_ExchangeByte *****************
  5144 ;; Defined at:
  5145 ;;		line 97 in file "mcc_generated_files/spi.c"
  5146 ;; Parameters:    Size  Location     Type
  5147 ;;  data            1    wreg     unsigned char 
  5148 ;; Auto vars:     Size  Location     Type
  5149 ;;  data            1    0[BANK0 ] unsigned char 
  5150 ;; Return value:  Size  Location     Type
  5151 ;;                  1    wreg      unsigned char 
  5152 ;; Registers used:
  5153 ;;		wreg
  5154 ;; Tracked objects:
  5155 ;;		On entry : 0/0
  5156 ;;		On exit  : 0/0
  5157 ;;		Unchanged: 0/0
  5158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5160 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5162 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5163 ;;Total ram usage:        1 bytes
  5164 ;; Hardware stack levels used:    1
  5165 ;; Hardware stack levels required when called:    6
  5166 ;; This function calls:
  5167 ;;		Nothing
  5168 ;; This function is called by:
  5169 ;;		_SPI_WriteBlock
  5170 ;;		_wl_module_config_register
  5171 ;;		_wl_module_write_register
  5172 ;;		_SPI_ReadBlock
  5173 ;;		_wl_module_data_ready
  5174 ;;		_wl_module_get_one_byte
  5175 ;;		_wl_module_get_data
  5176 ;;		_wl_module_read_register
  5177 ;;		_wl_module_send
  5178 ;; This function uses a non-reentrant model
  5179 ;;
  5180                           
  5181                           
  5182                           ;psect for function _SPI_ExchangeByte
  5183  0F63                     _SPI_ExchangeByte:
  5184                           
  5185                           ;incstack = 0
  5186                           ; Regs used in _SPI_ExchangeByte: [wreg]
  5187                           ;SPI_ExchangeByte@data stored from wreg
  5188  0F63  0020               	movlb	0	; select bank0
  5189  0F64  00A0               	movwf	SPI_ExchangeByte@data
  5190  0F65                     l2736:
  5191                           
  5192                           ;mcc_generated_files/spi.c: 97: uint8_t SPI_ExchangeByte(uint8_t data);mcc_generated_fil
      +                          es/spi.c: 98: {;mcc_generated_files/spi.c: 99:     SSP1BUF = data;
  5193  0F65  0820               	movf	SPI_ExchangeByte@data,w
  5194  0F66  0024               	movlb	4	; select bank4
  5195  0F67  0091               	movwf	17	;volatile
  5196  0F68                     l219:	
  5197                           ;mcc_generated_files/spi.c: 100:     while(!PIR1bits.SSP1IF);
  5198                           
  5199  0F68  0020               	movlb	0	; select bank0
  5200  0F69  1D90               	btfss	16,3	;volatile
  5201  0F6A  2F6C               	goto	u1761
  5202  0F6B  2F6D               	goto	u1760
  5203  0F6C                     u1761:
  5204  0F6C  2F68               	goto	l219
  5205  0F6D                     u1760:
  5206  0F6D                     l221:
  5207                           
  5208                           ;mcc_generated_files/spi.c: 101:     PIR1bits.SSP1IF = 0;
  5209  0F6D  1190               	bcf	16,3	;volatile
  5210  0F6E                     l2738:
  5211                           
  5212                           ;mcc_generated_files/spi.c: 102:     return SSP1BUF;
  5213  0F6E  0024               	movlb	4	; select bank4
  5214  0F6F  0811               	movf	17,w	;volatile
  5215  0F70                     l222:
  5216  0F70  0008               	return
  5217  0F71                     __end_of_SPI_ExchangeByte:
  5218                           
  5219                           	psect	text7
  5220  0F29                     __ptext7:	
  5221 ;; *************** function _wl_module_init *****************
  5222 ;; Defined at:
  5223 ;;		line 44 in file "wl_module.c"
  5224 ;; Parameters:    Size  Location     Type
  5225 ;;		None
  5226 ;; Auto vars:     Size  Location     Type
  5227 ;;		None
  5228 ;; Return value:  Size  Location     Type
  5229 ;;                  1    wreg      void 
  5230 ;; Registers used:
  5231 ;;		None
  5232 ;; Tracked objects:
  5233 ;;		On entry : 0/0
  5234 ;;		On exit  : 0/0
  5235 ;;		Unchanged: 0/0
  5236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5241 ;;Total ram usage:        0 bytes
  5242 ;; Hardware stack levels used:    1
  5243 ;; Hardware stack levels required when called:    6
  5244 ;; This function calls:
  5245 ;;		Nothing
  5246 ;; This function is called by:
  5247 ;;		_main
  5248 ;; This function uses a non-reentrant model
  5249 ;;
  5250                           
  5251                           
  5252                           ;psect for function _wl_module_init
  5253  0F29                     _wl_module_init:
  5254  0F29                     l3084:	
  5255                           ;incstack = 0
  5256                           ; Regs used in _wl_module_init: []
  5257                           
  5258                           
  5259                           ;wl_module.c: 49:     TRISCbits.TRISC5 = 0;
  5260  0F29  0021               	movlb	1	; select bank1
  5261  0F2A  128E               	bcf	14,5	;volatile
  5262                           
  5263                           ;wl_module.c: 50:     TRISCbits.TRISC6 = 0;
  5264  0F2B  130E               	bcf	14,6	;volatile
  5265                           
  5266                           ;wl_module.c: 52:     ANSELCbits.ANSC6=0;
  5267  0F2C  0023               	movlb	3	; select bank3
  5268  0F2D  130E               	bcf	14,6	;volatile
  5269                           
  5270                           ;wl_module.c: 53:     LATCbits.LATC5 = 0;;
  5271  0F2E  0022               	movlb	2	; select bank2
  5272  0F2F  128E               	bcf	14,5	;volatile
  5273                           
  5274                           ;wl_module.c: 54:     LATCbits.LATC6 = 1;;
  5275  0F30  170E               	bsf	14,6	;volatile
  5276  0F31                     l357:
  5277  0F31  0008               	return
  5278  0F32                     __end_of_wl_module_init:
  5279                           
  5280                           	psect	text8
  5281  0FB9                     __ptext8:	
  5282 ;; *************** function _printf *****************
  5283 ;; Defined at:
  5284 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\printf.c"
  5285 ;; Parameters:    Size  Location     Type
  5286 ;;  fmt             2    3[BANK1 ] PTR const unsigned char 
  5287 ;;		 -> STR_1(13), 
  5288 ;; Auto vars:     Size  Location     Type
  5289 ;;  ret             2    0        int 
  5290 ;;  ap              1    9[BANK1 ] PTR void [1]
  5291 ;;		 -> ?_printf(2), 
  5292 ;; Return value:  Size  Location     Type
  5293 ;;                  2    3[BANK1 ] int 
  5294 ;; Registers used:
  5295 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5296 ;; Tracked objects:
  5297 ;;		On entry : 0/0
  5298 ;;		On exit  : 0/0
  5299 ;;		Unchanged: 0/0
  5300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5301 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5302 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5303 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5304 ;;      Totals:         0       1       7       0       0       0       0       0       0       0       0       0       
      +0       0
  5305 ;;Total ram usage:        8 bytes
  5306 ;; Hardware stack levels used:    1
  5307 ;; Hardware stack levels required when called:   14
  5308 ;; This function calls:
  5309 ;;		_vfprintf
  5310 ;; This function is called by:
  5311 ;;		_main
  5312 ;; This function uses a non-reentrant model
  5313 ;;
  5314                           
  5315                           
  5316                           ;psect for function _printf
  5317  0FB9                     _printf:
  5318  0FB9                     l3120:	
  5319                           ;incstack = 0
  5320                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5321                           
  5322  0FB9  30CA               	movlw	(low ((?_printf| 0+2)))& (0+255)
  5323  0FBA  0020               	movlb	0	; select bank0
  5324  0FBB  00EE               	movwf	??_printf
  5325  0FBC  086E               	movf	??_printf,w
  5326  0FBD  0021               	movlb	1	; select bank1
  5327  0FBE  00CE               	movwf	printf@ap^(0+128)
  5328  0FBF                     l3122:
  5329  0FBF  0849               	movf	(printf@fmt+1)^(0+128),w
  5330  0FC0  0020               	movlb	0	; select bank0
  5331  0FC1  00EA               	movwf	vfprintf@fmt+1
  5332  0FC2  0021               	movlb	1	; select bank1
  5333  0FC3  0848               	movf	printf@fmt^(0+128),w
  5334  0FC4  0020               	movlb	0	; select bank0
  5335  0FC5  00E9               	movwf	vfprintf@fmt
  5336  0FC6  30CE               	movlw	(low (printf@ap| 0))& (0+255)
  5337  0FC7  00EE               	movwf	??_printf
  5338  0FC8  086E               	movf	??_printf,w
  5339  0FC9  00EB               	movwf	vfprintf@ap
  5340  0FCA  3000               	movlw	0
  5341  0FCB  3187  2723  318F   	fcall	_vfprintf
  5342  0FCE                     l1001:
  5343  0FCE  0008               	return
  5344  0FCF                     __end_of_printf:
  5345                           
  5346                           	psect	text9
  5347  0723                     __ptext9:	
  5348 ;; *************** function _vfprintf *****************
  5349 ;; Defined at:
  5350 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  5351 ;; Parameters:    Size  Location     Type
  5352 ;;  fp              1    wreg     PTR struct _IO_FILE
  5353 ;;		 -> NULL(0), 
  5354 ;;  fmt             2   73[BANK0 ] PTR const unsigned char 
  5355 ;;		 -> STR_1(13), 
  5356 ;;  ap              1   75[BANK0 ] PTR PTR void 
  5357 ;;		 -> printf@ap(1), 
  5358 ;; Auto vars:     Size  Location     Type
  5359 ;;  fp              1    0[BANK1 ] PTR struct _IO_FILE
  5360 ;;		 -> NULL(0), 
  5361 ;;  cfmt            2    1[BANK1 ] PTR unsigned char 
  5362 ;;		 -> STR_1(13), 
  5363 ;; Return value:  Size  Location     Type
  5364 ;;                  2   73[BANK0 ] int 
  5365 ;; Registers used:
  5366 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5367 ;; Tracked objects:
  5368 ;;		On entry : 0/0
  5369 ;;		On exit  : 0/0
  5370 ;;		Unchanged: 0/0
  5371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5372 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5373 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5374 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5375 ;;      Totals:         0       5       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5376 ;;Total ram usage:        8 bytes
  5377 ;; Hardware stack levels used:    1
  5378 ;; Hardware stack levels required when called:   13
  5379 ;; This function calls:
  5380 ;;		_vfpfcnvrt
  5381 ;; This function is called by:
  5382 ;;		_printf
  5383 ;; This function uses a non-reentrant model
  5384 ;;
  5385                           
  5386                           
  5387                           ;psect for function _vfprintf
  5388  0723                     _vfprintf:
  5389                           
  5390                           ;incstack = 0
  5391                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5392                           ;vfprintf@fp stored from wreg
  5393  0723  0021               	movlb	1	; select bank1
  5394  0724  00C5               	movwf	vfprintf@fp^(0+128)
  5395  0725                     l3056:
  5396                           
  5397                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  5398  0725  0020               	movlb	0	; select bank0
  5399  0726  086A               	movf	vfprintf@fmt+1,w
  5400  0727  0021               	movlb	1	; select bank1
  5401  0728  00C7               	movwf	(vfprintf@cfmt+1)^(0+128)
  5402  0729  0020               	movlb	0	; select bank0
  5403  072A  0869               	movf	vfprintf@fmt,w
  5404  072B  0021               	movlb	1	; select bank1
  5405  072C  00C6               	movwf	vfprintf@cfmt^(0+128)
  5406  072D                     l3058:
  5407                           
  5408                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  5409  072D  01A0               	clrf	_nout^(0+128)
  5410  072E  01A1               	clrf	(_nout+1)^(0+128)
  5411                           
  5412                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5413  072F  2F46               	goto	l3062
  5414  0730                     l3060:
  5415                           
  5416                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  5417  0730  30C6               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  5418  0731  0020               	movlb	0	; select bank0
  5419  0732  00EC               	movwf	??_vfprintf
  5420  0733  086C               	movf	??_vfprintf,w
  5421  0734  00D9               	movwf	vfpfcnvrt@fmt
  5422  0735  086B               	movf	vfprintf@ap,w
  5423  0736  00ED               	movwf	??_vfprintf+1
  5424  0737  086D               	movf	??_vfprintf+1,w
  5425  0738  00DA               	movwf	vfpfcnvrt@ap
  5426  0739  0021               	movlb	1	; select bank1
  5427  073A  0845               	movf	vfprintf@fp^(0+128),w
  5428  073B  3184  2460  3187   	fcall	_vfpfcnvrt
  5429  073E  0020               	movlb	0	; select bank0
  5430  073F  0859               	movf	?_vfpfcnvrt,w
  5431  0740  0021               	movlb	1	; select bank1
  5432  0741  07A0               	addwf	_nout^(0+128),f
  5433  0742  0020               	movlb	0	; select bank0
  5434  0743  085A               	movf	?_vfpfcnvrt+1,w
  5435  0744  0021               	movlb	1	; select bank1
  5436  0745  3DA1               	addwfc	(_nout+1)^(0+128),f
  5437  0746                     l3062:
  5438                           
  5439                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5440  0746  0846               	movf	vfprintf@cfmt^(0+128),w
  5441  0747  0084               	movwf	4
  5442  0748  0847               	movf	(vfprintf@cfmt+1)^(0+128),w
  5443  0749  0085               	movwf	5
  5444  074A  0012               	moviw fsr0++
  5445  074B  1D03               	btfss	3,2
  5446  074C  2F4E               	goto	u2251
  5447  074D  2F4F               	goto	u2250
  5448  074E                     u2251:
  5449  074E  2F30               	goto	l3060
  5450  074F                     u2250:
  5451  074F                     l3064:
  5452                           
  5453                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  5454  074F  0821               	movf	(_nout+1)^(0+128),w
  5455  0750  0020               	movlb	0	; select bank0
  5456  0751  00EA               	movwf	?_vfprintf+1
  5457  0752  0021               	movlb	1	; select bank1
  5458  0753  0820               	movf	_nout^(0+128),w
  5459  0754  0020               	movlb	0	; select bank0
  5460  0755  00E9               	movwf	?_vfprintf
  5461  0756                     l1073:
  5462  0756  0008               	return
  5463  0757                     __end_of_vfprintf:
  5464                           
  5465                           	psect	text10
  5466  0460                     __ptext10:	
  5467 ;; *************** function _vfpfcnvrt *****************
  5468 ;; Defined at:
  5469 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  5470 ;; Parameters:    Size  Location     Type
  5471 ;;  fp              1    wreg     PTR struct _IO_FILE
  5472 ;;		 -> NULL(0), 
  5473 ;;  fmt             1   57[BANK0 ] PTR PTR unsigned char 
  5474 ;;		 -> vfprintf@cfmt(2), 
  5475 ;;  ap              1   58[BANK0 ] PTR PTR void 
  5476 ;;		 -> printf@ap(1), 
  5477 ;; Auto vars:     Size  Location     Type
  5478 ;;  fp              1   72[BANK0 ] PTR struct _IO_FILE
  5479 ;;		 -> NULL(0), 
  5480 ;;  ll              8   64[BANK0 ] long long 
  5481 ;;  llu             8    0        unsigned long long 
  5482 ;;  f               4    0        unsigned long long 
  5483 ;;  ct              3    0        unsigned char [3]
  5484 ;;  vp              2    0        PTR void 
  5485 ;;  i               2    0        int 
  5486 ;;  done            2    0        int 
  5487 ;;  cp              2    0        PTR unsigned char 
  5488 ;;  c               1    0        unsigned char 
  5489 ;; Return value:  Size  Location     Type
  5490 ;;                  2   57[BANK0 ] int 
  5491 ;; Registers used:
  5492 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5493 ;; Tracked objects:
  5494 ;;		On entry : 0/0
  5495 ;;		On exit  : 0/0
  5496 ;;		Unchanged: 0/0
  5497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5498 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5499 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5500 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5501 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5502 ;;Total ram usage:       16 bytes
  5503 ;; Hardware stack levels used:    1
  5504 ;; Hardware stack levels required when called:   12
  5505 ;; This function calls:
  5506 ;;		_dtoa
  5507 ;;		_fputc
  5508 ;; This function is called by:
  5509 ;;		_vfprintf
  5510 ;; This function uses a non-reentrant model
  5511 ;;
  5512                           
  5513                           
  5514                           ;psect for function _vfpfcnvrt
  5515  0460                     _vfpfcnvrt:
  5516                           
  5517                           ;incstack = 0
  5518                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5519                           ;vfpfcnvrt@fp stored from wreg
  5520  0460  0020               	movlb	0	; select bank0
  5521  0461  00E8               	movwf	vfpfcnvrt@fp
  5522  0462                     l2916:
  5523                           
  5524                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.30\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  5525  0462  0859               	movf	vfpfcnvrt@fmt,w
  5526  0463  0086               	movwf	6
  5527  0464  0187               	clrf	7
  5528  0465  3F40               	moviw [0]fsr1
  5529  0466  00DB               	movwf	??_vfpfcnvrt
  5530  0467  3F41               	moviw [1]fsr1
  5531  0468  00DC               	movwf	??_vfpfcnvrt+1
  5532  0469  085B               	movf	??_vfpfcnvrt,w
  5533  046A  0084               	movwf	4
  5534  046B  085C               	movf	??_vfpfcnvrt+1,w
  5535  046C  0085               	movwf	5
  5536  046D  0012               	moviw fsr0++
  5537  046E  3A25               	xorlw	37
  5538  046F  1D03               	btfss	3,2
  5539  0470  2C72               	goto	u2201
  5540  0471  2C73               	goto	u2200
  5541  0472                     u2201:
  5542  0472  2D17               	goto	l2952
  5543  0473                     u2200:
  5544  0473                     l2918:
  5545                           
  5546                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  5547  0473  0859               	movf	vfpfcnvrt@fmt,w
  5548  0474  0086               	movwf	6
  5549  0475  0187               	clrf	7
  5550  0476  3001               	movlw	1
  5551  0477  0781               	addwf	1,f
  5552  0478  3141               	addfsr 1,1
  5553  0479  1803               	skipnc
  5554  047A  0A81               	incf	1,f
  5555  047B                     l2920:
  5556                           
  5557                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  5558  047B  0021               	movlb	1	; select bank1
  5559  047C  01A2               	clrf	_width^(0+128)
  5560  047D  01A3               	clrf	(_width+1)^(0+128)
  5561  047E  01F2               	clrf	_flags
  5562  047F  01F3               	clrf	_flags+1
  5563  0480                     l2922:
  5564                           
  5565                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  5566  0480  30FF               	movlw	255
  5567  0481  00F0               	movwf	_prec
  5568  0482  30FF               	movlw	255
  5569  0483  00F1               	movwf	_prec+1
  5570  0484                     l2924:
  5571                           
  5572                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5573  0484  0020               	movlb	0	; select bank0
  5574  0485  0859               	movf	vfpfcnvrt@fmt,w
  5575  0486  0086               	movwf	6
  5576  0487  0187               	clrf	7
  5577  0488  3F40               	moviw [0]fsr1
  5578  0489  00DB               	movwf	??_vfpfcnvrt
  5579  048A  3F41               	moviw [1]fsr1
  5580  048B  00DC               	movwf	??_vfpfcnvrt+1
  5581  048C  085B               	movf	??_vfpfcnvrt,w
  5582  048D  0084               	movwf	4
  5583  048E  085C               	movf	??_vfpfcnvrt+1,w
  5584  048F  0085               	movwf	5
  5585  0490  0012               	moviw fsr0++
  5586  0491  3A64               	xorlw	100
  5587  0492  1903               	btfsc	3,2
  5588  0493  2C95               	goto	u2211
  5589  0494  2C96               	goto	u2210
  5590  0495                     u2211:
  5591  0495  2CA7               	goto	l2928
  5592  0496                     u2210:
  5593  0496                     l2926:
  5594  0496  0859               	movf	vfpfcnvrt@fmt,w
  5595  0497  0086               	movwf	6
  5596  0498  0187               	clrf	7
  5597  0499  3F40               	moviw [0]fsr1
  5598  049A  00DB               	movwf	??_vfpfcnvrt
  5599  049B  3F41               	moviw [1]fsr1
  5600  049C  00DC               	movwf	??_vfpfcnvrt+1
  5601  049D  085B               	movf	??_vfpfcnvrt,w
  5602  049E  0084               	movwf	4
  5603  049F  085C               	movf	??_vfpfcnvrt+1,w
  5604  04A0  0085               	movwf	5
  5605  04A1  0012               	moviw fsr0++
  5606  04A2  3A69               	xorlw	105
  5607  04A3  1D03               	btfss	3,2
  5608  04A4  2CA6               	goto	u2221
  5609  04A5  2CA7               	goto	u2220
  5610  04A6                     u2221:
  5611  04A6  2CE2               	goto	l2936
  5612  04A7                     u2220:
  5613  04A7                     l2928:
  5614                           
  5615                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  5616  04A7  0859               	movf	vfpfcnvrt@fmt,w
  5617  04A8  0086               	movwf	6
  5618  04A9  0187               	clrf	7
  5619  04AA  3001               	movlw	1
  5620  04AB  0781               	addwf	1,f
  5621  04AC  3141               	addfsr 1,1
  5622  04AD  1803               	skipnc
  5623  04AE  0A81               	incf	1,f
  5624  04AF                     l2930:
  5625                           
  5626                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5627  04AF  085A               	movf	vfpfcnvrt@ap,w
  5628  04B0  0086               	movwf	6
  5629  04B1  0187               	clrf	7
  5630  04B2  0801               	movf	1,w
  5631  04B3  0084               	movwf	4
  5632  04B4  0185               	clrf	5
  5633  04B5  3002               	movlw	2
  5634  04B6  0781               	addwf	1,f
  5635  04B7  3F00               	moviw [0]fsr0
  5636  04B8  00DB               	movwf	??_vfpfcnvrt
  5637  04B9  3F01               	moviw [1]fsr0
  5638  04BA  00DC               	movwf	??_vfpfcnvrt+1
  5639  04BB  085B               	movf	??_vfpfcnvrt,w
  5640  04BC  00E0               	movwf	vfpfcnvrt@ll
  5641  04BD  085C               	movf	??_vfpfcnvrt+1,w
  5642  04BE  00E1               	movwf	vfpfcnvrt@ll+1
  5643  04BF  0D89               	rlf	9,f
  5644  04C0  3B89               	subwfb	9,f
  5645  04C1  0989               	comf	9,f
  5646  04C2  00E2               	movwf	vfpfcnvrt@ll+2
  5647  04C3  00E3               	movwf	vfpfcnvrt@ll+3
  5648  04C4  00E4               	movwf	vfpfcnvrt@ll+4
  5649  04C5  00E5               	movwf	vfpfcnvrt@ll+5
  5650  04C6  00E6               	movwf	vfpfcnvrt@ll+6
  5651  04C7  00E7               	movwf	vfpfcnvrt@ll+7
  5652  04C8                     l2932:
  5653                           
  5654                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  5655  04C8  0860               	movf	vfpfcnvrt@ll,w
  5656  04C9  00BB               	movwf	dtoa@d
  5657  04CA  0861               	movf	vfpfcnvrt@ll+1,w
  5658  04CB  00BC               	movwf	dtoa@d+1
  5659  04CC  0862               	movf	vfpfcnvrt@ll+2,w
  5660  04CD  00BD               	movwf	dtoa@d+2
  5661  04CE  0863               	movf	vfpfcnvrt@ll+3,w
  5662  04CF  00BE               	movwf	dtoa@d+3
  5663  04D0  0864               	movf	vfpfcnvrt@ll+4,w
  5664  04D1  00BF               	movwf	dtoa@d+4
  5665  04D2  0865               	movf	vfpfcnvrt@ll+5,w
  5666  04D3  00C0               	movwf	dtoa@d+5
  5667  04D4  0866               	movf	vfpfcnvrt@ll+6,w
  5668  04D5  00C1               	movwf	dtoa@d+6
  5669  04D6  0867               	movf	vfpfcnvrt@ll+7,w
  5670  04D7  00C2               	movwf	dtoa@d+7
  5671  04D8  0868               	movf	vfpfcnvrt@fp,w
  5672  04D9  3180  2026  3184   	fcall	_dtoa
  5673  04DC  0020               	movlb	0	; select bank0
  5674  04DD  083C               	movf	?_dtoa+1,w
  5675  04DE  00DA               	movwf	?_vfpfcnvrt+1
  5676  04DF  083B               	movf	?_dtoa,w
  5677  04E0  00D9               	movwf	?_vfpfcnvrt
  5678  04E1  2D3A               	goto	l1066
  5679  04E2                     l2936:
  5680                           
  5681                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  5682  04E2  0859               	movf	vfpfcnvrt@fmt,w
  5683  04E3  0086               	movwf	6
  5684  04E4  0187               	clrf	7
  5685  04E5  3F40               	moviw [0]fsr1
  5686  04E6  00DB               	movwf	??_vfpfcnvrt
  5687  04E7  3F41               	moviw [1]fsr1
  5688  04E8  00DC               	movwf	??_vfpfcnvrt+1
  5689  04E9  085B               	movf	??_vfpfcnvrt,w
  5690  04EA  0084               	movwf	4
  5691  04EB  085C               	movf	??_vfpfcnvrt+1,w
  5692  04EC  0085               	movwf	5
  5693  04ED  0012               	moviw fsr0++
  5694  04EE  3A25               	xorlw	37
  5695  04EF  1D03               	btfss	3,2
  5696  04F0  2CF2               	goto	u2231
  5697  04F1  2CF3               	goto	u2230
  5698  04F2                     u2231:
  5699  04F2  2D0C               	goto	l2946
  5700  04F3                     u2230:
  5701  04F3                     l2938:
  5702                           
  5703                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  5704  04F3  0859               	movf	vfpfcnvrt@fmt,w
  5705  04F4  0086               	movwf	6
  5706  04F5  0187               	clrf	7
  5707  04F6  3001               	movlw	1
  5708  04F7  0781               	addwf	1,f
  5709  04F8  3141               	addfsr 1,1
  5710  04F9  1803               	skipnc
  5711  04FA  0A81               	incf	1,f
  5712  04FB                     l2940:
  5713                           
  5714                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  5715  04FB  3025               	movlw	37
  5716  04FC  00A2               	movwf	fputc@c
  5717  04FD  3000               	movlw	0
  5718  04FE  00A3               	movwf	fputc@c+1
  5719  04FF  0868               	movf	vfpfcnvrt@fp,w
  5720  0500  00DB               	movwf	??_vfpfcnvrt
  5721  0501  085B               	movf	??_vfpfcnvrt,w
  5722  0502  00A4               	movwf	fputc@fp
  5723  0503  3186  266E  3184   	fcall	_fputc
  5724  0506                     l2942:
  5725                           
  5726                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  5727  0506  3001               	movlw	1
  5728  0507  0020               	movlb	0	; select bank0
  5729  0508  00D9               	movwf	?_vfpfcnvrt
  5730  0509  3000               	movlw	0
  5731  050A  00DA               	movwf	?_vfpfcnvrt+1
  5732  050B  2D3A               	goto	l1066
  5733  050C                     l2946:
  5734                           
  5735                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  5736  050C  0859               	movf	vfpfcnvrt@fmt,w
  5737  050D  0086               	movwf	6
  5738  050E  0187               	clrf	7
  5739  050F  3001               	movlw	1
  5740  0510  0781               	addwf	1,f
  5741  0511  3141               	addfsr 1,1
  5742  0512  1803               	skipnc
  5743  0513  0A81               	incf	1,f
  5744  0514                     l2948:
  5745                           
  5746                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  5747  0514  01D9               	clrf	?_vfpfcnvrt
  5748  0515  01DA               	clrf	?_vfpfcnvrt+1
  5749  0516  2D3A               	goto	l1066
  5750  0517                     l2952:
  5751                           
  5752                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  5753  0517  0859               	movf	vfpfcnvrt@fmt,w
  5754  0518  0086               	movwf	6
  5755  0519  0187               	clrf	7
  5756  051A  3F40               	moviw [0]fsr1
  5757  051B  00DB               	movwf	??_vfpfcnvrt
  5758  051C  3F41               	moviw [1]fsr1
  5759  051D  00DC               	movwf	??_vfpfcnvrt+1
  5760  051E  085B               	movf	??_vfpfcnvrt,w
  5761  051F  0084               	movwf	4
  5762  0520  085C               	movf	??_vfpfcnvrt+1,w
  5763  0521  0085               	movwf	5
  5764  0522  0800               	movf	0,w	;code access
  5765  0523  00DD               	movwf	??_vfpfcnvrt+2
  5766  0524  01DE               	clrf	??_vfpfcnvrt+3
  5767  0525  085D               	movf	??_vfpfcnvrt+2,w
  5768  0526  00A2               	movwf	fputc@c
  5769  0527  085E               	movf	??_vfpfcnvrt+3,w
  5770  0528  00A3               	movwf	fputc@c+1
  5771  0529  0868               	movf	vfpfcnvrt@fp,w
  5772  052A  00DF               	movwf	??_vfpfcnvrt+4
  5773  052B  085F               	movf	??_vfpfcnvrt+4,w
  5774  052C  00A4               	movwf	fputc@fp
  5775  052D  3186  266E  3184   	fcall	_fputc
  5776  0530                     l2954:
  5777                           
  5778                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  5779  0530  0020               	movlb	0	; select bank0
  5780  0531  0859               	movf	vfpfcnvrt@fmt,w
  5781  0532  0086               	movwf	6
  5782  0533  0187               	clrf	7
  5783  0534  3001               	movlw	1
  5784  0535  0781               	addwf	1,f
  5785  0536  3141               	addfsr 1,1
  5786  0537  1803               	skipnc
  5787  0538  0A81               	incf	1,f
  5788  0539  2D06               	goto	l2942
  5789  053A                     l1066:
  5790  053A  0008               	return
  5791  053B                     __end_of_vfpfcnvrt:
  5792                           
  5793                           	psect	text11
  5794  0026                     __ptext11:	
  5795 ;; *************** function _dtoa *****************
  5796 ;; Defined at:
  5797 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  5798 ;; Parameters:    Size  Location     Type
  5799 ;;  fp              1    wreg     PTR struct _IO_FILE
  5800 ;;		 -> NULL(0), 
  5801 ;;  d               8   27[BANK0 ] long long 
  5802 ;; Auto vars:     Size  Location     Type
  5803 ;;  fp              1   40[BANK0 ] PTR struct _IO_FILE
  5804 ;;		 -> NULL(0), 
  5805 ;;  n               8   47[BANK0 ] long long 
  5806 ;;  i               2   55[BANK0 ] int 
  5807 ;;  s               2   45[BANK0 ] int 
  5808 ;;  w               2   43[BANK0 ] int 
  5809 ;;  p               2   41[BANK0 ] int 
  5810 ;; Return value:  Size  Location     Type
  5811 ;;                  2   27[BANK0 ] int 
  5812 ;; Registers used:
  5813 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5814 ;; Tracked objects:
  5815 ;;		On entry : 0/0
  5816 ;;		On exit  : 0/0
  5817 ;;		Unchanged: 0/0
  5818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5819 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5820 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5821 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5822 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5823 ;;Total ram usage:       30 bytes
  5824 ;; Hardware stack levels used:    1
  5825 ;; Hardware stack levels required when called:   11
  5826 ;; This function calls:
  5827 ;;		___aodiv
  5828 ;;		___aomod
  5829 ;;		_abs
  5830 ;;		_pad
  5831 ;; This function is called by:
  5832 ;;		_vfpfcnvrt
  5833 ;; This function uses a non-reentrant model
  5834 ;;
  5835                           
  5836                           
  5837                           ;psect for function _dtoa
  5838  0026                     _dtoa:
  5839                           
  5840                           ;incstack = 0
  5841                           ; Regs used in _dtoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5842                           ;dtoa@fp stored from wreg
  5843  0026  0020               	movlb	0	; select bank0
  5844  0027  00C8               	movwf	dtoa@fp
  5845  0028                     l2842:
  5846                           
  5847                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  5848  0028  083B               	movf	dtoa@d,w
  5849  0029  00CF               	movwf	dtoa@n
  5850  002A  083C               	movf	dtoa@d+1,w
  5851  002B  00D0               	movwf	dtoa@n+1
  5852  002C  083D               	movf	dtoa@d+2,w
  5853  002D  00D1               	movwf	dtoa@n+2
  5854  002E  083E               	movf	dtoa@d+3,w
  5855  002F  00D2               	movwf	dtoa@n+3
  5856  0030  083F               	movf	dtoa@d+4,w
  5857  0031  00D3               	movwf	dtoa@n+4
  5858  0032  0840               	movf	dtoa@d+5,w
  5859  0033  00D4               	movwf	dtoa@n+5
  5860  0034  0841               	movf	dtoa@d+6,w
  5861  0035  00D5               	movwf	dtoa@n+6
  5862  0036  0842               	movf	dtoa@d+7,w
  5863  0037  00D6               	movwf	dtoa@n+7
  5864  0038                     l2844:
  5865                           
  5866                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  5867  0038  304F               	movlw	low dtoa@n
  5868  0039  0086               	movwf	6
  5869  003A  3000               	movlw	high dtoa@n
  5870  003B  0087               	movwf	7
  5871  003C  3F47               	moviw [7]fsr1
  5872  003D  00C3               	movwf	??_dtoa
  5873  003E  1BC3               	btfsc	??_dtoa,7
  5874  003F  2841               	goto	u2041
  5875  0040  2843               	goto	u2040
  5876  0041                     u2041:
  5877  0041  3001               	movlw	1
  5878  0042  2844               	goto	u2050
  5879  0043                     u2040:
  5880  0043  3000               	movlw	0
  5881  0044                     u2050:
  5882  0044  0020               	movlb	0	; select bank0
  5883  0045  00C4               	movwf	??_dtoa+1
  5884  0046  01C5               	clrf	??_dtoa+2
  5885  0047  0844               	movf	??_dtoa+1,w
  5886  0048  00CD               	movwf	dtoa@s
  5887  0049  0845               	movf	??_dtoa+2,w
  5888  004A  00CE               	movwf	dtoa@s+1
  5889  004B                     l2846:
  5890                           
  5891                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  5892  004B  084D               	movf	dtoa@s,w
  5893  004C  044E               	iorwf	dtoa@s+1,w
  5894  004D  1903               	btfsc	3,2
  5895  004E  2850               	goto	u2061
  5896  004F  2851               	goto	u2060
  5897  0050                     u2061:
  5898  0050  286F               	goto	l1036
  5899  0051                     u2060:
  5900  0051                     l2848:
  5901                           
  5902                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  5903  0051  09CF               	comf	dtoa@n,f
  5904  0052  09D0               	comf	dtoa@n+1,f
  5905  0053  09D1               	comf	dtoa@n+2,f
  5906  0054  09D2               	comf	dtoa@n+3,f
  5907  0055  09D3               	comf	dtoa@n+4,f
  5908  0056  09D4               	comf	dtoa@n+5,f
  5909  0057  09D5               	comf	dtoa@n+6,f
  5910  0058  09D6               	comf	dtoa@n+7,f
  5911  0059  0ACF               	incf	dtoa@n,f
  5912  005A  1D03               	skipz
  5913  005B  286F               	goto	u207lld
  5914  005C  0AD0               	incf	dtoa@n+1,f
  5915  005D  1D03               	skipz
  5916  005E  286F               	goto	u207lld
  5917  005F  0AD1               	incf	dtoa@n+2,f
  5918  0060  1D03               	skipz
  5919  0061  286F               	goto	u207lld
  5920  0062  0AD2               	incf	dtoa@n+3,f
  5921  0063  1D03               	skipz
  5922  0064  286F               	goto	u207lld
  5923  0065  0AD3               	incf	dtoa@n+4,f
  5924  0066  1D03               	skipz
  5925  0067  286F               	goto	u207lld
  5926  0068  0AD4               	incf	dtoa@n+5,f
  5927  0069  1D03               	skipz
  5928  006A  286F               	goto	u207lld
  5929  006B  0AD5               	incf	dtoa@n+6,f
  5930  006C  1D03               	skipz
  5931  006D  286F               	goto	u207lld
  5932  006E  0AD6               	incf	dtoa@n+7,f
  5933  006F                     u207lld:
  5934  006F                     l1036:	
  5935                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 297:     }
  5936                           
  5937                           
  5938                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  5939  006F  1BF1               	btfsc	_prec+1,7
  5940  0070  2872               	goto	u2081
  5941  0071  2873               	goto	u2080
  5942  0072                     u2081:
  5943  0072  2877               	goto	l1037
  5944  0073                     u2080:
  5945  0073                     l2850:
  5946                           
  5947                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  5948  0073  30FD               	movlw	253
  5949  0074  05F2               	andwf	_flags,f
  5950  0075  30FF               	movlw	255
  5951  0076  05F3               	andwf	_flags+1,f
  5952  0077                     l1037:	
  5953                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 302:     }
  5954                           
  5955                           
  5956                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  5957  0077  0871               	movf	_prec+1,w
  5958  0078  3A80               	xorlw	128
  5959  0079  0020               	movlb	0	; select bank0
  5960  007A  00C3               	movwf	??_dtoa
  5961  007B  3080               	movlw	128
  5962  007C  0243               	subwf	??_dtoa,w
  5963  007D  1D03               	skipz
  5964  007E  2881               	goto	u2095
  5965  007F  3001               	movlw	1
  5966  0080  0270               	subwf	_prec,w
  5967  0081                     u2095:
  5968  0081  1803               	skipnc
  5969  0082  2884               	goto	u2091
  5970  0083  2885               	goto	u2090
  5971  0084                     u2091:
  5972  0084  288B               	goto	l2854
  5973  0085                     u2090:
  5974  0085                     l2852:
  5975  0085  3001               	movlw	1
  5976  0086  0020               	movlb	0	; select bank0
  5977  0087  00C9               	movwf	dtoa@p
  5978  0088  3000               	movlw	0
  5979  0089  00CA               	movwf	dtoa@p+1
  5980  008A  2890               	goto	l1041
  5981  008B                     l2854:
  5982  008B  0871               	movf	_prec+1,w
  5983  008C  0020               	movlb	0	; select bank0
  5984  008D  00CA               	movwf	dtoa@p+1
  5985  008E  0870               	movf	_prec,w
  5986  008F  00C9               	movwf	dtoa@p
  5987  0090                     l1041:
  5988                           
  5989                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  5990  0090  0021               	movlb	1	; select bank1
  5991  0091  0823               	movf	(_width+1)^(0+128),w
  5992  0092  0020               	movlb	0	; select bank0
  5993  0093  00CC               	movwf	dtoa@w+1
  5994  0094  0021               	movlb	1	; select bank1
  5995  0095  0822               	movf	_width^(0+128),w
  5996  0096  0020               	movlb	0	; select bank0
  5997  0097  00CB               	movwf	dtoa@w
  5998  0098                     l2856:
  5999                           
  6000                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  6001  0098  084D               	movf	dtoa@s,w
  6002  0099  044E               	iorwf	dtoa@s+1,w
  6003  009A  1D03               	btfss	3,2
  6004  009B  289D               	goto	u2101
  6005  009C  289E               	goto	u2100
  6006  009D                     u2101:
  6007  009D  28A2               	goto	l2860
  6008  009E                     u2100:
  6009  009E                     l2858:
  6010  009E  1D72               	btfss	_flags,2
  6011  009F  28A1               	goto	u2111
  6012  00A0  28A2               	goto	u2110
  6013  00A1                     u2111:
  6014  00A1  28A6               	goto	l1042
  6015  00A2                     u2110:
  6016  00A2                     l2860:
  6017                           
  6018                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 306:         --w;
  6019  00A2  30FF               	movlw	255
  6020  00A3  07CB               	addwf	dtoa@w,f
  6021  00A4  30FF               	movlw	255
  6022  00A5  3DCC               	addwfc	dtoa@w+1,f
  6023  00A6                     l1042:	
  6024                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 307:     }
  6025                           
  6026                           
  6027                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  6028  00A6  301F               	movlw	31
  6029  00A7  00D7               	movwf	dtoa@i
  6030  00A8  3000               	movlw	0
  6031  00A9  00D8               	movwf	dtoa@i+1
  6032  00AA                     l2862:
  6033                           
  6034                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  6035  00AA  0021               	movlb	1	; select bank1
  6036  00AB  01C4               	clrf	(_dbuf^(0+128)+31)
  6037                           
  6038                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6039  00AC  2915               	goto	l1045
  6040  00AD                     l2864:
  6041                           
  6042                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 313:         --i;
  6043  00AD  30FF               	movlw	255
  6044  00AE  0020               	movlb	0	; select bank0
  6045  00AF  07D7               	addwf	dtoa@i,f
  6046  00B0  30FF               	movlw	255
  6047  00B1  3DD8               	addwfc	dtoa@i+1,f
  6048  00B2                     l2866:
  6049                           
  6050                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  6051  00B2  300A               	movlw	10
  6052  00B3  00A0               	movwf	___aomod@divisor
  6053  00B4  01A1               	clrf	___aomod@divisor+1
  6054  00B5  01A2               	clrf	___aomod@divisor+2
  6055  00B6  01A3               	clrf	___aomod@divisor+3
  6056  00B7  01A4               	clrf	___aomod@divisor+4
  6057  00B8  01A5               	clrf	___aomod@divisor+5
  6058  00B9  01A6               	clrf	___aomod@divisor+6
  6059  00BA  01A7               	clrf	___aomod@divisor+7
  6060  00BB  084F               	movf	dtoa@n,w
  6061  00BC  00A8               	movwf	___aomod@dividend
  6062  00BD  0850               	movf	dtoa@n+1,w
  6063  00BE  00A9               	movwf	___aomod@dividend+1
  6064  00BF  0851               	movf	dtoa@n+2,w
  6065  00C0  00AA               	movwf	___aomod@dividend+2
  6066  00C1  0852               	movf	dtoa@n+3,w
  6067  00C2  00AB               	movwf	___aomod@dividend+3
  6068  00C3  0853               	movf	dtoa@n+4,w
  6069  00C4  00AC               	movwf	___aomod@dividend+4
  6070  00C5  0854               	movf	dtoa@n+5,w
  6071  00C6  00AD               	movwf	___aomod@dividend+5
  6072  00C7  0855               	movf	dtoa@n+6,w
  6073  00C8  00AE               	movwf	___aomod@dividend+6
  6074  00C9  0856               	movf	dtoa@n+7,w
  6075  00CA  00AF               	movwf	___aomod@dividend+7
  6076  00CB  3182  228D  3180   	fcall	___aomod
  6077  00CE  0020               	movlb	0	; select bank0
  6078  00CF  0821               	movf	?___aomod+1,w
  6079  00D0  00B4               	movwf	abs@a+1
  6080  00D1  0820               	movf	?___aomod,w
  6081  00D2  00B3               	movwf	abs@a
  6082  00D3  3187  27E2  3180   	fcall	_abs
  6083  00D6  0020               	movlb	0	; select bank0
  6084  00D7  0833               	movf	?_abs,w
  6085  00D8  3E30               	addlw	48
  6086  00D9  00C3               	movwf	??_dtoa
  6087  00DA  0857               	movf	dtoa@i,w
  6088  00DB  3EA5               	addlw	(low (_dbuf| 0))& (0+255)
  6089  00DC  0086               	movwf	6
  6090  00DD  0187               	clrf	7
  6091  00DE  0843               	movf	??_dtoa,w
  6092  00DF  0081               	movwf	1
  6093  00E0                     l2868:
  6094                           
  6095                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 315:         --p;
  6096  00E0  30FF               	movlw	255
  6097  00E1  07C9               	addwf	dtoa@p,f
  6098  00E2  30FF               	movlw	255
  6099  00E3  3DCA               	addwfc	dtoa@p+1,f
  6100  00E4                     l2870:
  6101                           
  6102                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 316:         --w;
  6103  00E4  30FF               	movlw	255
  6104  00E5  07CB               	addwf	dtoa@w,f
  6105  00E6  30FF               	movlw	255
  6106  00E7  3DCC               	addwfc	dtoa@w+1,f
  6107  00E8                     l2872:
  6108                           
  6109                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  6110  00E8  300A               	movlw	10
  6111  00E9  00A0               	movwf	___aodiv@divisor
  6112  00EA  01A1               	clrf	___aodiv@divisor+1
  6113  00EB  01A2               	clrf	___aodiv@divisor+2
  6114  00EC  01A3               	clrf	___aodiv@divisor+3
  6115  00ED  01A4               	clrf	___aodiv@divisor+4
  6116  00EE  01A5               	clrf	___aodiv@divisor+5
  6117  00EF  01A6               	clrf	___aodiv@divisor+6
  6118  00F0  01A7               	clrf	___aodiv@divisor+7
  6119  00F1  084F               	movf	dtoa@n,w
  6120  00F2  00A8               	movwf	___aodiv@dividend
  6121  00F3  0850               	movf	dtoa@n+1,w
  6122  00F4  00A9               	movwf	___aodiv@dividend+1
  6123  00F5  0851               	movf	dtoa@n+2,w
  6124  00F6  00AA               	movwf	___aodiv@dividend+2
  6125  00F7  0852               	movf	dtoa@n+3,w
  6126  00F8  00AB               	movwf	___aodiv@dividend+3
  6127  00F9  0853               	movf	dtoa@n+4,w
  6128  00FA  00AC               	movwf	___aodiv@dividend+4
  6129  00FB  0854               	movf	dtoa@n+5,w
  6130  00FC  00AD               	movwf	___aodiv@dividend+5
  6131  00FD  0855               	movf	dtoa@n+6,w
  6132  00FE  00AE               	movwf	___aodiv@dividend+6
  6133  00FF  0856               	movf	dtoa@n+7,w
  6134  0100  00AF               	movwf	___aodiv@dividend+7
  6135  0101  3181  2188  3180   	fcall	___aodiv
  6136  0104  0020               	movlb	0	; select bank0
  6137  0105  0820               	movf	?___aodiv,w
  6138  0106  00CF               	movwf	dtoa@n
  6139  0107  0821               	movf	?___aodiv+1,w
  6140  0108  00D0               	movwf	dtoa@n+1
  6141  0109  0822               	movf	?___aodiv+2,w
  6142  010A  00D1               	movwf	dtoa@n+2
  6143  010B  0823               	movf	?___aodiv+3,w
  6144  010C  00D2               	movwf	dtoa@n+3
  6145  010D  0824               	movf	?___aodiv+4,w
  6146  010E  00D3               	movwf	dtoa@n+4
  6147  010F  0825               	movf	?___aodiv+5,w
  6148  0110  00D4               	movwf	dtoa@n+5
  6149  0111  0826               	movf	?___aodiv+6,w
  6150  0112  00D5               	movwf	dtoa@n+6
  6151  0113  0827               	movf	?___aodiv+7,w
  6152  0114  00D6               	movwf	dtoa@n+7
  6153  0115                     l1045:	
  6154                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 318:     }
  6155                           
  6156                           
  6157                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6158  0115  0020               	movlb	0	; select bank0
  6159  0116  0858               	movf	dtoa@i+1,w
  6160  0117  3A80               	xorlw	128
  6161  0118  00C3               	movwf	??_dtoa
  6162  0119  3080               	movlw	128
  6163  011A  0243               	subwf	??_dtoa,w
  6164  011B  1D03               	skipz
  6165  011C  291F               	goto	u2125
  6166  011D  3001               	movlw	1
  6167  011E  0257               	subwf	dtoa@i,w
  6168  011F                     u2125:
  6169  011F  1C03               	skipc
  6170  0120  2922               	goto	u2121
  6171  0121  2923               	goto	u2120
  6172  0122                     u2121:
  6173  0122  294F               	goto	l2882
  6174  0123                     u2120:
  6175  0123                     l2874:
  6176  0123  0020               	movlb	0	; select bank0
  6177  0124  084F               	movf	dtoa@n,w
  6178  0125  0450               	iorwf	dtoa@n+1,w
  6179  0126  0451               	iorwf	dtoa@n+2,w
  6180  0127  0452               	iorwf	dtoa@n+3,w
  6181  0128  0453               	iorwf	dtoa@n+4,w
  6182  0129  0454               	iorwf	dtoa@n+5,w
  6183  012A  0455               	iorwf	dtoa@n+6,w
  6184  012B  0456               	iorwf	dtoa@n+7,w
  6185  012C  1D03               	skipz
  6186  012D  292F               	goto	u2131
  6187  012E  2930               	goto	u2130
  6188  012F                     u2131:
  6189  012F  28AD               	goto	l2864
  6190  0130                     u2130:
  6191  0130                     l2876:
  6192  0130  084A               	movf	dtoa@p+1,w
  6193  0131  3A80               	xorlw	128
  6194  0132  00C3               	movwf	??_dtoa
  6195  0133  3080               	movlw	128
  6196  0134  0243               	subwf	??_dtoa,w
  6197  0135  1D03               	skipz
  6198  0136  2939               	goto	u2145
  6199  0137  3001               	movlw	1
  6200  0138  0249               	subwf	dtoa@p,w
  6201  0139                     u2145:
  6202  0139  1803               	skipnc
  6203  013A  293C               	goto	u2141
  6204  013B  293D               	goto	u2140
  6205  013C                     u2141:
  6206  013C  28AD               	goto	l2864
  6207  013D                     u2140:
  6208  013D                     l2878:
  6209  013D  0020               	movlb	0	; select bank0
  6210  013E  084C               	movf	dtoa@w+1,w
  6211  013F  3A80               	xorlw	128
  6212  0140  00C3               	movwf	??_dtoa
  6213  0141  3080               	movlw	128
  6214  0142  0243               	subwf	??_dtoa,w
  6215  0143  1D03               	skipz
  6216  0144  2947               	goto	u2155
  6217  0145  3001               	movlw	1
  6218  0146  024B               	subwf	dtoa@w,w
  6219  0147                     u2155:
  6220  0147  1C03               	skipc
  6221  0148  294A               	goto	u2151
  6222  0149  294B               	goto	u2150
  6223  014A                     u2151:
  6224  014A  294F               	goto	l2882
  6225  014B                     u2150:
  6226  014B                     l2880:
  6227  014B  18F2               	btfsc	_flags,1
  6228  014C  294E               	goto	u2161
  6229  014D  294F               	goto	u2160
  6230  014E                     u2161:
  6231  014E  28AD               	goto	l2864
  6232  014F                     u2160:
  6233  014F                     l2882:
  6234                           
  6235                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  6236  014F  0020               	movlb	0	; select bank0
  6237  0150  084D               	movf	dtoa@s,w
  6238  0151  044E               	iorwf	dtoa@s+1,w
  6239  0152  1D03               	btfss	3,2
  6240  0153  2955               	goto	u2171
  6241  0154  2956               	goto	u2170
  6242  0155                     u2171:
  6243  0155  295A               	goto	l2886
  6244  0156                     u2170:
  6245  0156                     l2884:
  6246  0156  1D72               	btfss	_flags,2
  6247  0157  2959               	goto	u2181
  6248  0158  295A               	goto	u2180
  6249  0159                     u2181:
  6250  0159  2975               	goto	l2896
  6251  015A                     u2180:
  6252  015A                     l2886:
  6253                           
  6254                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 322:         --i;
  6255  015A  30FF               	movlw	255
  6256  015B  07D7               	addwf	dtoa@i,f
  6257  015C  30FF               	movlw	255
  6258  015D  3DD8               	addwfc	dtoa@i+1,f
  6259  015E                     l2888:
  6260                           
  6261                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  6262  015E  084D               	movf	dtoa@s,w
  6263  015F  044E               	iorwf	dtoa@s+1,w
  6264  0160  1D03               	btfss	3,2
  6265  0161  2963               	goto	u2191
  6266  0162  2964               	goto	u2190
  6267  0163                     u2191:
  6268  0163  2969               	goto	l2892
  6269  0164                     u2190:
  6270  0164                     l2890:
  6271  0164  302B               	movlw	43
  6272  0165  00C6               	movwf	_dtoa$1180
  6273  0166  3000               	movlw	0
  6274  0167  00C7               	movwf	_dtoa$1180+1
  6275  0168  296D               	goto	l2894
  6276  0169                     l2892:
  6277  0169  302D               	movlw	45
  6278  016A  00C6               	movwf	_dtoa$1180
  6279  016B  3000               	movlw	0
  6280  016C  00C7               	movwf	_dtoa$1180+1
  6281  016D                     l2894:
  6282  016D  0846               	movf	_dtoa$1180,w
  6283  016E  00C3               	movwf	??_dtoa
  6284  016F  0857               	movf	dtoa@i,w
  6285  0170  3EA5               	addlw	(low (_dbuf| 0))& (0+255)
  6286  0171  0086               	movwf	6
  6287  0172  0187               	clrf	7
  6288  0173  0843               	movf	??_dtoa,w
  6289  0174  0081               	movwf	1
  6290  0175                     l2896:
  6291                           
  6292                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  6293  0175  0857               	movf	dtoa@i,w
  6294  0176  3EA5               	addlw	(low (_dbuf| 0))& (0+255)
  6295  0177  00C3               	movwf	??_dtoa
  6296  0178  0843               	movf	??_dtoa,w
  6297  0179  00B2               	movwf	pad@buf
  6298  017A  084C               	movf	dtoa@w+1,w
  6299  017B  00B4               	movwf	pad@p+1
  6300  017C  084B               	movf	dtoa@w,w
  6301  017D  00B3               	movwf	pad@p
  6302  017E  0848               	movf	dtoa@fp,w
  6303  017F  3186  2618  3180   	fcall	_pad
  6304  0182  0020               	movlb	0	; select bank0
  6305  0183  0833               	movf	?_pad+1,w
  6306  0184  00BC               	movwf	?_dtoa+1
  6307  0185  0832               	movf	?_pad,w
  6308  0186  00BB               	movwf	?_dtoa
  6309  0187                     l1059:
  6310  0187  0008               	return
  6311  0188                     __end_of_dtoa:
  6312                           
  6313                           	psect	text12
  6314  0618                     __ptext12:	
  6315 ;; *************** function _pad *****************
  6316 ;; Defined at:
  6317 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  6318 ;; Parameters:    Size  Location     Type
  6319 ;;  fp              1    wreg     PTR struct _IO_FILE
  6320 ;;		 -> NULL(0), 
  6321 ;;  buf             1   18[BANK0 ] PTR unsigned char 
  6322 ;;		 -> dbuf(32), 
  6323 ;;  p               2   19[BANK0 ] int 
  6324 ;; Auto vars:     Size  Location     Type
  6325 ;;  fp              1   26[BANK0 ] PTR struct _IO_FILE
  6326 ;;		 -> NULL(0), 
  6327 ;;  w               2   24[BANK0 ] int 
  6328 ;;  i               2   22[BANK0 ] int 
  6329 ;; Return value:  Size  Location     Type
  6330 ;;                  2   18[BANK0 ] int 
  6331 ;; Registers used:
  6332 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6333 ;; Tracked objects:
  6334 ;;		On entry : 0/0
  6335 ;;		On exit  : 0/0
  6336 ;;		Unchanged: 0/0
  6337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6338 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6339 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6340 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6341 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6342 ;;Total ram usage:        9 bytes
  6343 ;; Hardware stack levels used:    1
  6344 ;; Hardware stack levels required when called:   10
  6345 ;; This function calls:
  6346 ;;		_fputc
  6347 ;;		_fputs
  6348 ;;		_strlen
  6349 ;; This function is called by:
  6350 ;;		_dtoa
  6351 ;; This function uses a non-reentrant model
  6352 ;;
  6353                           
  6354                           
  6355                           ;psect for function _pad
  6356  0618                     _pad:
  6357                           
  6358                           ;incstack = 0
  6359                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6360                           ;pad@fp stored from wreg
  6361  0618  0020               	movlb	0	; select bank0
  6362  0619  00BA               	movwf	pad@fp
  6363  061A                     l2810:
  6364                           
  6365                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6366  061A  1C72               	btfss	_flags,0
  6367  061B  2E1D               	goto	u1981
  6368  061C  2E1E               	goto	u1980
  6369  061D                     u1981:
  6370  061D  2E26               	goto	l2814
  6371  061E                     u1980:
  6372  061E                     l2812:
  6373                           
  6374                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6375  061E  083A               	movf	pad@fp,w
  6376  061F  00B5               	movwf	??_pad
  6377  0620  0835               	movf	??_pad,w
  6378  0621  00AA               	movwf	fputs@fp
  6379  0622  0832               	movf	pad@buf,w
  6380  0623  3187  2757  3186   	fcall	_fputs
  6381  0626                     l2814:
  6382                           
  6383                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6384  0626  0020               	movlb	0	; select bank0
  6385  0627  1BB4               	btfsc	pad@p+1,7
  6386  0628  2E2A               	goto	u1991
  6387  0629  2E2B               	goto	u1990
  6388  062A                     u1991:
  6389  062A  2E30               	goto	l2818
  6390  062B                     u1990:
  6391  062B                     l2816:
  6392  062B  0834               	movf	pad@p+1,w
  6393  062C  00B9               	movwf	pad@w+1
  6394  062D  0833               	movf	pad@p,w
  6395  062E  00B8               	movwf	pad@w
  6396  062F  2E32               	goto	l1028
  6397  0630                     l2818:
  6398  0630  01B8               	clrf	pad@w
  6399  0631  01B9               	clrf	pad@w+1
  6400  0632                     l1028:
  6401                           
  6402                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6403  0632  01B6               	clrf	pad@i
  6404  0633  01B7               	clrf	pad@i+1
  6405                           
  6406                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6407  0634  2E46               	goto	l2824
  6408  0635                     l2820:
  6409                           
  6410                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6411  0635  3020               	movlw	32
  6412  0636  0020               	movlb	0	; select bank0
  6413  0637  00A2               	movwf	fputc@c
  6414  0638  3000               	movlw	0
  6415  0639  00A3               	movwf	fputc@c+1
  6416  063A  083A               	movf	pad@fp,w
  6417  063B  00B5               	movwf	??_pad
  6418  063C  0835               	movf	??_pad,w
  6419  063D  00A4               	movwf	fputc@fp
  6420  063E  3186  266E  3186   	fcall	_fputc
  6421  0641                     l2822:
  6422                           
  6423                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6424  0641  3001               	movlw	1
  6425  0642  0020               	movlb	0	; select bank0
  6426  0643  07B6               	addwf	pad@i,f
  6427  0644  3000               	movlw	0
  6428  0645  3DB7               	addwfc	pad@i+1,f
  6429  0646                     l2824:
  6430                           
  6431                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6432  0646  0837               	movf	pad@i+1,w
  6433  0647  3A80               	xorlw	128
  6434  0648  00B5               	movwf	??_pad
  6435  0649  0839               	movf	pad@w+1,w
  6436  064A  3A80               	xorlw	128
  6437  064B  0235               	subwf	??_pad,w
  6438  064C  1D03               	skipz
  6439  064D  2E50               	goto	u2005
  6440  064E  0838               	movf	pad@w,w
  6441  064F  0236               	subwf	pad@i,w
  6442  0650                     u2005:
  6443  0650  1C03               	skipc
  6444  0651  2E53               	goto	u2001
  6445  0652  2E54               	goto	u2000
  6446  0653                     u2001:
  6447  0653  2E35               	goto	l2820
  6448  0654                     u2000:
  6449  0654                     l1031:
  6450                           
  6451                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6452  0654  1872               	btfsc	_flags,0
  6453  0655  2E57               	goto	u2011
  6454  0656  2E58               	goto	u2010
  6455  0657                     u2011:
  6456  0657  2E61               	goto	l1032
  6457  0658                     u2010:
  6458  0658                     l2826:
  6459                           
  6460                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6461  0658  0020               	movlb	0	; select bank0
  6462  0659  083A               	movf	pad@fp,w
  6463  065A  00B5               	movwf	??_pad
  6464  065B  0835               	movf	??_pad,w
  6465  065C  00AA               	movwf	fputs@fp
  6466  065D  0832               	movf	pad@buf,w
  6467  065E  3187  2757  3186   	fcall	_fputs
  6468  0661                     l1032:	
  6469                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 92:     }
  6470                           
  6471                           
  6472                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6473  0661  0020               	movlb	0	; select bank0
  6474  0662  0832               	movf	pad@buf,w
  6475  0663  318F  27E6  3186   	fcall	_strlen
  6476  0666  0020               	movlb	0	; select bank0
  6477  0667  0838               	movf	pad@w,w
  6478  0668  0720               	addwf	?_strlen,w
  6479  0669  00B2               	movwf	?_pad
  6480  066A  0839               	movf	pad@w+1,w
  6481  066B  3D21               	addwfc	?_strlen+1,w
  6482  066C  00B3               	movwf	?_pad+1
  6483  066D                     l1033:
  6484  066D  0008               	return
  6485  066E                     __end_of_pad:
  6486                           
  6487                           	psect	text13
  6488  0FE6                     __ptext13:	
  6489 ;; *************** function _strlen *****************
  6490 ;; Defined at:
  6491 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strlen.c"
  6492 ;; Parameters:    Size  Location     Type
  6493 ;;  s               1    wreg     PTR const unsigned char 
  6494 ;;		 -> dbuf(32), 
  6495 ;; Auto vars:     Size  Location     Type
  6496 ;;  s               1    4[BANK0 ] PTR const unsigned char 
  6497 ;;		 -> dbuf(32), 
  6498 ;;  a               1    3[BANK0 ] PTR const unsigned char 
  6499 ;;		 -> dbuf(32), 
  6500 ;; Return value:  Size  Location     Type
  6501 ;;                  2    0[BANK0 ] unsigned int 
  6502 ;; Registers used:
  6503 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6504 ;; Tracked objects:
  6505 ;;		On entry : 0/0
  6506 ;;		On exit  : 0/0
  6507 ;;		Unchanged: 0/0
  6508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6509 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6510 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6511 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6512 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6513 ;;Total ram usage:        5 bytes
  6514 ;; Hardware stack levels used:    1
  6515 ;; Hardware stack levels required when called:    6
  6516 ;; This function calls:
  6517 ;;		Nothing
  6518 ;; This function is called by:
  6519 ;;		_pad
  6520 ;; This function uses a non-reentrant model
  6521 ;;
  6522                           
  6523                           
  6524                           ;psect for function _strlen
  6525  0FE6                     _strlen:
  6526                           
  6527                           ;incstack = 0
  6528                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  6529                           ;strlen@s stored from wreg
  6530  0FE6  0020               	movlb	0	; select bank0
  6531  0FE7  00A4               	movwf	strlen@s
  6532  0FE8                     l2726:
  6533  0FE8  0824               	movf	strlen@s,w
  6534  0FE9  00A2               	movwf	??_strlen
  6535  0FEA  0822               	movf	??_strlen,w
  6536  0FEB  00A3               	movwf	strlen@a
  6537  0FEC  2FF1               	goto	l2730
  6538  0FED                     l2728:
  6539  0FED  3001               	movlw	1
  6540  0FEE  00A2               	movwf	??_strlen
  6541  0FEF  0822               	movf	??_strlen,w
  6542  0FF0  07A4               	addwf	strlen@s,f
  6543  0FF1                     l2730:
  6544  0FF1  0824               	movf	strlen@s,w
  6545  0FF2  0086               	movwf	6
  6546  0FF3  0187               	clrf	7
  6547  0FF4  0801               	movf	1,w
  6548  0FF5  1D03               	btfss	3,2
  6549  0FF6  2FF8               	goto	u1751
  6550  0FF7  2FF9               	goto	u1750
  6551  0FF8                     u1751:
  6552  0FF8  2FED               	goto	l2728
  6553  0FF9                     u1750:
  6554  0FF9                     l2732:
  6555  0FF9  0823               	movf	strlen@a,w
  6556  0FFA  0224               	subwf	strlen@s,w
  6557  0FFB  00A0               	movwf	?_strlen
  6558  0FFC  01A1               	clrf	?_strlen+1
  6559  0FFD  1BA0               	btfsc	?_strlen,7
  6560  0FFE  03A1               	decf	?_strlen+1,f
  6561  0FFF                     l1106:
  6562  0FFF  0008               	return
  6563  1000                     __end_of_strlen:
  6564                           
  6565                           	psect	text14
  6566  0757                     __ptext14:	
  6567 ;; *************** function _fputs *****************
  6568 ;; Defined at:
  6569 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputs.c"
  6570 ;; Parameters:    Size  Location     Type
  6571 ;;  s               1    wreg     PTR const unsigned char 
  6572 ;;		 -> dbuf(32), 
  6573 ;;  fp              1   10[BANK0 ] PTR struct _IO_FILE
  6574 ;;		 -> NULL(0), 
  6575 ;; Auto vars:     Size  Location     Type
  6576 ;;  s               1   17[BANK0 ] PTR const unsigned char 
  6577 ;;		 -> dbuf(32), 
  6578 ;;  i               2   15[BANK0 ] int 
  6579 ;;  c               1   14[BANK0 ] unsigned char 
  6580 ;; Return value:  Size  Location     Type
  6581 ;;                  2   10[BANK0 ] int 
  6582 ;; Registers used:
  6583 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6584 ;; Tracked objects:
  6585 ;;		On entry : 0/0
  6586 ;;		On exit  : 0/0
  6587 ;;		Unchanged: 0/0
  6588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6589 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6590 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6591 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6592 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6593 ;;Total ram usage:        8 bytes
  6594 ;; Hardware stack levels used:    1
  6595 ;; Hardware stack levels required when called:    9
  6596 ;; This function calls:
  6597 ;;		_fputc
  6598 ;; This function is called by:
  6599 ;;		_pad
  6600 ;; This function uses a non-reentrant model
  6601 ;;
  6602                           
  6603                           
  6604                           ;psect for function _fputs
  6605  0757                     _fputs:
  6606                           
  6607                           ;incstack = 0
  6608                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6609                           ;fputs@s stored from wreg
  6610  0757  0020               	movlb	0	; select bank0
  6611  0758  00B1               	movwf	fputs@s
  6612  0759                     l2718:
  6613  0759  01AF               	clrf	fputs@i
  6614  075A  01B0               	clrf	fputs@i+1
  6615  075B  2F6F               	goto	l2724
  6616  075C                     l2720:
  6617  075C  082E               	movf	fputs@c,w
  6618  075D  00AB               	movwf	??_fputs
  6619  075E  01AC               	clrf	??_fputs+1
  6620  075F  082B               	movf	??_fputs,w
  6621  0760  00A2               	movwf	fputc@c
  6622  0761  082C               	movf	??_fputs+1,w
  6623  0762  00A3               	movwf	fputc@c+1
  6624  0763  082A               	movf	fputs@fp,w
  6625  0764  00AD               	movwf	??_fputs+2
  6626  0765  082D               	movf	??_fputs+2,w
  6627  0766  00A4               	movwf	fputc@fp
  6628  0767  3186  266E  3187   	fcall	_fputc
  6629  076A                     l2722:
  6630  076A  3001               	movlw	1
  6631  076B  0020               	movlb	0	; select bank0
  6632  076C  07AF               	addwf	fputs@i,f
  6633  076D  3000               	movlw	0
  6634  076E  3DB0               	addwfc	fputs@i+1,f
  6635  076F                     l2724:
  6636  076F  082F               	movf	fputs@i,w
  6637  0770  0731               	addwf	fputs@s,w
  6638  0771  00AB               	movwf	??_fputs
  6639  0772  082B               	movf	??_fputs,w
  6640  0773  0086               	movwf	6
  6641  0774  0187               	clrf	7
  6642  0775  0801               	movf	1,w
  6643  0776  00AC               	movwf	??_fputs+1
  6644  0777  082C               	movf	??_fputs+1,w
  6645  0778  00AE               	movwf	fputs@c
  6646  0779  082E               	movf	fputs@c,w
  6647  077A  1D03               	btfss	3,2
  6648  077B  2F7D               	goto	u1741
  6649  077C  2F7E               	goto	u1740
  6650  077D                     u1741:
  6651  077D  2F5C               	goto	l2720
  6652  077E                     u1740:
  6653  077E                     l1100:
  6654  077E  0008               	return
  6655  077F                     __end_of_fputs:
  6656                           
  6657                           	psect	text15
  6658  066E                     __ptext15:	
  6659 ;; *************** function _fputc *****************
  6660 ;; Defined at:
  6661 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputc.c"
  6662 ;; Parameters:    Size  Location     Type
  6663 ;;  c               2    2[BANK0 ] int 
  6664 ;;  fp              1    4[BANK0 ] PTR struct _IO_FILE
  6665 ;;		 -> NULL(0), 
  6666 ;; Auto vars:     Size  Location     Type
  6667 ;;		None
  6668 ;; Return value:  Size  Location     Type
  6669 ;;                  2    2[BANK0 ] int 
  6670 ;; Registers used:
  6671 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6672 ;; Tracked objects:
  6673 ;;		On entry : 0/0
  6674 ;;		On exit  : 0/0
  6675 ;;		Unchanged: 0/0
  6676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6677 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6679 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6680 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6681 ;;Total ram usage:        8 bytes
  6682 ;; Hardware stack levels used:    1
  6683 ;; Hardware stack levels required when called:    8
  6684 ;; This function calls:
  6685 ;;		_putch
  6686 ;; This function is called by:
  6687 ;;		_pad
  6688 ;;		_vfpfcnvrt
  6689 ;;		_fputs
  6690 ;; This function uses a non-reentrant model
  6691 ;;
  6692                           
  6693                           
  6694                           ;psect for function _fputc
  6695  066E                     _fputc:
  6696  066E                     l2704:	
  6697                           ;incstack = 0
  6698                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6699                           
  6700  066E  0020               	movlb	0	; select bank0
  6701  066F  0824               	movf	fputc@fp,w
  6702  0670  1903               	btfsc	3,2
  6703  0671  2E73               	goto	u1701
  6704  0672  2E74               	goto	u1700
  6705  0673                     u1701:
  6706  0673  2E79               	goto	l2708
  6707  0674                     u1700:
  6708  0674                     l2706:
  6709  0674  0824               	movf	fputc@fp,w
  6710  0675  1D03               	btfss	3,2
  6711  0676  2E78               	goto	u1711
  6712  0677  2E79               	goto	u1710
  6713  0678                     u1711:
  6714  0678  2E7E               	goto	l2710
  6715  0679                     u1710:
  6716  0679                     l2708:
  6717  0679  0822               	movf	fputc@c,w
  6718  067A  318E  26FE  3186   	fcall	_putch
  6719  067D  2EAE               	goto	l1092
  6720  067E                     l2710:
  6721  067E  0824               	movf	fputc@fp,w
  6722  067F  3E03               	addlw	3
  6723  0680  0086               	movwf	6
  6724  0681  0187               	clrf	7
  6725  0682  0016               	moviw fsr1++
  6726  0683  0401               	iorwf	1,w
  6727  0684  1903               	btfsc	3,2
  6728  0685  2E87               	goto	u1721
  6729  0686  2E88               	goto	u1720
  6730  0687                     u1721:
  6731  0687  2EA5               	goto	l2714
  6732  0688                     u1720:
  6733  0688                     l2712:
  6734  0688  0824               	movf	fputc@fp,w
  6735  0689  3E03               	addlw	3
  6736  068A  0086               	movwf	6
  6737  068B  0187               	clrf	7
  6738  068C  3F40               	moviw [0]fsr1
  6739  068D  00A5               	movwf	??_fputc
  6740  068E  3F41               	moviw [1]fsr1
  6741  068F  00A6               	movwf	??_fputc+1
  6742  0690  0A24               	incf	fputc@fp,w
  6743  0691  0086               	movwf	6
  6744  0692  0187               	clrf	7
  6745  0693  3F40               	moviw [0]fsr1
  6746  0694  00A7               	movwf	??_fputc+2
  6747  0695  3F41               	moviw [1]fsr1
  6748  0696  00A8               	movwf	??_fputc+3
  6749  0697  0828               	movf	??_fputc+3,w
  6750  0698  3A80               	xorlw	128
  6751  0699  00A9               	movwf	??_fputc+4
  6752  069A  0826               	movf	??_fputc+1,w
  6753  069B  3A80               	xorlw	128
  6754  069C  0229               	subwf	??_fputc+4,w
  6755  069D  1D03               	skipz
  6756  069E  2EA1               	goto	u1735
  6757  069F  0825               	movf	??_fputc,w
  6758  06A0  0227               	subwf	??_fputc+2,w
  6759  06A1                     u1735:
  6760  06A1  1803               	skipnc
  6761  06A2  2EA4               	goto	u1731
  6762  06A3  2EA5               	goto	u1730
  6763  06A4                     u1731:
  6764  06A4  2EAE               	goto	l1092
  6765  06A5                     u1730:
  6766  06A5                     l2714:
  6767  06A5  0020               	movlb	0	; select bank0
  6768  06A6  0A24               	incf	fputc@fp,w
  6769  06A7  0086               	movwf	6
  6770  06A8  0187               	clrf	7
  6771  06A9  3001               	movlw	1
  6772  06AA  0781               	addwf	1,f
  6773  06AB  3141               	addfsr 1,1
  6774  06AC  1803               	skipnc
  6775  06AD  0A81               	incf	1,f
  6776  06AE                     l1092:
  6777  06AE  0008               	return
  6778  06AF                     __end_of_fputc:
  6779                           
  6780                           	psect	text16
  6781  0EFE                     __ptext16:	
  6782 ;; *************** function _putch *****************
  6783 ;; Defined at:
  6784 ;;		line 146 in file "mcc_generated_files/eusart.c"
  6785 ;; Parameters:    Size  Location     Type
  6786 ;;  txData          1    wreg     unsigned char 
  6787 ;; Auto vars:     Size  Location     Type
  6788 ;;  txData          1    1[BANK0 ] unsigned char 
  6789 ;; Return value:  Size  Location     Type
  6790 ;;                  1    wreg      void 
  6791 ;; Registers used:
  6792 ;;		wreg, status,2, status,0, pclath, cstack
  6793 ;; Tracked objects:
  6794 ;;		On entry : 0/0
  6795 ;;		On exit  : 0/0
  6796 ;;		Unchanged: 0/0
  6797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6799 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6801 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6802 ;;Total ram usage:        1 bytes
  6803 ;; Hardware stack levels used:    1
  6804 ;; Hardware stack levels required when called:    7
  6805 ;; This function calls:
  6806 ;;		_EUSART_Write
  6807 ;; This function is called by:
  6808 ;;		_fputc
  6809 ;; This function uses a non-reentrant model
  6810 ;;
  6811                           
  6812                           
  6813                           ;psect for function _putch
  6814  0EFE                     _putch:
  6815                           
  6816                           ;incstack = 0
  6817                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  6818                           ;putch@txData stored from wreg
  6819  0EFE  0020               	movlb	0	; select bank0
  6820  0EFF  00A1               	movwf	putch@txData
  6821  0F00                     l2702:
  6822                           
  6823                           ;mcc_generated_files/eusart.c: 146: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 147: {;mcc_generated_files/eusart.c: 148:     EUSART_Write(txData);
  6824  0F00  0821               	movf	putch@txData,w
  6825  0F01  318F  2732  318E   	fcall	_EUSART_Write
  6826  0F04                     l162:
  6827  0F04  0008               	return
  6828  0F05                     __end_of_putch:
  6829                           
  6830                           	psect	text17
  6831  0F32                     __ptext17:	
  6832 ;; *************** function _EUSART_Write *****************
  6833 ;; Defined at:
  6834 ;;		line 132 in file "mcc_generated_files/eusart.c"
  6835 ;; Parameters:    Size  Location     Type
  6836 ;;  txData          1    wreg     unsigned char 
  6837 ;; Auto vars:     Size  Location     Type
  6838 ;;  txData          1    0[BANK0 ] unsigned char 
  6839 ;; Return value:  Size  Location     Type
  6840 ;;                  1    wreg      void 
  6841 ;; Registers used:
  6842 ;;		wreg
  6843 ;; Tracked objects:
  6844 ;;		On entry : 0/0
  6845 ;;		On exit  : 0/0
  6846 ;;		Unchanged: 0/0
  6847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6849 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6851 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6852 ;;Total ram usage:        1 bytes
  6853 ;; Hardware stack levels used:    1
  6854 ;; Hardware stack levels required when called:    6
  6855 ;; This function calls:
  6856 ;;		Nothing
  6857 ;; This function is called by:
  6858 ;;		_putch
  6859 ;; This function uses a non-reentrant model
  6860 ;;
  6861                           
  6862                           
  6863                           ;psect for function _EUSART_Write
  6864  0F32                     _EUSART_Write:
  6865                           
  6866                           ;incstack = 0
  6867                           ; Regs used in _EUSART_Write: [wreg]
  6868                           ;EUSART_Write@txData stored from wreg
  6869  0F32  0020               	movlb	0	; select bank0
  6870  0F33  00A0               	movwf	EUSART_Write@txData
  6871  0F34                     l2698:
  6872  0F34                     l153:	
  6873                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  6874                           
  6875                           
  6876                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  6877  0F34  1E10               	btfss	16,4	;volatile
  6878  0F35  2F37               	goto	u1691
  6879  0F36  2F38               	goto	u1690
  6880  0F37                     u1691:
  6881  0F37  2F34               	goto	l153
  6882  0F38                     u1690:
  6883  0F38                     l2700:
  6884                           
  6885                           ;mcc_generated_files/eusart.c: 138:     TX1REG = txData;
  6886  0F38  0820               	movf	EUSART_Write@txData,w
  6887  0F39  0023               	movlb	3	; select bank3
  6888  0F3A  009A               	movwf	26	;volatile
  6889  0F3B                     l156:
  6890  0F3B  0008               	return
  6891  0F3C                     __end_of_EUSART_Write:
  6892                           
  6893                           	psect	text18
  6894  07E2                     __ptext18:	
  6895 ;; *************** function _abs *****************
  6896 ;; Defined at:
  6897 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\abs.c"
  6898 ;; Parameters:    Size  Location     Type
  6899 ;;  a               2   19[BANK0 ] int 
  6900 ;; Auto vars:     Size  Location     Type
  6901 ;;		None
  6902 ;; Return value:  Size  Location     Type
  6903 ;;                  2   19[BANK0 ] int 
  6904 ;; Registers used:
  6905 ;;		wreg, status,2, status,0
  6906 ;; Tracked objects:
  6907 ;;		On entry : 0/0
  6908 ;;		On exit  : 0/0
  6909 ;;		Unchanged: 0/0
  6910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6911 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6913 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6914 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6915 ;;Total ram usage:        4 bytes
  6916 ;; Hardware stack levels used:    1
  6917 ;; Hardware stack levels required when called:    6
  6918 ;; This function calls:
  6919 ;;		Nothing
  6920 ;; This function is called by:
  6921 ;;		_dtoa
  6922 ;; This function uses a non-reentrant model
  6923 ;;
  6924                           
  6925                           
  6926                           ;psect for function _abs
  6927  07E2                     _abs:
  6928  07E2                     l2830:	
  6929                           ;incstack = 0
  6930                           ; Regs used in _abs: [wreg+status,2+status,0]
  6931                           
  6932  07E2  0020               	movlb	0	; select bank0
  6933  07E3  0834               	movf	abs@a+1,w
  6934  07E4  3A80               	xorlw	128
  6935  07E5  00B5               	movwf	??_abs
  6936  07E6  3080               	movlw	128
  6937  07E7  0235               	subwf	??_abs,w
  6938  07E8  1D03               	skipz
  6939  07E9  2FEC               	goto	u2025
  6940  07EA  3001               	movlw	1
  6941  07EB  0233               	subwf	abs@a,w
  6942  07EC                     u2025:
  6943  07EC  1803               	skipnc
  6944  07ED  2FEF               	goto	u2021
  6945  07EE  2FF0               	goto	u2020
  6946  07EF                     u2021:
  6947  07EF  2FFD               	goto	l1077
  6948  07F0                     u2020:
  6949  07F0                     l2832:
  6950  07F0  0020               	movlb	0	; select bank0
  6951  07F1  0933               	comf	abs@a,w
  6952  07F2  00B5               	movwf	??_abs
  6953  07F3  0934               	comf	abs@a+1,w
  6954  07F4  00B6               	movwf	??_abs+1
  6955  07F5  0AB5               	incf	??_abs,f
  6956  07F6  1903               	skipnz
  6957  07F7  0AB6               	incf	??_abs+1,f
  6958  07F8  0835               	movf	??_abs,w
  6959  07F9  00B3               	movwf	?_abs
  6960  07FA  0836               	movf	??_abs+1,w
  6961  07FB  00B4               	movwf	?_abs+1
  6962  07FC  2FFD               	goto	l1080
  6963  07FD                     l1077:
  6964  07FD                     l1080:
  6965  07FD  0008               	return
  6966  07FE                     __end_of_abs:
  6967                           
  6968                           	psect	text19
  6969  028D                     __ptext19:	
  6970 ;; *************** function ___aomod *****************
  6971 ;; Defined at:
  6972 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aomod.c"
  6973 ;; Parameters:    Size  Location     Type
  6974 ;;  divisor         8    0[BANK0 ] long long 
  6975 ;;  dividend        8    8[BANK0 ] long long 
  6976 ;; Auto vars:     Size  Location     Type
  6977 ;;  sign            1   18[BANK0 ] unsigned char 
  6978 ;;  counter         1   17[BANK0 ] unsigned char 
  6979 ;; Return value:  Size  Location     Type
  6980 ;;                  8    0[BANK0 ] long long 
  6981 ;; Registers used:
  6982 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6983 ;; Tracked objects:
  6984 ;;		On entry : 0/0
  6985 ;;		On exit  : 0/0
  6986 ;;		Unchanged: 0/0
  6987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6988 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6989 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6990 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6991 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6992 ;;Total ram usage:       19 bytes
  6993 ;; Hardware stack levels used:    1
  6994 ;; Hardware stack levels required when called:    6
  6995 ;; This function calls:
  6996 ;;		Nothing
  6997 ;; This function is called by:
  6998 ;;		_dtoa
  6999 ;; This function uses a non-reentrant model
  7000 ;;
  7001                           
  7002                           
  7003                           ;psect for function ___aomod
  7004  028D                     ___aomod:
  7005  028D                     l2780:	
  7006                           ;incstack = 0
  7007                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  7008                           
  7009  028D  0020               	movlb	0	; select bank0
  7010  028E  01B2               	clrf	___aomod@sign
  7011  028F                     l2782:
  7012  028F  3028               	movlw	low ___aomod@dividend
  7013  0290  0086               	movwf	6
  7014  0291  3000               	movlw	high ___aomod@dividend
  7015  0292  0087               	movwf	7
  7016  0293  3F47               	moviw [7]fsr1
  7017  0294  00B0               	movwf	??___aomod
  7018  0295  1FB0               	btfss	??___aomod,7
  7019  0296  2A98               	goto	u1881
  7020  0297  2A99               	goto	u1880
  7021  0298                     u1881:
  7022  0298  2ABB               	goto	l2786
  7023  0299                     u1880:
  7024  0299                     l2784:
  7025  0299  0020               	movlb	0	; select bank0
  7026  029A  09A8               	comf	___aomod@dividend,f
  7027  029B  09A9               	comf	___aomod@dividend+1,f
  7028  029C  09AA               	comf	___aomod@dividend+2,f
  7029  029D  09AB               	comf	___aomod@dividend+3,f
  7030  029E  09AC               	comf	___aomod@dividend+4,f
  7031  029F  09AD               	comf	___aomod@dividend+5,f
  7032  02A0  09AE               	comf	___aomod@dividend+6,f
  7033  02A1  09AF               	comf	___aomod@dividend+7,f
  7034  02A2  0AA8               	incf	___aomod@dividend,f
  7035  02A3  1D03               	skipz
  7036  02A4  2AB8               	goto	u189lld
  7037  02A5  0AA9               	incf	___aomod@dividend+1,f
  7038  02A6  1D03               	skipz
  7039  02A7  2AB8               	goto	u189lld
  7040  02A8  0AAA               	incf	___aomod@dividend+2,f
  7041  02A9  1D03               	skipz
  7042  02AA  2AB8               	goto	u189lld
  7043  02AB  0AAB               	incf	___aomod@dividend+3,f
  7044  02AC  1D03               	skipz
  7045  02AD  2AB8               	goto	u189lld
  7046  02AE  0AAC               	incf	___aomod@dividend+4,f
  7047  02AF  1D03               	skipz
  7048  02B0  2AB8               	goto	u189lld
  7049  02B1  0AAD               	incf	___aomod@dividend+5,f
  7050  02B2  1D03               	skipz
  7051  02B3  2AB8               	goto	u189lld
  7052  02B4  0AAE               	incf	___aomod@dividend+6,f
  7053  02B5  1D03               	skipz
  7054  02B6  2AB8               	goto	u189lld
  7055  02B7  0AAF               	incf	___aomod@dividend+7,f
  7056  02B8                     u189lld:
  7057  02B8  0020               	movlb	0	; select bank0
  7058  02B9  01B2               	clrf	___aomod@sign
  7059  02BA  0AB2               	incf	___aomod@sign,f
  7060  02BB                     l2786:
  7061  02BB  3020               	movlw	low ___aomod@divisor
  7062  02BC  0086               	movwf	6
  7063  02BD  3000               	movlw	high ___aomod@divisor
  7064  02BE  0087               	movwf	7
  7065  02BF  3F47               	moviw [7]fsr1
  7066  02C0  0020               	movlb	0	; select bank0
  7067  02C1  00B0               	movwf	??___aomod
  7068  02C2  1FB0               	btfss	??___aomod,7
  7069  02C3  2AC5               	goto	u1901
  7070  02C4  2AC6               	goto	u1900
  7071  02C5                     u1901:
  7072  02C5  2AE5               	goto	l2790
  7073  02C6                     u1900:
  7074  02C6                     l2788:
  7075  02C6  0020               	movlb	0	; select bank0
  7076  02C7  09A0               	comf	___aomod@divisor,f
  7077  02C8  09A1               	comf	___aomod@divisor+1,f
  7078  02C9  09A2               	comf	___aomod@divisor+2,f
  7079  02CA  09A3               	comf	___aomod@divisor+3,f
  7080  02CB  09A4               	comf	___aomod@divisor+4,f
  7081  02CC  09A5               	comf	___aomod@divisor+5,f
  7082  02CD  09A6               	comf	___aomod@divisor+6,f
  7083  02CE  09A7               	comf	___aomod@divisor+7,f
  7084  02CF  0AA0               	incf	___aomod@divisor,f
  7085  02D0  1D03               	skipz
  7086  02D1  2AE5               	goto	u191lld
  7087  02D2  0AA1               	incf	___aomod@divisor+1,f
  7088  02D3  1D03               	skipz
  7089  02D4  2AE5               	goto	u191lld
  7090  02D5  0AA2               	incf	___aomod@divisor+2,f
  7091  02D6  1D03               	skipz
  7092  02D7  2AE5               	goto	u191lld
  7093  02D8  0AA3               	incf	___aomod@divisor+3,f
  7094  02D9  1D03               	skipz
  7095  02DA  2AE5               	goto	u191lld
  7096  02DB  0AA4               	incf	___aomod@divisor+4,f
  7097  02DC  1D03               	skipz
  7098  02DD  2AE5               	goto	u191lld
  7099  02DE  0AA5               	incf	___aomod@divisor+5,f
  7100  02DF  1D03               	skipz
  7101  02E0  2AE5               	goto	u191lld
  7102  02E1  0AA6               	incf	___aomod@divisor+6,f
  7103  02E2  1D03               	skipz
  7104  02E3  2AE5               	goto	u191lld
  7105  02E4  0AA7               	incf	___aomod@divisor+7,f
  7106  02E5                     u191lld:
  7107  02E5                     l2790:
  7108  02E5  0020               	movlb	0	; select bank0
  7109  02E6  0820               	movf	___aomod@divisor,w
  7110  02E7  0421               	iorwf	___aomod@divisor+1,w
  7111  02E8  0422               	iorwf	___aomod@divisor+2,w
  7112  02E9  0423               	iorwf	___aomod@divisor+3,w
  7113  02EA  0424               	iorwf	___aomod@divisor+4,w
  7114  02EB  0425               	iorwf	___aomod@divisor+5,w
  7115  02EC  0426               	iorwf	___aomod@divisor+6,w
  7116  02ED  0427               	iorwf	___aomod@divisor+7,w
  7117  02EE  1903               	skipnz
  7118  02EF  2AF1               	goto	u1921
  7119  02F0  2AF2               	goto	u1920
  7120  02F1                     u1921:
  7121  02F1  2B45               	goto	l2806
  7122  02F2                     u1920:
  7123  02F2                     l2792:
  7124  02F2  01B1               	clrf	___aomod@counter
  7125  02F3  0AB1               	incf	___aomod@counter,f
  7126  02F4  2B01               	goto	l2798
  7127  02F5                     l2794:
  7128  02F5  35A0               	lslf	___aomod@divisor,f
  7129  02F6  0DA1               	rlf	___aomod@divisor+1,f
  7130  02F7  0DA2               	rlf	___aomod@divisor+2,f
  7131  02F8  0DA3               	rlf	___aomod@divisor+3,f
  7132  02F9  0DA4               	rlf	___aomod@divisor+4,f
  7133  02FA  0DA5               	rlf	___aomod@divisor+5,f
  7134  02FB  0DA6               	rlf	___aomod@divisor+6,f
  7135  02FC  0DA7               	rlf	___aomod@divisor+7,f
  7136  02FD                     l2796:
  7137  02FD  3001               	movlw	1
  7138  02FE  00B0               	movwf	??___aomod
  7139  02FF  0830               	movf	??___aomod,w
  7140  0300  07B1               	addwf	___aomod@counter,f
  7141  0301                     l2798:
  7142  0301  1FA7               	btfss	___aomod@divisor+7,7
  7143  0302  2B04               	goto	u1931
  7144  0303  2B05               	goto	u1930
  7145  0304                     u1931:
  7146  0304  2AF5               	goto	l2794
  7147  0305                     u1930:
  7148  0305                     l2800:
  7149  0305  0827               	movf	___aomod@divisor+7,w
  7150  0306  022F               	subwf	___aomod@dividend+7,w
  7151  0307  1D03               	skipz
  7152  0308  2B23               	goto	u1945
  7153  0309  0826               	movf	___aomod@divisor+6,w
  7154  030A  022E               	subwf	___aomod@dividend+6,w
  7155  030B  1D03               	skipz
  7156  030C  2B23               	goto	u1945
  7157  030D  0825               	movf	___aomod@divisor+5,w
  7158  030E  022D               	subwf	___aomod@dividend+5,w
  7159  030F  1D03               	skipz
  7160  0310  2B23               	goto	u1945
  7161  0311  0824               	movf	___aomod@divisor+4,w
  7162  0312  022C               	subwf	___aomod@dividend+4,w
  7163  0313  1D03               	skipz
  7164  0314  2B23               	goto	u1945
  7165  0315  0823               	movf	___aomod@divisor+3,w
  7166  0316  022B               	subwf	___aomod@dividend+3,w
  7167  0317  1D03               	skipz
  7168  0318  2B23               	goto	u1945
  7169  0319  0822               	movf	___aomod@divisor+2,w
  7170  031A  022A               	subwf	___aomod@dividend+2,w
  7171  031B  1D03               	skipz
  7172  031C  2B23               	goto	u1945
  7173  031D  0821               	movf	___aomod@divisor+1,w
  7174  031E  0229               	subwf	___aomod@dividend+1,w
  7175  031F  1D03               	skipz
  7176  0320  2B23               	goto	u1945
  7177  0321  0820               	movf	___aomod@divisor,w
  7178  0322  0228               	subwf	___aomod@dividend,w
  7179  0323                     u1945:
  7180  0323  1C03               	skipc
  7181  0324  2B26               	goto	u1941
  7182  0325  2B27               	goto	u1940
  7183  0326                     u1941:
  7184  0326  2B37               	goto	l2804
  7185  0327                     u1940:
  7186  0327                     l2802:
  7187  0327  0820               	movf	___aomod@divisor,w
  7188  0328  02A8               	subwf	___aomod@dividend,f
  7189  0329  0821               	movf	___aomod@divisor+1,w
  7190  032A  3BA9               	subwfb	___aomod@dividend+1,f
  7191  032B  0822               	movf	___aomod@divisor+2,w
  7192  032C  3BAA               	subwfb	___aomod@dividend+2,f
  7193  032D  0823               	movf	___aomod@divisor+3,w
  7194  032E  3BAB               	subwfb	___aomod@dividend+3,f
  7195  032F  0824               	movf	___aomod@divisor+4,w
  7196  0330  3BAC               	subwfb	___aomod@dividend+4,f
  7197  0331  0825               	movf	___aomod@divisor+5,w
  7198  0332  3BAD               	subwfb	___aomod@dividend+5,f
  7199  0333  0826               	movf	___aomod@divisor+6,w
  7200  0334  3BAE               	subwfb	___aomod@dividend+6,f
  7201  0335  0827               	movf	___aomod@divisor+7,w
  7202  0336  3BAF               	subwfb	___aomod@dividend+7,f
  7203  0337                     l2804:
  7204  0337  36A7               	lsrf	___aomod@divisor+7,f
  7205  0338  0CA6               	rrf	___aomod@divisor+6,f
  7206  0339  0CA5               	rrf	___aomod@divisor+5,f
  7207  033A  0CA4               	rrf	___aomod@divisor+4,f
  7208  033B  0CA3               	rrf	___aomod@divisor+3,f
  7209  033C  0CA2               	rrf	___aomod@divisor+2,f
  7210  033D  0CA1               	rrf	___aomod@divisor+1,f
  7211  033E  0CA0               	rrf	___aomod@divisor,f
  7212  033F  3001               	movlw	1
  7213  0340  02B1               	subwf	___aomod@counter,f
  7214  0341  1D03               	btfss	3,2
  7215  0342  2B44               	goto	u1951
  7216  0343  2B45               	goto	u1950
  7217  0344                     u1951:
  7218  0344  2B05               	goto	l2800
  7219  0345                     u1950:
  7220  0345                     l2806:
  7221  0345  0832               	movf	___aomod@sign,w
  7222  0346  1903               	btfsc	3,2
  7223  0347  2B49               	goto	u1961
  7224  0348  2B4A               	goto	u1960
  7225  0349                     u1961:
  7226  0349  2B68               	goto	l651
  7227  034A                     u1960:
  7228  034A                     l2808:
  7229  034A  09A8               	comf	___aomod@dividend,f
  7230  034B  09A9               	comf	___aomod@dividend+1,f
  7231  034C  09AA               	comf	___aomod@dividend+2,f
  7232  034D  09AB               	comf	___aomod@dividend+3,f
  7233  034E  09AC               	comf	___aomod@dividend+4,f
  7234  034F  09AD               	comf	___aomod@dividend+5,f
  7235  0350  09AE               	comf	___aomod@dividend+6,f
  7236  0351  09AF               	comf	___aomod@dividend+7,f
  7237  0352  0AA8               	incf	___aomod@dividend,f
  7238  0353  1D03               	skipz
  7239  0354  2B68               	goto	u197lld
  7240  0355  0AA9               	incf	___aomod@dividend+1,f
  7241  0356  1D03               	skipz
  7242  0357  2B68               	goto	u197lld
  7243  0358  0AAA               	incf	___aomod@dividend+2,f
  7244  0359  1D03               	skipz
  7245  035A  2B68               	goto	u197lld
  7246  035B  0AAB               	incf	___aomod@dividend+3,f
  7247  035C  1D03               	skipz
  7248  035D  2B68               	goto	u197lld
  7249  035E  0AAC               	incf	___aomod@dividend+4,f
  7250  035F  1D03               	skipz
  7251  0360  2B68               	goto	u197lld
  7252  0361  0AAD               	incf	___aomod@dividend+5,f
  7253  0362  1D03               	skipz
  7254  0363  2B68               	goto	u197lld
  7255  0364  0AAE               	incf	___aomod@dividend+6,f
  7256  0365  1D03               	skipz
  7257  0366  2B68               	goto	u197lld
  7258  0367  0AAF               	incf	___aomod@dividend+7,f
  7259  0368                     u197lld:
  7260  0368                     l651:
  7261  0368  0020               	movlb	0	; select bank0
  7262  0369  0828               	movf	___aomod@dividend,w
  7263  036A  00A0               	movwf	?___aomod
  7264  036B  0829               	movf	___aomod@dividend+1,w
  7265  036C  00A1               	movwf	?___aomod+1
  7266  036D  082A               	movf	___aomod@dividend+2,w
  7267  036E  00A2               	movwf	?___aomod+2
  7268  036F  082B               	movf	___aomod@dividend+3,w
  7269  0370  00A3               	movwf	?___aomod+3
  7270  0371  082C               	movf	___aomod@dividend+4,w
  7271  0372  00A4               	movwf	?___aomod+4
  7272  0373  082D               	movf	___aomod@dividend+5,w
  7273  0374  00A5               	movwf	?___aomod+5
  7274  0375  082E               	movf	___aomod@dividend+6,w
  7275  0376  00A6               	movwf	?___aomod+6
  7276  0377  082F               	movf	___aomod@dividend+7,w
  7277  0378  00A7               	movwf	?___aomod+7
  7278  0379                     l652:
  7279  0379  0008               	return
  7280  037A                     __end_of___aomod:
  7281                           
  7282                           	psect	text20
  7283  0188                     __ptext20:	
  7284 ;; *************** function ___aodiv *****************
  7285 ;; Defined at:
  7286 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aodiv.c"
  7287 ;; Parameters:    Size  Location     Type
  7288 ;;  divisor         8    0[BANK0 ] long long 
  7289 ;;  dividend        8    8[BANK0 ] long long 
  7290 ;; Auto vars:     Size  Location     Type
  7291 ;;  quotient        8   19[BANK0 ] long long 
  7292 ;;  sign            1   18[BANK0 ] unsigned char 
  7293 ;;  counter         1   17[BANK0 ] unsigned char 
  7294 ;; Return value:  Size  Location     Type
  7295 ;;                  8    0[BANK0 ] long long 
  7296 ;; Registers used:
  7297 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7298 ;; Tracked objects:
  7299 ;;		On entry : 0/0
  7300 ;;		On exit  : 0/0
  7301 ;;		Unchanged: 0/0
  7302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7303 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7304 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7305 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7306 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7307 ;;Total ram usage:       27 bytes
  7308 ;; Hardware stack levels used:    1
  7309 ;; Hardware stack levels required when called:    6
  7310 ;; This function calls:
  7311 ;;		Nothing
  7312 ;; This function is called by:
  7313 ;;		_dtoa
  7314 ;; This function uses a non-reentrant model
  7315 ;;
  7316                           
  7317                           
  7318                           ;psect for function ___aodiv
  7319  0188                     ___aodiv:
  7320  0188                     l2742:	
  7321                           ;incstack = 0
  7322                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  7323                           
  7324  0188  0020               	movlb	0	; select bank0
  7325  0189  01B2               	clrf	___aodiv@sign
  7326  018A                     l2744:
  7327  018A  3020               	movlw	low ___aodiv@divisor
  7328  018B  0086               	movwf	6
  7329  018C  3000               	movlw	high ___aodiv@divisor
  7330  018D  0087               	movwf	7
  7331  018E  3F47               	moviw [7]fsr1
  7332  018F  00B0               	movwf	??___aodiv
  7333  0190  1FB0               	btfss	??___aodiv,7
  7334  0191  2993               	goto	u1771
  7335  0192  2994               	goto	u1770
  7336  0193                     u1771:
  7337  0193  29B6               	goto	l2748
  7338  0194                     u1770:
  7339  0194                     l2746:
  7340  0194  0020               	movlb	0	; select bank0
  7341  0195  09A0               	comf	___aodiv@divisor,f
  7342  0196  09A1               	comf	___aodiv@divisor+1,f
  7343  0197  09A2               	comf	___aodiv@divisor+2,f
  7344  0198  09A3               	comf	___aodiv@divisor+3,f
  7345  0199  09A4               	comf	___aodiv@divisor+4,f
  7346  019A  09A5               	comf	___aodiv@divisor+5,f
  7347  019B  09A6               	comf	___aodiv@divisor+6,f
  7348  019C  09A7               	comf	___aodiv@divisor+7,f
  7349  019D  0AA0               	incf	___aodiv@divisor,f
  7350  019E  1D03               	skipz
  7351  019F  29B3               	goto	u178lld
  7352  01A0  0AA1               	incf	___aodiv@divisor+1,f
  7353  01A1  1D03               	skipz
  7354  01A2  29B3               	goto	u178lld
  7355  01A3  0AA2               	incf	___aodiv@divisor+2,f
  7356  01A4  1D03               	skipz
  7357  01A5  29B3               	goto	u178lld
  7358  01A6  0AA3               	incf	___aodiv@divisor+3,f
  7359  01A7  1D03               	skipz
  7360  01A8  29B3               	goto	u178lld
  7361  01A9  0AA4               	incf	___aodiv@divisor+4,f
  7362  01AA  1D03               	skipz
  7363  01AB  29B3               	goto	u178lld
  7364  01AC  0AA5               	incf	___aodiv@divisor+5,f
  7365  01AD  1D03               	skipz
  7366  01AE  29B3               	goto	u178lld
  7367  01AF  0AA6               	incf	___aodiv@divisor+6,f
  7368  01B0  1D03               	skipz
  7369  01B1  29B3               	goto	u178lld
  7370  01B2  0AA7               	incf	___aodiv@divisor+7,f
  7371  01B3                     u178lld:
  7372  01B3  0020               	movlb	0	; select bank0
  7373  01B4  01B2               	clrf	___aodiv@sign
  7374  01B5  0AB2               	incf	___aodiv@sign,f
  7375  01B6                     l2748:
  7376  01B6  3028               	movlw	low ___aodiv@dividend
  7377  01B7  0086               	movwf	6
  7378  01B8  3000               	movlw	high ___aodiv@dividend
  7379  01B9  0087               	movwf	7
  7380  01BA  3F47               	moviw [7]fsr1
  7381  01BB  0020               	movlb	0	; select bank0
  7382  01BC  00B0               	movwf	??___aodiv
  7383  01BD  1FB0               	btfss	??___aodiv,7
  7384  01BE  29C0               	goto	u1791
  7385  01BF  29C1               	goto	u1790
  7386  01C0                     u1791:
  7387  01C0  29E5               	goto	l2754
  7388  01C1                     u1790:
  7389  01C1                     l2750:
  7390  01C1  0020               	movlb	0	; select bank0
  7391  01C2  09A8               	comf	___aodiv@dividend,f
  7392  01C3  09A9               	comf	___aodiv@dividend+1,f
  7393  01C4  09AA               	comf	___aodiv@dividend+2,f
  7394  01C5  09AB               	comf	___aodiv@dividend+3,f
  7395  01C6  09AC               	comf	___aodiv@dividend+4,f
  7396  01C7  09AD               	comf	___aodiv@dividend+5,f
  7397  01C8  09AE               	comf	___aodiv@dividend+6,f
  7398  01C9  09AF               	comf	___aodiv@dividend+7,f
  7399  01CA  0AA8               	incf	___aodiv@dividend,f
  7400  01CB  1D03               	skipz
  7401  01CC  29E0               	goto	u180lld
  7402  01CD  0AA9               	incf	___aodiv@dividend+1,f
  7403  01CE  1D03               	skipz
  7404  01CF  29E0               	goto	u180lld
  7405  01D0  0AAA               	incf	___aodiv@dividend+2,f
  7406  01D1  1D03               	skipz
  7407  01D2  29E0               	goto	u180lld
  7408  01D3  0AAB               	incf	___aodiv@dividend+3,f
  7409  01D4  1D03               	skipz
  7410  01D5  29E0               	goto	u180lld
  7411  01D6  0AAC               	incf	___aodiv@dividend+4,f
  7412  01D7  1D03               	skipz
  7413  01D8  29E0               	goto	u180lld
  7414  01D9  0AAD               	incf	___aodiv@dividend+5,f
  7415  01DA  1D03               	skipz
  7416  01DB  29E0               	goto	u180lld
  7417  01DC  0AAE               	incf	___aodiv@dividend+6,f
  7418  01DD  1D03               	skipz
  7419  01DE  29E0               	goto	u180lld
  7420  01DF  0AAF               	incf	___aodiv@dividend+7,f
  7421  01E0                     u180lld:
  7422  01E0                     l2752:
  7423  01E0  3001               	movlw	1
  7424  01E1  0020               	movlb	0	; select bank0
  7425  01E2  00B0               	movwf	??___aodiv
  7426  01E3  0830               	movf	??___aodiv,w
  7427  01E4  06B2               	xorwf	___aodiv@sign,f
  7428  01E5                     l2754:
  7429  01E5  3033               	movlw	low ___aodiv@quotient
  7430  01E6  0086               	movwf	6
  7431  01E7  3000               	movlw	high ___aodiv@quotient
  7432  01E8  0087               	movwf	7
  7433  01E9  3008               	movlw	8
  7434  01EA  0020               	movlb	0	; select bank0
  7435  01EB  00B0               	movwf	??___aodiv
  7436  01EC  3000               	movlw	0
  7437  01ED                     u1810:
  7438  01ED  001E               	movwi fsr1++
  7439  01EE  0BB0               	decfsz	??___aodiv,f
  7440  01EF  29ED               	goto	u1810
  7441  01F0                     l2756:
  7442  01F0  0820               	movf	___aodiv@divisor,w
  7443  01F1  0421               	iorwf	___aodiv@divisor+1,w
  7444  01F2  0422               	iorwf	___aodiv@divisor+2,w
  7445  01F3  0423               	iorwf	___aodiv@divisor+3,w
  7446  01F4  0424               	iorwf	___aodiv@divisor+4,w
  7447  01F5  0425               	iorwf	___aodiv@divisor+5,w
  7448  01F6  0426               	iorwf	___aodiv@divisor+6,w
  7449  01F7  0427               	iorwf	___aodiv@divisor+7,w
  7450  01F8  1903               	skipnz
  7451  01F9  29FB               	goto	u1821
  7452  01FA  29FC               	goto	u1820
  7453  01FB                     u1821:
  7454  01FB  2A58               	goto	l2776
  7455  01FC                     u1820:
  7456  01FC                     l2758:
  7457  01FC  01B1               	clrf	___aodiv@counter
  7458  01FD  0AB1               	incf	___aodiv@counter,f
  7459  01FE  2A0B               	goto	l2764
  7460  01FF                     l2760:
  7461  01FF  35A0               	lslf	___aodiv@divisor,f
  7462  0200  0DA1               	rlf	___aodiv@divisor+1,f
  7463  0201  0DA2               	rlf	___aodiv@divisor+2,f
  7464  0202  0DA3               	rlf	___aodiv@divisor+3,f
  7465  0203  0DA4               	rlf	___aodiv@divisor+4,f
  7466  0204  0DA5               	rlf	___aodiv@divisor+5,f
  7467  0205  0DA6               	rlf	___aodiv@divisor+6,f
  7468  0206  0DA7               	rlf	___aodiv@divisor+7,f
  7469  0207                     l2762:
  7470  0207  3001               	movlw	1
  7471  0208  00B0               	movwf	??___aodiv
  7472  0209  0830               	movf	??___aodiv,w
  7473  020A  07B1               	addwf	___aodiv@counter,f
  7474  020B                     l2764:
  7475  020B  1FA7               	btfss	___aodiv@divisor+7,7
  7476  020C  2A0E               	goto	u1831
  7477  020D  2A0F               	goto	u1830
  7478  020E                     u1831:
  7479  020E  29FF               	goto	l2760
  7480  020F                     u1830:
  7481  020F                     l2766:
  7482  020F  35B3               	lslf	___aodiv@quotient,f
  7483  0210  0DB4               	rlf	___aodiv@quotient+1,f
  7484  0211  0DB5               	rlf	___aodiv@quotient+2,f
  7485  0212  0DB6               	rlf	___aodiv@quotient+3,f
  7486  0213  0DB7               	rlf	___aodiv@quotient+4,f
  7487  0214  0DB8               	rlf	___aodiv@quotient+5,f
  7488  0215  0DB9               	rlf	___aodiv@quotient+6,f
  7489  0216  0DBA               	rlf	___aodiv@quotient+7,f
  7490  0217                     l2768:
  7491  0217  0827               	movf	___aodiv@divisor+7,w
  7492  0218  022F               	subwf	___aodiv@dividend+7,w
  7493  0219  1D03               	skipz
  7494  021A  2A35               	goto	u1845
  7495  021B  0826               	movf	___aodiv@divisor+6,w
  7496  021C  022E               	subwf	___aodiv@dividend+6,w
  7497  021D  1D03               	skipz
  7498  021E  2A35               	goto	u1845
  7499  021F  0825               	movf	___aodiv@divisor+5,w
  7500  0220  022D               	subwf	___aodiv@dividend+5,w
  7501  0221  1D03               	skipz
  7502  0222  2A35               	goto	u1845
  7503  0223  0824               	movf	___aodiv@divisor+4,w
  7504  0224  022C               	subwf	___aodiv@dividend+4,w
  7505  0225  1D03               	skipz
  7506  0226  2A35               	goto	u1845
  7507  0227  0823               	movf	___aodiv@divisor+3,w
  7508  0228  022B               	subwf	___aodiv@dividend+3,w
  7509  0229  1D03               	skipz
  7510  022A  2A35               	goto	u1845
  7511  022B  0822               	movf	___aodiv@divisor+2,w
  7512  022C  022A               	subwf	___aodiv@dividend+2,w
  7513  022D  1D03               	skipz
  7514  022E  2A35               	goto	u1845
  7515  022F  0821               	movf	___aodiv@divisor+1,w
  7516  0230  0229               	subwf	___aodiv@dividend+1,w
  7517  0231  1D03               	skipz
  7518  0232  2A35               	goto	u1845
  7519  0233  0820               	movf	___aodiv@divisor,w
  7520  0234  0228               	subwf	___aodiv@dividend,w
  7521  0235                     u1845:
  7522  0235  1C03               	skipc
  7523  0236  2A38               	goto	u1841
  7524  0237  2A39               	goto	u1840
  7525  0238                     u1841:
  7526  0238  2A4A               	goto	l2774
  7527  0239                     u1840:
  7528  0239                     l2770:
  7529  0239  0820               	movf	___aodiv@divisor,w
  7530  023A  02A8               	subwf	___aodiv@dividend,f
  7531  023B  0821               	movf	___aodiv@divisor+1,w
  7532  023C  3BA9               	subwfb	___aodiv@dividend+1,f
  7533  023D  0822               	movf	___aodiv@divisor+2,w
  7534  023E  3BAA               	subwfb	___aodiv@dividend+2,f
  7535  023F  0823               	movf	___aodiv@divisor+3,w
  7536  0240  3BAB               	subwfb	___aodiv@dividend+3,f
  7537  0241  0824               	movf	___aodiv@divisor+4,w
  7538  0242  3BAC               	subwfb	___aodiv@dividend+4,f
  7539  0243  0825               	movf	___aodiv@divisor+5,w
  7540  0244  3BAD               	subwfb	___aodiv@dividend+5,f
  7541  0245  0826               	movf	___aodiv@divisor+6,w
  7542  0246  3BAE               	subwfb	___aodiv@dividend+6,f
  7543  0247  0827               	movf	___aodiv@divisor+7,w
  7544  0248  3BAF               	subwfb	___aodiv@dividend+7,f
  7545  0249                     l2772:
  7546  0249  1433               	bsf	___aodiv@quotient,0
  7547  024A                     l2774:
  7548  024A  36A7               	lsrf	___aodiv@divisor+7,f
  7549  024B  0CA6               	rrf	___aodiv@divisor+6,f
  7550  024C  0CA5               	rrf	___aodiv@divisor+5,f
  7551  024D  0CA4               	rrf	___aodiv@divisor+4,f
  7552  024E  0CA3               	rrf	___aodiv@divisor+3,f
  7553  024F  0CA2               	rrf	___aodiv@divisor+2,f
  7554  0250  0CA1               	rrf	___aodiv@divisor+1,f
  7555  0251  0CA0               	rrf	___aodiv@divisor,f
  7556  0252  3001               	movlw	1
  7557  0253  02B1               	subwf	___aodiv@counter,f
  7558  0254  1D03               	btfss	3,2
  7559  0255  2A57               	goto	u1851
  7560  0256  2A58               	goto	u1850
  7561  0257                     u1851:
  7562  0257  2A0F               	goto	l2766
  7563  0258                     u1850:
  7564  0258                     l2776:
  7565  0258  0832               	movf	___aodiv@sign,w
  7566  0259  1903               	btfsc	3,2
  7567  025A  2A5C               	goto	u1861
  7568  025B  2A5D               	goto	u1860
  7569  025C                     u1861:
  7570  025C  2A7B               	goto	l638
  7571  025D                     u1860:
  7572  025D                     l2778:
  7573  025D  09B3               	comf	___aodiv@quotient,f
  7574  025E  09B4               	comf	___aodiv@quotient+1,f
  7575  025F  09B5               	comf	___aodiv@quotient+2,f
  7576  0260  09B6               	comf	___aodiv@quotient+3,f
  7577  0261  09B7               	comf	___aodiv@quotient+4,f
  7578  0262  09B8               	comf	___aodiv@quotient+5,f
  7579  0263  09B9               	comf	___aodiv@quotient+6,f
  7580  0264  09BA               	comf	___aodiv@quotient+7,f
  7581  0265  0AB3               	incf	___aodiv@quotient,f
  7582  0266  1D03               	skipz
  7583  0267  2A7B               	goto	u187lld
  7584  0268  0AB4               	incf	___aodiv@quotient+1,f
  7585  0269  1D03               	skipz
  7586  026A  2A7B               	goto	u187lld
  7587  026B  0AB5               	incf	___aodiv@quotient+2,f
  7588  026C  1D03               	skipz
  7589  026D  2A7B               	goto	u187lld
  7590  026E  0AB6               	incf	___aodiv@quotient+3,f
  7591  026F  1D03               	skipz
  7592  0270  2A7B               	goto	u187lld
  7593  0271  0AB7               	incf	___aodiv@quotient+4,f
  7594  0272  1D03               	skipz
  7595  0273  2A7B               	goto	u187lld
  7596  0274  0AB8               	incf	___aodiv@quotient+5,f
  7597  0275  1D03               	skipz
  7598  0276  2A7B               	goto	u187lld
  7599  0277  0AB9               	incf	___aodiv@quotient+6,f
  7600  0278  1D03               	skipz
  7601  0279  2A7B               	goto	u187lld
  7602  027A  0ABA               	incf	___aodiv@quotient+7,f
  7603  027B                     u187lld:
  7604  027B                     l638:
  7605  027B  0020               	movlb	0	; select bank0
  7606  027C  0833               	movf	___aodiv@quotient,w
  7607  027D  00A0               	movwf	?___aodiv
  7608  027E  0834               	movf	___aodiv@quotient+1,w
  7609  027F  00A1               	movwf	?___aodiv+1
  7610  0280  0835               	movf	___aodiv@quotient+2,w
  7611  0281  00A2               	movwf	?___aodiv+2
  7612  0282  0836               	movf	___aodiv@quotient+3,w
  7613  0283  00A3               	movwf	?___aodiv+3
  7614  0284  0837               	movf	___aodiv@quotient+4,w
  7615  0285  00A4               	movwf	?___aodiv+4
  7616  0286  0838               	movf	___aodiv@quotient+5,w
  7617  0287  00A5               	movwf	?___aodiv+5
  7618  0288  0839               	movf	___aodiv@quotient+6,w
  7619  0289  00A6               	movwf	?___aodiv+6
  7620  028A  083A               	movf	___aodiv@quotient+7,w
  7621  028B  00A7               	movwf	?___aodiv+7
  7622  028C                     l639:
  7623  028C  0008               	return
  7624  028D                     __end_of___aodiv:
  7625                           
  7626                           	psect	text21
  7627  0F81                     __ptext21:	
  7628 ;; *************** function _SYSTEM_Initialize *****************
  7629 ;; Defined at:
  7630 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7631 ;; Parameters:    Size  Location     Type
  7632 ;;		None
  7633 ;; Auto vars:     Size  Location     Type
  7634 ;;		None
  7635 ;; Return value:  Size  Location     Type
  7636 ;;                  1    wreg      void 
  7637 ;; Registers used:
  7638 ;;		wreg, status,2, status,0, pclath, cstack
  7639 ;; Tracked objects:
  7640 ;;		On entry : 0/0
  7641 ;;		On exit  : 0/0
  7642 ;;		Unchanged: 0/0
  7643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7648 ;;Total ram usage:        0 bytes
  7649 ;; Hardware stack levels used:    1
  7650 ;; Hardware stack levels required when called:    8
  7651 ;; This function calls:
  7652 ;;		_EUSART_Initialize
  7653 ;;		_EXT_INT_Initialize
  7654 ;;		_OSCILLATOR_Initialize
  7655 ;;		_PIN_MANAGER_Initialize
  7656 ;;		_SPI_Initialize
  7657 ;; This function is called by:
  7658 ;;		_main
  7659 ;; This function uses a non-reentrant model
  7660 ;;
  7661                           
  7662                           
  7663                           ;psect for function _SYSTEM_Initialize
  7664  0F81                     _SYSTEM_Initialize:
  7665  0F81                     l3068:	
  7666                           ;incstack = 0
  7667                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7668                           
  7669                           
  7670                           ;mcc_generated_files/mcc.c: 52:     SPI_Initialize();
  7671  0F81  318F  27A4  318F   	fcall	_SPI_Initialize
  7672                           
  7673                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  7674  0F84  3186  26AF  318F   	fcall	_PIN_MANAGER_Initialize
  7675                           
  7676                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  7677  0F87  318E  26F7  318F   	fcall	_OSCILLATOR_Initialize
  7678                           
  7679                           ;mcc_generated_files/mcc.c: 55:     EXT_INT_Initialize();
  7680  0F8A  318F  2756  318F   	fcall	_EXT_INT_Initialize
  7681                           
  7682                           ;mcc_generated_files/mcc.c: 56:     EUSART_Initialize();
  7683  0F8D  3187  277F  318F   	fcall	_EUSART_Initialize
  7684  0F90                     l19:
  7685  0F90  0008               	return
  7686  0F91                     __end_of_SYSTEM_Initialize:
  7687                           
  7688                           	psect	text22
  7689  0FA4                     __ptext22:	
  7690 ;; *************** function _SPI_Initialize *****************
  7691 ;; Defined at:
  7692 ;;		line 62 in file "mcc_generated_files/spi.c"
  7693 ;; Parameters:    Size  Location     Type
  7694 ;;		None
  7695 ;; Auto vars:     Size  Location     Type
  7696 ;;		None
  7697 ;; Return value:  Size  Location     Type
  7698 ;;                  1    wreg      void 
  7699 ;; Registers used:
  7700 ;;		wreg, status,2
  7701 ;; Tracked objects:
  7702 ;;		On entry : 0/0
  7703 ;;		On exit  : 0/0
  7704 ;;		Unchanged: 0/0
  7705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7710 ;;Total ram usage:        0 bytes
  7711 ;; Hardware stack levels used:    1
  7712 ;; Hardware stack levels required when called:    6
  7713 ;; This function calls:
  7714 ;;		Nothing
  7715 ;; This function is called by:
  7716 ;;		_SYSTEM_Initialize
  7717 ;; This function uses a non-reentrant model
  7718 ;;
  7719                           
  7720                           
  7721                           ;psect for function _SPI_Initialize
  7722  0FA4                     _SPI_Initialize:
  7723  0FA4                     l2960:	
  7724                           ;incstack = 0
  7725                           ; Regs used in _SPI_Initialize: [wreg+status,2]
  7726                           
  7727                           
  7728                           ;mcc_generated_files/spi.c: 65:     SSPCLKPPS = 14;
  7729  0FA4  300E               	movlw	14
  7730  0FA5  003C               	movlb	28	; select bank28
  7731  0FA6  00A0               	movwf	32	;volatile
  7732                           
  7733                           ;mcc_generated_files/spi.c: 66:     SSPDATPPS = 12;
  7734  0FA7  300C               	movlw	12
  7735  0FA8  00A1               	movwf	33	;volatile
  7736                           
  7737                           ;mcc_generated_files/spi.c: 67:     RB6PPS = 16;
  7738  0FA9  3010               	movlw	16
  7739  0FAA  003D               	movlb	29	; select bank29
  7740  0FAB  009E               	movwf	30	;volatile
  7741                           
  7742                           ;mcc_generated_files/spi.c: 68:     RB5PPS = 17;
  7743  0FAC  3011               	movlw	17
  7744  0FAD  009D               	movwf	29	;volatile
  7745                           
  7746                           ;mcc_generated_files/spi.c: 70:     SSP1STAT = 0xC0;
  7747  0FAE  30C0               	movlw	192
  7748  0FAF  0024               	movlb	4	; select bank4
  7749  0FB0  0094               	movwf	20	;volatile
  7750  0FB1                     l2962:
  7751                           
  7752                           ;mcc_generated_files/spi.c: 71:     SSP1CON1 = 0x00;
  7753  0FB1  0195               	clrf	21	;volatile
  7754  0FB2                     l2964:
  7755                           
  7756                           ;mcc_generated_files/spi.c: 72:     SSP1ADD = 0x01;
  7757  0FB2  3001               	movlw	1
  7758  0FB3  0092               	movwf	18	;volatile
  7759  0FB4                     l2966:
  7760                           
  7761                           ;mcc_generated_files/spi.c: 73:     TRISBbits.TRISB6 = 0;
  7762  0FB4  0021               	movlb	1	; select bank1
  7763  0FB5  130D               	bcf	13,6	;volatile
  7764  0FB6                     l2968:
  7765                           
  7766                           ;mcc_generated_files/spi.c: 74:     SSP1CON1bits.SSPEN = 0;
  7767  0FB6  0024               	movlb	4	; select bank4
  7768  0FB7  1295               	bcf	21,5	;volatile
  7769  0FB8                     l209:
  7770  0FB8  0008               	return
  7771  0FB9                     __end_of_SPI_Initialize:
  7772                           
  7773                           	psect	text23
  7774  06AF                     __ptext23:	
  7775 ;; *************** function _PIN_MANAGER_Initialize *****************
  7776 ;; Defined at:
  7777 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7778 ;; Parameters:    Size  Location     Type
  7779 ;;		None
  7780 ;; Auto vars:     Size  Location     Type
  7781 ;;		None
  7782 ;; Return value:  Size  Location     Type
  7783 ;;                  1    wreg      void 
  7784 ;; Registers used:
  7785 ;;		wreg, status,2
  7786 ;; Tracked objects:
  7787 ;;		On entry : 0/0
  7788 ;;		On exit  : 0/0
  7789 ;;		Unchanged: 0/0
  7790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7795 ;;Total ram usage:        0 bytes
  7796 ;; Hardware stack levels used:    1
  7797 ;; Hardware stack levels required when called:    6
  7798 ;; This function calls:
  7799 ;;		Nothing
  7800 ;; This function is called by:
  7801 ;;		_SYSTEM_Initialize
  7802 ;; This function uses a non-reentrant model
  7803 ;;
  7804                           
  7805                           
  7806                           ;psect for function _PIN_MANAGER_Initialize
  7807  06AF                     _PIN_MANAGER_Initialize:
  7808  06AF                     l2970:	
  7809                           ;incstack = 0
  7810                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7811                           
  7812                           
  7813                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  7814  06AF  0022               	movlb	2	; select bank2
  7815  06B0  018C               	clrf	12	;volatile
  7816                           
  7817                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  7818  06B1  018D               	clrf	13	;volatile
  7819                           
  7820                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  7821  06B2  018E               	clrf	14	;volatile
  7822  06B3                     l2972:
  7823                           
  7824                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x37;
  7825  06B3  3037               	movlw	55
  7826  06B4  0021               	movlb	1	; select bank1
  7827  06B5  008C               	movwf	12	;volatile
  7828  06B6                     l2974:
  7829                           
  7830                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x90;
  7831  06B6  3090               	movlw	144
  7832  06B7  008D               	movwf	13	;volatile
  7833  06B8                     l2976:
  7834                           
  7835                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x88;
  7836  06B8  3088               	movlw	136
  7837  06B9  008E               	movwf	14	;volatile
  7838  06BA                     l2978:
  7839                           
  7840                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x88;
  7841  06BA  3088               	movlw	136
  7842  06BB  0023               	movlb	3	; select bank3
  7843  06BC  008E               	movwf	14	;volatile
  7844                           
  7845                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x00;
  7846  06BD  018D               	clrf	13	;volatile
  7847  06BE                     l2980:
  7848                           
  7849                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x13;
  7850  06BE  3013               	movlw	19
  7851  06BF  008C               	movwf	12	;volatile
  7852  06C0                     l2982:
  7853                           
  7854                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  7855  06C0  0024               	movlb	4	; select bank4
  7856  06C1  018D               	clrf	13	;volatile
  7857  06C2                     l2984:
  7858                           
  7859                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  7860  06C2  018C               	clrf	12	;volatile
  7861  06C3                     l2986:
  7862                           
  7863                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
  7864  06C3  018E               	clrf	14	;volatile
  7865  06C4                     l2988:
  7866                           
  7867                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
  7868  06C4  0021               	movlb	1	; select bank1
  7869  06C5  1795               	bsf	21,7	;volatile
  7870  06C6                     l2990:
  7871                           
  7872                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
  7873  06C6  0025               	movlb	5	; select bank5
  7874  06C7  018C               	clrf	12	;volatile
  7875  06C8                     l2992:
  7876                           
  7877                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
  7878  06C8  018D               	clrf	13	;volatile
  7879  06C9                     l2994:
  7880                           
  7881                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
  7882  06C9  018E               	clrf	14	;volatile
  7883  06CA                     l2996:
  7884                           
  7885                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0x37;
  7886  06CA  3037               	movlw	55
  7887  06CB  0026               	movlb	6	; select bank6
  7888  06CC  008C               	movwf	12	;volatile
  7889  06CD                     l2998:
  7890                           
  7891                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xF0;
  7892  06CD  30F0               	movlw	240
  7893  06CE  008D               	movwf	13	;volatile
  7894  06CF                     l3000:
  7895                           
  7896                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
  7897  06CF  30FF               	movlw	255
  7898  06D0  008E               	movwf	14	;volatile
  7899  06D1                     l3002:
  7900                           
  7901                           ;mcc_generated_files/pin_manager.c: 103:     INLVLA = 0x3F;
  7902  06D1  303F               	movlw	63
  7903  06D2  0027               	movlb	7	; select bank7
  7904  06D3  008C               	movwf	12	;volatile
  7905  06D4                     l3004:
  7906                           
  7907                           ;mcc_generated_files/pin_manager.c: 104:     INLVLB = 0xF0;
  7908  06D4  30F0               	movlw	240
  7909  06D5  008D               	movwf	13	;volatile
  7910  06D6                     l3006:
  7911                           
  7912                           ;mcc_generated_files/pin_manager.c: 105:     INLVLC = 0xFF;
  7913  06D6  30FF               	movlw	255
  7914  06D7  008E               	movwf	14	;volatile
  7915  06D8                     l3008:
  7916                           
  7917                           ;mcc_generated_files/pin_manager.c: 114:     INTPPS = 0x0F;
  7918  06D8  300F               	movlw	15
  7919  06D9  003C               	movlb	28	; select bank28
  7920  06DA  0090               	movwf	16	;volatile
  7921  06DB                     l3010:
  7922                           
  7923                           ;mcc_generated_files/pin_manager.c: 115:     RXPPS = 0x02;
  7924  06DB  3002               	movlw	2
  7925  06DC  00A4               	movwf	36	;volatile
  7926  06DD                     l3012:
  7927                           
  7928                           ;mcc_generated_files/pin_manager.c: 116:     SSPDATPPS = 0x0C;
  7929  06DD  300C               	movlw	12
  7930  06DE  00A1               	movwf	33	;volatile
  7931  06DF                     l3014:
  7932                           
  7933                           ;mcc_generated_files/pin_manager.c: 117:     RB6PPS = 0x10;
  7934  06DF  3010               	movlw	16
  7935  06E0  003D               	movlb	29	; select bank29
  7936  06E1  009E               	movwf	30	;volatile
  7937  06E2                     l3016:
  7938                           
  7939                           ;mcc_generated_files/pin_manager.c: 118:     RB5PPS = 0x11;
  7940  06E2  3011               	movlw	17
  7941  06E3  009D               	movwf	29	;volatile
  7942  06E4                     l3018:
  7943                           
  7944                           ;mcc_generated_files/pin_manager.c: 119:     RC4PPS = 0x12;
  7945  06E4  3012               	movlw	18
  7946  06E5  00A4               	movwf	36	;volatile
  7947  06E6                     l3020:
  7948                           
  7949                           ;mcc_generated_files/pin_manager.c: 120:     SSPCLKPPS = 0x0E;
  7950  06E6  300E               	movlw	14
  7951  06E7  003C               	movlb	28	; select bank28
  7952  06E8  00A0               	movwf	32	;volatile
  7953  06E9                     l83:
  7954  06E9  0008               	return
  7955  06EA                     __end_of_PIN_MANAGER_Initialize:
  7956                           
  7957                           	psect	text24
  7958  0EF7                     __ptext24:	
  7959 ;; *************** function _OSCILLATOR_Initialize *****************
  7960 ;; Defined at:
  7961 ;;		line 59 in file "mcc_generated_files/mcc.c"
  7962 ;; Parameters:    Size  Location     Type
  7963 ;;		None
  7964 ;; Auto vars:     Size  Location     Type
  7965 ;;		None
  7966 ;; Return value:  Size  Location     Type
  7967 ;;                  1    wreg      void 
  7968 ;; Registers used:
  7969 ;;		wreg, status,2
  7970 ;; Tracked objects:
  7971 ;;		On entry : 0/0
  7972 ;;		On exit  : 0/0
  7973 ;;		Unchanged: 0/0
  7974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7979 ;;Total ram usage:        0 bytes
  7980 ;; Hardware stack levels used:    1
  7981 ;; Hardware stack levels required when called:    6
  7982 ;; This function calls:
  7983 ;;		Nothing
  7984 ;; This function is called by:
  7985 ;;		_SYSTEM_Initialize
  7986 ;; This function uses a non-reentrant model
  7987 ;;
  7988                           
  7989                           
  7990                           ;psect for function _OSCILLATOR_Initialize
  7991  0EF7                     _OSCILLATOR_Initialize:
  7992  0EF7                     l3022:	
  7993                           ;incstack = 0
  7994                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7995                           
  7996                           
  7997                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x78;
  7998  0EF7  3078               	movlw	120
  7999  0EF8  0021               	movlb	1	; select bank1
  8000  0EF9  0099               	movwf	25	;volatile
  8001  0EFA                     l3024:
  8002                           
  8003                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
  8004  0EFA  0198               	clrf	24	;volatile
  8005  0EFB                     l3026:
  8006                           
  8007                           ;mcc_generated_files/mcc.c: 66:     BORCON = 0x00;
  8008  0EFB  0022               	movlb	2	; select bank2
  8009  0EFC  0196               	clrf	22	;volatile
  8010  0EFD                     l22:
  8011  0EFD  0008               	return
  8012  0EFE                     __end_of_OSCILLATOR_Initialize:
  8013                           
  8014                           	psect	text25
  8015  0F56                     __ptext25:	
  8016 ;; *************** function _EXT_INT_Initialize *****************
  8017 ;; Defined at:
  8018 ;;		line 59 in file "mcc_generated_files/ext_int.c"
  8019 ;; Parameters:    Size  Location     Type
  8020 ;;		None
  8021 ;; Auto vars:     Size  Location     Type
  8022 ;;		None
  8023 ;; Return value:  Size  Location     Type
  8024 ;;                  1    wreg      void 
  8025 ;; Registers used:
  8026 ;;		wreg, status,2, status,0, pclath, cstack
  8027 ;; Tracked objects:
  8028 ;;		On entry : 0/0
  8029 ;;		On exit  : 0/0
  8030 ;;		Unchanged: 0/0
  8031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8036 ;;Total ram usage:        0 bytes
  8037 ;; Hardware stack levels used:    1
  8038 ;; Hardware stack levels required when called:    7
  8039 ;; This function calls:
  8040 ;;		_INT_SetInterruptHandler
  8041 ;; This function is called by:
  8042 ;;		_SYSTEM_Initialize
  8043 ;; This function uses a non-reentrant model
  8044 ;;
  8045                           
  8046                           
  8047                           ;psect for function _EXT_INT_Initialize
  8048  0F56                     _EXT_INT_Initialize:
  8049  0F56                     l3028:	
  8050                           ;incstack = 0
  8051                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8052                           
  8053                           
  8054                           ;mcc_generated_files/ext_int.c: 64:     (INTCONbits.INTF = 0);
  8055  0F56  108B               	bcf	11,1	;volatile
  8056                           
  8057                           ;mcc_generated_files/ext_int.c: 65:     (OPTION_REGbits.INTEDG = 0);
  8058  0F57  0021               	movlb	1	; select bank1
  8059  0F58  1315               	bcf	21,6	;volatile
  8060  0F59                     l3030:
  8061                           
  8062                           ;mcc_generated_files/ext_int.c: 67:     INT_SetInterruptHandler(INT_DefaultInterruptHand
      +                          ler);
  8063  0F59  30FE               	movlw	low _INT_DefaultInterruptHandler
  8064  0F5A  0020               	movlb	0	; select bank0
  8065  0F5B  00A0               	movwf	INT_SetInterruptHandler@InterruptHandler
  8066  0F5C  3007               	movlw	high _INT_DefaultInterruptHandler
  8067  0F5D  00A1               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  8068  0F5E  318F  2720  318F   	fcall	_INT_SetInterruptHandler
  8069  0F61                     l3032:
  8070                           
  8071                           ;mcc_generated_files/ext_int.c: 68:     (INTCONbits.INTE = 1);
  8072  0F61  160B               	bsf	11,4	;volatile
  8073  0F62                     l284:
  8074  0F62  0008               	return
  8075  0F63                     __end_of_EXT_INT_Initialize:
  8076                           
  8077                           	psect	text26
  8078  0F20                     __ptext26:	
  8079 ;; *************** function _INT_SetInterruptHandler *****************
  8080 ;; Defined at:
  8081 ;;		line 50 in file "mcc_generated_files/ext_int.c"
  8082 ;; Parameters:    Size  Location     Type
  8083 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8084 ;;		 -> ISR(1), INT_DefaultInterruptHandler(1), 
  8085 ;; Auto vars:     Size  Location     Type
  8086 ;;		None
  8087 ;; Return value:  Size  Location     Type
  8088 ;;                  1    wreg      void 
  8089 ;; Registers used:
  8090 ;;		wreg
  8091 ;; Tracked objects:
  8092 ;;		On entry : 0/0
  8093 ;;		On exit  : 0/0
  8094 ;;		Unchanged: 0/0
  8095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8096 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8099 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8100 ;;Total ram usage:        2 bytes
  8101 ;; Hardware stack levels used:    1
  8102 ;; Hardware stack levels required when called:    6
  8103 ;; This function calls:
  8104 ;;		Nothing
  8105 ;; This function is called by:
  8106 ;;		_EXT_INT_Initialize
  8107 ;;		_main
  8108 ;; This function uses a non-reentrant model
  8109 ;;
  8110                           
  8111                           
  8112                           ;psect for function _INT_SetInterruptHandler
  8113  0F20                     _INT_SetInterruptHandler:
  8114  0F20                     l2906:	
  8115                           ;incstack = 0
  8116                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  8117                           
  8118                           
  8119                           ;mcc_generated_files/ext_int.c: 51:     INT_InterruptHandler = InterruptHandler;
  8120  0F20  0020               	movlb	0	; select bank0
  8121  0F21  0821               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  8122  0F22  0021               	movlb	1	; select bank1
  8123  0F23  00D4               	movwf	(_INT_InterruptHandler+1)^(0+128)
  8124  0F24  0020               	movlb	0	; select bank0
  8125  0F25  0820               	movf	INT_SetInterruptHandler@InterruptHandler,w
  8126  0F26  0021               	movlb	1	; select bank1
  8127  0F27  00D3               	movwf	_INT_InterruptHandler^(0+128)
  8128  0F28                     l278:
  8129  0F28  0008               	return
  8130  0F29                     __end_of_INT_SetInterruptHandler:
  8131                           
  8132                           	psect	text27
  8133  077F                     __ptext27:	
  8134 ;; *************** function _EUSART_Initialize *****************
  8135 ;; Defined at:
  8136 ;;		line 66 in file "mcc_generated_files/eusart.c"
  8137 ;; Parameters:    Size  Location     Type
  8138 ;;		None
  8139 ;; Auto vars:     Size  Location     Type
  8140 ;;		None
  8141 ;; Return value:  Size  Location     Type
  8142 ;;                  1    wreg      void 
  8143 ;; Registers used:
  8144 ;;		wreg, status,2, status,0, pclath, cstack
  8145 ;; Tracked objects:
  8146 ;;		On entry : 0/0
  8147 ;;		On exit  : 0/0
  8148 ;;		Unchanged: 0/0
  8149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8154 ;;Total ram usage:        0 bytes
  8155 ;; Hardware stack levels used:    1
  8156 ;; Hardware stack levels required when called:    7
  8157 ;; This function calls:
  8158 ;;		_EUSART_SetErrorHandler
  8159 ;;		_EUSART_SetFramingErrorHandler
  8160 ;;		_EUSART_SetOverrunErrorHandler
  8161 ;; This function is called by:
  8162 ;;		_SYSTEM_Initialize
  8163 ;; This function uses a non-reentrant model
  8164 ;;
  8165                           
  8166                           
  8167                           ;psect for function _EUSART_Initialize
  8168  077F                     _EUSART_Initialize:
  8169  077F                     l3034:	
  8170                           ;incstack = 0
  8171                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8172                           
  8173                           
  8174                           ;mcc_generated_files/eusart.c: 71:     BAUD1CON = 0x08;
  8175  077F  3008               	movlw	8
  8176  0780  0023               	movlb	3	; select bank3
  8177  0781  009F               	movwf	31	;volatile
  8178                           
  8179                           ;mcc_generated_files/eusart.c: 74:     RC1STA = 0x90;
  8180  0782  3090               	movlw	144
  8181  0783  009D               	movwf	29	;volatile
  8182                           
  8183                           ;mcc_generated_files/eusart.c: 77:     TX1STA = 0x24;
  8184  0784  3024               	movlw	36
  8185  0785  009E               	movwf	30	;volatile
  8186                           
  8187                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0xA0;
  8188  0786  30A0               	movlw	160
  8189  0787  009B               	movwf	27	;volatile
  8190                           
  8191                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x01;
  8192  0788  3001               	movlw	1
  8193  0789  009C               	movwf	28	;volatile
  8194  078A                     l3036:
  8195                           
  8196                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  8197  078A  3000               	movlw	0
  8198  078B  0020               	movlb	0	; select bank0
  8199  078C  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  8200  078D  3000               	movlw	0
  8201  078E  00A1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  8202  078F  318F  270E  3187   	fcall	_EUSART_SetFramingErrorHandler
  8203  0792                     l3038:
  8204                           
  8205                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  8206  0792  3000               	movlw	0
  8207  0793  0020               	movlb	0	; select bank0
  8208  0794  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  8209  0795  3000               	movlw	0
  8210  0796  00A1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  8211  0797  318F  2717  3187   	fcall	_EUSART_SetOverrunErrorHandler
  8212  079A                     l3040:
  8213                           
  8214                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  8215  079A  3000               	movlw	0
  8216  079B  0020               	movlb	0	; select bank0
  8217  079C  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler
  8218  079D  3000               	movlw	0
  8219  079E  00A1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  8220  079F  318F  2705  3187   	fcall	_EUSART_SetErrorHandler
  8221  07A2                     l3042:
  8222                           
  8223                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  8224  07A2  0021               	movlb	1	; select bank1
  8225  07A3  01A4               	clrf	_eusartRxLastError^(0+128)	;volatile
  8226  07A4                     l129:
  8227  07A4  0008               	return
  8228  07A5                     __end_of_EUSART_Initialize:
  8229                           
  8230                           	psect	text28
  8231  0F17                     __ptext28:	
  8232 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  8233 ;; Defined at:
  8234 ;;		line 170 in file "mcc_generated_files/eusart.c"
  8235 ;; Parameters:    Size  Location     Type
  8236 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8237 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  8238 ;; Auto vars:     Size  Location     Type
  8239 ;;		None
  8240 ;; Return value:  Size  Location     Type
  8241 ;;                  1    wreg      void 
  8242 ;; Registers used:
  8243 ;;		wreg
  8244 ;; Tracked objects:
  8245 ;;		On entry : 0/0
  8246 ;;		On exit  : 0/0
  8247 ;;		Unchanged: 0/0
  8248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8249 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8252 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8253 ;;Total ram usage:        2 bytes
  8254 ;; Hardware stack levels used:    1
  8255 ;; Hardware stack levels required when called:    6
  8256 ;; This function calls:
  8257 ;;		Nothing
  8258 ;; This function is called by:
  8259 ;;		_EUSART_Initialize
  8260 ;; This function uses a non-reentrant model
  8261 ;;
  8262                           
  8263                           
  8264                           ;psect for function _EUSART_SetOverrunErrorHandler
  8265  0F17                     _EUSART_SetOverrunErrorHandler:
  8266  0F17                     l2902:	
  8267                           ;incstack = 0
  8268                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  8269                           
  8270                           
  8271                           ;mcc_generated_files/eusart.c: 171:     EUSART_OverrunErrorHandler = interruptHandler;
  8272  0F17  0020               	movlb	0	; select bank0
  8273  0F18  0821               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  8274  0F19  0021               	movlb	1	; select bank1
  8275  0F1A  00D8               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  8276  0F1B  0020               	movlb	0	; select bank0
  8277  0F1C  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  8278  0F1D  0021               	movlb	1	; select bank1
  8279  0F1E  00D7               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  8280  0F1F                     l177:
  8281  0F1F  0008               	return
  8282  0F20                     __end_of_EUSART_SetOverrunErrorHandler:
  8283                           
  8284                           	psect	text29
  8285  0F0E                     __ptext29:	
  8286 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  8287 ;; Defined at:
  8288 ;;		line 166 in file "mcc_generated_files/eusart.c"
  8289 ;; Parameters:    Size  Location     Type
  8290 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8291 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  8292 ;; Auto vars:     Size  Location     Type
  8293 ;;		None
  8294 ;; Return value:  Size  Location     Type
  8295 ;;                  1    wreg      void 
  8296 ;; Registers used:
  8297 ;;		wreg
  8298 ;; Tracked objects:
  8299 ;;		On entry : 0/0
  8300 ;;		On exit  : 0/0
  8301 ;;		Unchanged: 0/0
  8302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8303 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8306 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8307 ;;Total ram usage:        2 bytes
  8308 ;; Hardware stack levels used:    1
  8309 ;; Hardware stack levels required when called:    6
  8310 ;; This function calls:
  8311 ;;		Nothing
  8312 ;; This function is called by:
  8313 ;;		_EUSART_Initialize
  8314 ;; This function uses a non-reentrant model
  8315 ;;
  8316                           
  8317                           
  8318                           ;psect for function _EUSART_SetFramingErrorHandler
  8319  0F0E                     _EUSART_SetFramingErrorHandler:
  8320  0F0E                     l2900:	
  8321                           ;incstack = 0
  8322                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  8323                           
  8324                           
  8325                           ;mcc_generated_files/eusart.c: 167:     EUSART_FramingErrorHandler = interruptHandler;
  8326  0F0E  0020               	movlb	0	; select bank0
  8327  0F0F  0821               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  8328  0F10  0021               	movlb	1	; select bank1
  8329  0F11  00DA               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  8330  0F12  0020               	movlb	0	; select bank0
  8331  0F13  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  8332  0F14  0021               	movlb	1	; select bank1
  8333  0F15  00D9               	movwf	_EUSART_FramingErrorHandler^(0+128)
  8334  0F16                     l174:
  8335  0F16  0008               	return
  8336  0F17                     __end_of_EUSART_SetFramingErrorHandler:
  8337                           
  8338                           	psect	text30
  8339  0F05                     __ptext30:	
  8340 ;; *************** function _EUSART_SetErrorHandler *****************
  8341 ;; Defined at:
  8342 ;;		line 174 in file "mcc_generated_files/eusart.c"
  8343 ;; Parameters:    Size  Location     Type
  8344 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8345 ;;		 -> EUSART_DefaultErrorHandler(1), 
  8346 ;; Auto vars:     Size  Location     Type
  8347 ;;		None
  8348 ;; Return value:  Size  Location     Type
  8349 ;;                  1    wreg      void 
  8350 ;; Registers used:
  8351 ;;		wreg
  8352 ;; Tracked objects:
  8353 ;;		On entry : 0/0
  8354 ;;		On exit  : 0/0
  8355 ;;		Unchanged: 0/0
  8356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8357 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8360 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8361 ;;Total ram usage:        2 bytes
  8362 ;; Hardware stack levels used:    1
  8363 ;; Hardware stack levels required when called:    6
  8364 ;; This function calls:
  8365 ;;		Nothing
  8366 ;; This function is called by:
  8367 ;;		_EUSART_Initialize
  8368 ;; This function uses a non-reentrant model
  8369 ;;
  8370                           
  8371                           
  8372                           ;psect for function _EUSART_SetErrorHandler
  8373  0F05                     _EUSART_SetErrorHandler:
  8374  0F05                     l2904:	
  8375                           ;incstack = 0
  8376                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  8377                           
  8378                           
  8379                           ;mcc_generated_files/eusart.c: 175:     EUSART_ErrorHandler = interruptHandler;
  8380  0F05  0020               	movlb	0	; select bank0
  8381  0F06  0821               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  8382  0F07  0021               	movlb	1	; select bank1
  8383  0F08  00D6               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  8384  0F09  0020               	movlb	0	; select bank0
  8385  0F0A  0820               	movf	EUSART_SetErrorHandler@interruptHandler,w
  8386  0F0B  0021               	movlb	1	; select bank1
  8387  0F0C  00D5               	movwf	_EUSART_ErrorHandler^(0+128)
  8388  0F0D                     l180:
  8389  0F0D  0008               	return
  8390  0F0E                     __end_of_EUSART_SetErrorHandler:
  8391                           
  8392                           	psect	text31
  8393  05BF                     __ptext31:	
  8394 ;; *************** function _SPI_Open *****************
  8395 ;; Defined at:
  8396 ;;		line 77 in file "mcc_generated_files/spi.c"
  8397 ;; Parameters:    Size  Location     Type
  8398 ;;  spiUniqueCon    1    wreg     enum E355
  8399 ;; Auto vars:     Size  Location     Type
  8400 ;;  spiUniqueCon    1    3[BANK0 ] enum E355
  8401 ;; Return value:  Size  Location     Type
  8402 ;;                  1    wreg      _Bool 
  8403 ;; Registers used:
  8404 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  8405 ;; Tracked objects:
  8406 ;;		On entry : 0/0
  8407 ;;		On exit  : 0/0
  8408 ;;		Unchanged: 0/0
  8409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8411 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8412 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8413 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8414 ;;Total ram usage:        4 bytes
  8415 ;; Hardware stack levels used:    1
  8416 ;; Hardware stack levels required when called:    6
  8417 ;; This function calls:
  8418 ;;		Nothing
  8419 ;; This function is called by:
  8420 ;;		_main
  8421 ;; This function uses a non-reentrant model
  8422 ;;
  8423                           
  8424                           
  8425                           ;psect for function _SPI_Open
  8426  05BF                     _SPI_Open:
  8427                           
  8428                           ;incstack = 0
  8429                           ; Regs used in _SPI_Open: [wreg-fsr0h+status,2+status,0+pclath]
  8430                           ;SPI_Open@spiUniqueConfiguration stored from wreg
  8431  05BF  0020               	movlb	0	; select bank0
  8432  05C0  00A3               	movwf	SPI_Open@spiUniqueConfiguration
  8433  05C1                     l3070:
  8434                           
  8435                           ;mcc_generated_files/spi.c: 77: _Bool SPI_Open(spi_modes_t spiUniqueConfiguration);mcc_g
      +                          enerated_files/spi.c: 78: {;mcc_generated_files/spi.c: 79:     if(!SSP1CON1bits.SSPEN)
  8436  05C1  0024               	movlb	4	; select bank4
  8437  05C2  1A95               	btfsc	21,5	;volatile
  8438  05C3  2DC5               	goto	u2261
  8439  05C4  2DC6               	goto	u2260
  8440  05C5                     u2261:
  8441  05C5  2E17               	goto	l213
  8442  05C6                     u2260:
  8443  05C6                     l3072:
  8444                           
  8445                           ;mcc_generated_files/spi.c: 80:     {;mcc_generated_files/spi.c: 81:         SSP1STAT = 
      +                          spi_configuration[spiUniqueConfiguration].stat;
  8446  05C6  0020               	movlb	0	; select bank0
  8447  05C7  0823               	movf	SPI_Open@spiUniqueConfiguration,w
  8448  05C8  00A0               	movwf	??_SPI_Open
  8449  05C9  01A1               	clrf	??_SPI_Open+1
  8450  05CA  35A0               	lslf	??_SPI_Open,f
  8451  05CB  0DA1               	rlf	??_SPI_Open+1,f
  8452  05CC  35A0               	lslf	??_SPI_Open,f
  8453  05CD  0DA1               	rlf	??_SPI_Open+1,f
  8454  05CE  300E               	movlw	low ((_spi_configuration+1)| (0+32768))
  8455  05CF  0720               	addwf	??_SPI_Open,w
  8456  05D0  0084               	movwf	4
  8457  05D1  3090               	movlw	high ((_spi_configuration+1)| (0+32768))
  8458  05D2  3D21               	addwfc	??_SPI_Open+1,w
  8459  05D3  0085               	movwf	5
  8460  05D4  0800               	movf	0,w	;code access
  8461  05D5  0024               	movlb	4	; select bank4
  8462  05D6  0094               	movwf	20	;volatile
  8463                           
  8464                           ;mcc_generated_files/spi.c: 82:         SSP1CON1 = spi_configuration[spiUniqueConfigurat
      +                          ion].con1;
  8465  05D7  0020               	movlb	0	; select bank0
  8466  05D8  0823               	movf	SPI_Open@spiUniqueConfiguration,w
  8467  05D9  00A0               	movwf	??_SPI_Open
  8468  05DA  01A1               	clrf	??_SPI_Open+1
  8469  05DB  35A0               	lslf	??_SPI_Open,f
  8470  05DC  0DA1               	rlf	??_SPI_Open+1,f
  8471  05DD  35A0               	lslf	??_SPI_Open,f
  8472  05DE  0DA1               	rlf	??_SPI_Open+1,f
  8473  05DF  300D               	movlw	low (_spi_configuration| (0+32768))
  8474  05E0  0720               	addwf	??_SPI_Open,w
  8475  05E1  0084               	movwf	4
  8476  05E2  3090               	movlw	high (_spi_configuration| (0+32768))
  8477  05E3  3D21               	addwfc	??_SPI_Open+1,w
  8478  05E4  0085               	movwf	5
  8479  05E5  0800               	movf	0,w	;code access
  8480  05E6  0024               	movlb	4	; select bank4
  8481  05E7  0095               	movwf	21	;volatile
  8482  05E8                     l3074:
  8483                           
  8484                           ;mcc_generated_files/spi.c: 83:         SSP1CON2 = 0x00;
  8485  05E8  0196               	clrf	22	;volatile
  8486  05E9                     l3076:
  8487                           
  8488                           ;mcc_generated_files/spi.c: 84:         SSP1ADD = spi_configuration[spiUniqueConfigurati
      +                          on].add;
  8489  05E9  0020               	movlb	0	; select bank0
  8490  05EA  0823               	movf	SPI_Open@spiUniqueConfiguration,w
  8491  05EB  00A0               	movwf	??_SPI_Open
  8492  05EC  01A1               	clrf	??_SPI_Open+1
  8493  05ED  35A0               	lslf	??_SPI_Open,f
  8494  05EE  0DA1               	rlf	??_SPI_Open+1,f
  8495  05EF  35A0               	lslf	??_SPI_Open,f
  8496  05F0  0DA1               	rlf	??_SPI_Open+1,f
  8497  05F1  300F               	movlw	low ((_spi_configuration+2)| (0+32768))
  8498  05F2  0720               	addwf	??_SPI_Open,w
  8499  05F3  0084               	movwf	4
  8500  05F4  3090               	movlw	high ((_spi_configuration+2)| (0+32768))
  8501  05F5  3D21               	addwfc	??_SPI_Open+1,w
  8502  05F6  0085               	movwf	5
  8503  05F7  0800               	movf	0,w	;code access
  8504  05F8  0024               	movlb	4	; select bank4
  8505  05F9  0092               	movwf	18	;volatile
  8506  05FA                     l3078:
  8507                           
  8508                           ;mcc_generated_files/spi.c: 85:         TRISBbits.TRISB6 = spi_configuration[spiUniqueCo
      +                          nfiguration].operation;
  8509  05FA  0020               	movlb	0	; select bank0
  8510  05FB  0823               	movf	SPI_Open@spiUniqueConfiguration,w
  8511  05FC  00A0               	movwf	??_SPI_Open
  8512  05FD  01A1               	clrf	??_SPI_Open+1
  8513  05FE  35A0               	lslf	??_SPI_Open,f
  8514  05FF  0DA1               	rlf	??_SPI_Open+1,f
  8515  0600  35A0               	lslf	??_SPI_Open,f
  8516  0601  0DA1               	rlf	??_SPI_Open+1,f
  8517  0602  3010               	movlw	low ((_spi_configuration+3)| (0+32768))
  8518  0603  0720               	addwf	??_SPI_Open,w
  8519  0604  0084               	movwf	4
  8520  0605  3090               	movlw	high ((_spi_configuration+3)| (0+32768))
  8521  0606  3D21               	addwfc	??_SPI_Open+1,w
  8522  0607  0085               	movwf	5
  8523  0608  0800               	movf	0,w	;code access
  8524  0609  00A2               	movwf	??_SPI_Open+2
  8525  060A  0EA2               	swapf	??_SPI_Open+2,f
  8526  060B  0DA2               	rlf	??_SPI_Open+2,f
  8527  060C  0DA2               	rlf	??_SPI_Open+2,f
  8528  060D  0021               	movlb	1	; select bank1
  8529  060E  080D               	movf	13,w	;volatile
  8530  060F  0020               	movlb	0	; select bank0
  8531  0610  0622               	xorwf	??_SPI_Open+2,w
  8532  0611  39BF               	andlw	-65
  8533  0612  0622               	xorwf	??_SPI_Open+2,w
  8534  0613  0021               	movlb	1	; select bank1
  8535  0614  008D               	movwf	13	;volatile
  8536  0615                     l3080:
  8537                           
  8538                           ;mcc_generated_files/spi.c: 86:         SSP1CON1bits.SSPEN = 1;
  8539  0615  0024               	movlb	4	; select bank4
  8540  0616  1695               	bsf	21,5	;volatile
  8541  0617                     l213:
  8542  0617  0008               	return
  8543  0618                     __end_of_SPI_Open:
  8544                           
  8545                           	psect	intentry
  8546  0004                     __pintentry:	
  8547 ;; *************** function _INTERRUPT_InterruptManager *****************
  8548 ;; Defined at:
  8549 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8550 ;; Parameters:    Size  Location     Type
  8551 ;;		None
  8552 ;; Auto vars:     Size  Location     Type
  8553 ;;		None
  8554 ;; Return value:  Size  Location     Type
  8555 ;;                  1    wreg      void 
  8556 ;; Registers used:
  8557 ;;		wreg, status,2, status,0, pclath, cstack
  8558 ;; Tracked objects:
  8559 ;;		On entry : 0/0
  8560 ;;		On exit  : 0/0
  8561 ;;		Unchanged: 0/0
  8562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8567 ;;Total ram usage:        0 bytes
  8568 ;; Hardware stack levels used:    1
  8569 ;; Hardware stack levels required when called:    5
  8570 ;; This function calls:
  8571 ;;		_INT_ISR
  8572 ;; This function is called by:
  8573 ;;		Interrupt level 1
  8574 ;; This function uses a non-reentrant model
  8575 ;;
  8576                           
  8577  0004                     _INTERRUPT_InterruptManager:
  8578                           
  8579                           ;incstack = 0
  8580  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  8581                           
  8582                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  8583  0005  3180               	pagesel	$
  8584  0006                     i1l2426:
  8585                           
  8586                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.INTE == 1 && INTCONbits.
      +                          INTF == 1)
  8587  0006  1E0B               	btfss	11,4	;volatile
  8588  0007  2809               	goto	u153_21
  8589  0008  280A               	goto	u153_20
  8590  0009                     u153_21:
  8591  0009  2811               	goto	i1l260
  8592  000A                     u153_20:
  8593  000A                     i1l2428:
  8594  000A  1C8B               	btfss	11,1	;volatile
  8595  000B  280D               	goto	u154_21
  8596  000C  280E               	goto	u154_20
  8597  000D                     u154_21:
  8598  000D  2811               	goto	i1l260
  8599  000E                     u154_20:
  8600  000E                     i1l2430:
  8601                           
  8602                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         INT_ISR();
  8603  000E  318E  26EC  3180   	fcall	_INT_ISR
  8604  0011                     i1l260:	
  8605                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  8606                           
  8607  0011  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  8608  0012  0009               	retfie
  8609  0013                     __end_of_INTERRUPT_InterruptManager:
  8610                           
  8611                           	psect	text33
  8612  0EEC                     __ptext33:	
  8613 ;; *************** function _INT_ISR *****************
  8614 ;; Defined at:
  8615 ;;		line 32 in file "mcc_generated_files/ext_int.c"
  8616 ;; Parameters:    Size  Location     Type
  8617 ;;		None
  8618 ;; Auto vars:     Size  Location     Type
  8619 ;;		None
  8620 ;; Return value:  Size  Location     Type
  8621 ;;                  1    wreg      void 
  8622 ;; Registers used:
  8623 ;;		wreg, status,2, status,0, pclath, cstack
  8624 ;; Tracked objects:
  8625 ;;		On entry : 0/0
  8626 ;;		On exit  : 0/0
  8627 ;;		Unchanged: 0/0
  8628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8633 ;;Total ram usage:        0 bytes
  8634 ;; Hardware stack levels used:    1
  8635 ;; Hardware stack levels required when called:    4
  8636 ;; This function calls:
  8637 ;;		_INT_CallBack
  8638 ;; This function is called by:
  8639 ;;		_INTERRUPT_InterruptManager
  8640 ;; This function uses a non-reentrant model
  8641 ;;
  8642                           
  8643                           
  8644                           ;psect for function _INT_ISR
  8645  0EEC                     _INT_ISR:
  8646  0EEC                     i1l2368:	
  8647                           ;incstack = 0
  8648                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
  8649                           
  8650                           
  8651                           ;mcc_generated_files/ext_int.c: 34:     (INTCONbits.INTF = 0);
  8652  0EEC  108B               	bcf	11,1	;volatile
  8653  0EED                     i1l2370:
  8654                           
  8655                           ;mcc_generated_files/ext_int.c: 37:     INT_CallBack();
  8656  0EED  318F  2749  318E   	fcall	_INT_CallBack
  8657  0EF0                     i1l271:
  8658  0EF0  0008               	return
  8659  0EF1                     __end_of_INT_ISR:
  8660                           
  8661                           	psect	text34
  8662  0F49                     __ptext34:	
  8663 ;; *************** function _INT_CallBack *****************
  8664 ;; Defined at:
  8665 ;;		line 41 in file "mcc_generated_files/ext_int.c"
  8666 ;; Parameters:    Size  Location     Type
  8667 ;;		None
  8668 ;; Auto vars:     Size  Location     Type
  8669 ;;		None
  8670 ;; Return value:  Size  Location     Type
  8671 ;;                  1    wreg      void 
  8672 ;; Registers used:
  8673 ;;		wreg, status,2, status,0, pclath, cstack
  8674 ;; Tracked objects:
  8675 ;;		On entry : 0/0
  8676 ;;		On exit  : 0/0
  8677 ;;		Unchanged: 0/0
  8678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8683 ;;Total ram usage:        0 bytes
  8684 ;; Hardware stack levels used:    1
  8685 ;; Hardware stack levels required when called:    3
  8686 ;; This function calls:
  8687 ;;		Absolute function
  8688 ;;		_INT_DefaultInterruptHandler
  8689 ;;		_ISR
  8690 ;; This function is called by:
  8691 ;;		_INT_ISR
  8692 ;; This function uses a non-reentrant model
  8693 ;;
  8694                           
  8695                           
  8696                           ;psect for function _INT_CallBack
  8697  0F49                     _INT_CallBack:
  8698  0F49                     i1l2312:	
  8699                           ;incstack = 0
  8700                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
  8701                           
  8702                           
  8703                           ;mcc_generated_files/ext_int.c: 44:     if(INT_InterruptHandler)
  8704  0F49  0021               	movlb	1	; select bank1
  8705  0F4A  0853               	movf	_INT_InterruptHandler^(0+128),w
  8706  0F4B  0454               	iorwf	(_INT_InterruptHandler+1)^(0+128),w
  8707  0F4C  1903               	btfsc	3,2
  8708  0F4D  2F4F               	goto	u146_21
  8709  0F4E  2F50               	goto	u146_20
  8710  0F4F                     u146_21:
  8711  0F4F  2F55               	goto	i1l275
  8712  0F50                     u146_20:
  8713  0F50                     i1l2314:
  8714                           
  8715                           ;mcc_generated_files/ext_int.c: 45:     {;mcc_generated_files/ext_int.c: 46:         INT
      +                          _InterruptHandler();
  8716  0F50  0854               	movf	(_INT_InterruptHandler+1)^(0+128),w
  8717  0F51  008A               	movwf	10
  8718  0F52  0853               	movf	_INT_InterruptHandler^(0+128),w
  8719  0F53  000A               	callw
  8720  0F54  318F               	pagesel	$
  8721  0F55                     i1l275:
  8722  0F55  0008               	return
  8723  0F56                     __end_of_INT_CallBack:
  8724                           
  8725                           	psect	text35
  8726  07FE                     __ptext35:	
  8727 ;; *************** function _INT_DefaultInterruptHandler *****************
  8728 ;; Defined at:
  8729 ;;		line 54 in file "mcc_generated_files/ext_int.c"
  8730 ;; Parameters:    Size  Location     Type
  8731 ;;		None
  8732 ;; Auto vars:     Size  Location     Type
  8733 ;;		None
  8734 ;; Return value:  Size  Location     Type
  8735 ;;                  1    wreg      void 
  8736 ;; Registers used:
  8737 ;;		None
  8738 ;; Tracked objects:
  8739 ;;		On entry : 0/0
  8740 ;;		On exit  : 0/0
  8741 ;;		Unchanged: 0/0
  8742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8747 ;;Total ram usage:        0 bytes
  8748 ;; Hardware stack levels used:    1
  8749 ;; This function calls:
  8750 ;;		Nothing
  8751 ;; This function is called by:
  8752 ;;		_EXT_INT_Initialize
  8753 ;;		_INT_CallBack
  8754 ;; This function uses a non-reentrant model
  8755 ;;
  8756                           
  8757                           
  8758                           ;psect for function _INT_DefaultInterruptHandler
  8759  07FE                     _INT_DefaultInterruptHandler:
  8760  07FE                     i1l281:	
  8761                           ;incstack = 0
  8762                           ; Regs used in _INT_DefaultInterruptHandler: []
  8763                           
  8764  07FE  0008               	return
  8765  07FF                     __end_of_INT_DefaultInterruptHandler:
  8766                           
  8767                           	psect	text36
  8768  06EA                     __ptext36:	
  8769 ;; *************** function _ISR *****************
  8770 ;; Defined at:
  8771 ;;		line 500 in file "wl_module.c"
  8772 ;; Parameters:    Size  Location     Type
  8773 ;;		None
  8774 ;; Auto vars:     Size  Location     Type
  8775 ;;  status          1    4[COMMON] unsigned char 
  8776 ;; Return value:  Size  Location     Type
  8777 ;;                  1    wreg      void 
  8778 ;; Registers used:
  8779 ;;		wreg, status,2, status,0, pclath, cstack
  8780 ;; Tracked objects:
  8781 ;;		On entry : 0/0
  8782 ;;		On exit  : 0/0
  8783 ;;		Unchanged: 0/0
  8784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8786 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8787 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8788 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8789 ;;Total ram usage:        2 bytes
  8790 ;; Hardware stack levels used:    1
  8791 ;; Hardware stack levels required when called:    2
  8792 ;; This function calls:
  8793 ;;		i1_SPI_ExchangeByte
  8794 ;;		i1_wl_module_config_register
  8795 ;; This function is called by:
  8796 ;;		_main
  8797 ;;		_INT_CallBack
  8798 ;; This function uses a non-reentrant model
  8799 ;;
  8800                           
  8801                           
  8802                           ;psect for function _ISR
  8803  06EA                     _ISR:
  8804  06EA                     i1l2154:	
  8805                           ;incstack = 0
  8806                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  8807                           
  8808                           
  8809                           ;wl_module.c: 503:         unsigned char status;;wl_module.c: 506:         LATCbits.LATC
      +                          6 = 0;;
  8810  06EA  0022               	movlb	2	; select bank2
  8811  06EB  130E               	bcf	14,6	;volatile
  8812  06EC                     i1l2156:
  8813                           
  8814                           ;wl_module.c: 507:         status = SPI_ExchangeByte(0xFF);
  8815  06EC  30FF               	movlw	255
  8816  06ED  318F  273C  3186   	fcall	i1_SPI_ExchangeByte
  8817  06F0  00F8               	movwf	??_ISR
  8818  06F1  0878               	movf	??_ISR,w
  8819  06F2  00F9               	movwf	ISR@status
  8820  06F3                     i1l2158:
  8821                           
  8822                           ;wl_module.c: 508:         LATCbits.LATC6 = 1;;
  8823  06F3  0022               	movlb	2	; select bank2
  8824  06F4  170E               	bsf	14,6	;volatile
  8825  06F5                     i1l2160:
  8826                           
  8827                           ;wl_module.c: 511:         if (status & (1<<5)){
  8828  06F5  1EF9               	btfss	ISR@status,5
  8829  06F6  2EF8               	goto	u139_21
  8830  06F7  2EF9               	goto	u139_20
  8831  06F8                     u139_21:
  8832  06F8  2F02               	goto	i1l2166
  8833  06F9                     u139_20:
  8834  06F9                     i1l2162:
  8835                           
  8836                           ;wl_module.c: 512:                     wl_module_config_register(0x07, (1<<5));
  8837  06F9  3020               	movlw	32
  8838  06FA  00F8               	movwf	??_ISR
  8839  06FB  0878               	movf	??_ISR,w
  8840  06FC  00F6               	movwf	i1wl_module_config_register@value
  8841  06FD  3007               	movlw	7
  8842  06FE  318F  2771  3186   	fcall	i1_wl_module_config_register
  8843  0701                     i1l2164:
  8844                           
  8845                           ;wl_module.c: 513:                     PTX=0;
  8846  0701  01F4               	clrf	_PTX	;volatile
  8847  0702                     i1l2166:
  8848                           
  8849                           ;wl_module.c: 516:  if (status & (1<<4)){
  8850  0702  1E79               	btfss	ISR@status,4
  8851  0703  2F05               	goto	u140_21
  8852  0704  2F06               	goto	u140_20
  8853  0705                     u140_21:
  8854  0705  2F16               	goto	i1l2176
  8855  0706                     u140_20:
  8856  0706                     i1l2168:
  8857                           
  8858                           ;wl_module.c: 517:   wl_module_config_register(0x07, (1<<4));
  8859  0706  3010               	movlw	16
  8860  0707  00F8               	movwf	??_ISR
  8861  0708  0878               	movf	??_ISR,w
  8862  0709  00F6               	movwf	i1wl_module_config_register@value
  8863  070A  3007               	movlw	7
  8864  070B  318F  2771  3186   	fcall	i1_wl_module_config_register
  8865  070E                     i1l2170:
  8866                           
  8867                           ;wl_module.c: 518:   LATCbits.LATC5 = 1;;
  8868  070E  0022               	movlb	2	; select bank2
  8869  070F  168E               	bsf	14,5	;volatile
  8870  0710                     i1l2172:
  8871                           
  8872                           ;wl_module.c: 519:   _delay((unsigned long)((10)*(16000000/4000000.0)));
  8873  0710  300D               	movlw	13
  8874  0711                     u246_27:
  8875  0711  0B89               	decfsz	9,f
  8876  0712  2F11               	goto	u246_27
  8877  0713  0000               	nop
  8878  0714                     i1l2174:
  8879                           
  8880                           ;wl_module.c: 520:   LATCbits.LATC5 = 0;;
  8881  0714  0022               	movlb	2	; select bank2
  8882  0715  128E               	bcf	14,5	;volatile
  8883  0716                     i1l2176:
  8884                           
  8885                           ;wl_module.c: 523:  if (status & (1<<0)){
  8886  0716  1C79               	btfss	ISR@status,0
  8887  0717  2F19               	goto	u141_21
  8888  0718  2F1A               	goto	u141_20
  8889  0719                     u141_21:
  8890  0719  2F22               	goto	i1l470
  8891  071A                     u141_20:
  8892  071A                     i1l2178:
  8893                           
  8894                           ;wl_module.c: 524:   LATCbits.LATC6 = 0;;
  8895  071A  0022               	movlb	2	; select bank2
  8896  071B  130E               	bcf	14,6	;volatile
  8897  071C                     i1l2180:
  8898                           
  8899                           ;wl_module.c: 525:   SPI_ExchangeByte(0xE1);
  8900  071C  30E1               	movlw	225
  8901  071D  318F  273C  3186   	fcall	i1_SPI_ExchangeByte
  8902  0720                     i1l2182:
  8903                           
  8904                           ;wl_module.c: 526:   LATCbits.LATC6 = 1;;
  8905  0720  0022               	movlb	2	; select bank2
  8906  0721  170E               	bsf	14,6	;volatile
  8907  0722                     i1l470:
  8908  0722  0008               	return
  8909  0723                     __end_of_ISR:
  8910                           
  8911                           	psect	text37
  8912  0F71                     __ptext37:	
  8913 ;; *************** function i1_wl_module_config_register *****************
  8914 ;; Defined at:
  8915 ;;		line 445 in file "wl_module.c"
  8916 ;; Parameters:    Size  Location     Type
  8917 ;;  reg             1    wreg     unsigned char 
  8918 ;;  value           1    1[COMMON] unsigned char 
  8919 ;; Auto vars:     Size  Location     Type
  8920 ;;  reg             1    2[COMMON] unsigned char 
  8921 ;; Return value:  Size  Location     Type
  8922 ;;                  1    wreg      void 
  8923 ;; Registers used:
  8924 ;;		wreg, status,2, status,0, pclath, cstack
  8925 ;; Tracked objects:
  8926 ;;		On entry : 0/0
  8927 ;;		On exit  : 0/0
  8928 ;;		Unchanged: 0/0
  8929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8930 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8931 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8933 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8934 ;;Total ram usage:        2 bytes
  8935 ;; Hardware stack levels used:    1
  8936 ;; Hardware stack levels required when called:    1
  8937 ;; This function calls:
  8938 ;;		i1_SPI_ExchangeByte
  8939 ;; This function is called by:
  8940 ;;		_ISR
  8941 ;; This function uses a non-reentrant model
  8942 ;;
  8943                           
  8944                           
  8945                           ;psect for function i1_wl_module_config_register
  8946  0F71                     i1_wl_module_config_register:
  8947                           
  8948                           ;incstack = 0
  8949                           ; Regs used in i1_wl_module_config_register: [wreg+status,2+status,0+pclath+cstack]
  8950                           ;i1wl_module_config_register@reg stored from wreg
  8951  0F71  00F7               	movwf	i1wl_module_config_register@reg
  8952  0F72                     i1l2132:
  8953                           
  8954                           ;wl_module.c: 445: void wl_module_config_register(unsigned char reg, unsigned char value
      +                          );wl_module.c: 447: {;wl_module.c: 448:     LATCbits.LATC6 = 0;;
  8955  0F72  0022               	movlb	2	; select bank2
  8956  0F73  130E               	bcf	14,6	;volatile
  8957  0F74                     i1l2134:
  8958                           
  8959                           ;wl_module.c: 449:     SPI_ExchangeByte(0x20 | (0x1F & reg));
  8960  0F74  0877               	movf	i1wl_module_config_register@reg,w
  8961  0F75  391F               	andlw	31
  8962  0F76  3820               	iorlw	32
  8963  0F77  318F  273C  318F   	fcall	i1_SPI_ExchangeByte
  8964                           
  8965                           ;wl_module.c: 450:    SPI_ExchangeByte(value);
  8966  0F7A  0876               	movf	i1wl_module_config_register@value,w
  8967  0F7B  318F  273C  318F   	fcall	i1_SPI_ExchangeByte
  8968  0F7E                     i1l2136:
  8969                           
  8970                           ;wl_module.c: 451:     LATCbits.LATC6 = 1;;
  8971  0F7E  0022               	movlb	2	; select bank2
  8972  0F7F  170E               	bsf	14,6	;volatile
  8973  0F80                     i1l452:
  8974  0F80  0008               	return
  8975  0F81                     __end_ofi1_wl_module_config_register:
  8976                           
  8977                           	psect	text38
  8978  0F3C                     __ptext38:	
  8979 ;; *************** function i1_SPI_ExchangeByte *****************
  8980 ;; Defined at:
  8981 ;;		line 97 in file "mcc_generated_files/spi.c"
  8982 ;; Parameters:    Size  Location     Type
  8983 ;;  data            1    wreg     unsigned char 
  8984 ;; Auto vars:     Size  Location     Type
  8985 ;;  data            1    0[COMMON] unsigned char 
  8986 ;; Return value:  Size  Location     Type
  8987 ;;                  1    wreg      unsigned char 
  8988 ;; Registers used:
  8989 ;;		wreg
  8990 ;; Tracked objects:
  8991 ;;		On entry : 0/0
  8992 ;;		On exit  : 0/0
  8993 ;;		Unchanged: 0/0
  8994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8996 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8998 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8999 ;;Total ram usage:        1 bytes
  9000 ;; Hardware stack levels used:    1
  9001 ;; This function calls:
  9002 ;;		Nothing
  9003 ;; This function is called by:
  9004 ;;		_ISR
  9005 ;;		i1_wl_module_config_register
  9006 ;; This function uses a non-reentrant model
  9007 ;;
  9008                           
  9009                           
  9010                           ;psect for function i1_SPI_ExchangeByte
  9011  0F3C                     i1_SPI_ExchangeByte:
  9012                           
  9013                           ;incstack = 0
  9014                           ; Regs used in i1_SPI_ExchangeByte: [wreg]
  9015                           ;i1SPI_ExchangeByte@data stored from wreg
  9016  0F3C  00F5               	movwf	i1SPI_ExchangeByte@data
  9017  0F3D                     i1l2060:
  9018                           
  9019                           ;mcc_generated_files/spi.c: 97: uint8_t SPI_ExchangeByte(uint8_t data);mcc_generated_fil
      +                          es/spi.c: 98: {;mcc_generated_files/spi.c: 99:     SSP1BUF = data;
  9020  0F3D  0875               	movf	i1SPI_ExchangeByte@data,w
  9021  0F3E  0024               	movlb	4	; select bank4
  9022  0F3F  0091               	movwf	17	;volatile
  9023  0F40                     i1l219:	
  9024                           ;mcc_generated_files/spi.c: 100:     while(!PIR1bits.SSP1IF);
  9025                           
  9026  0F40  0020               	movlb	0	; select bank0
  9027  0F41  1D90               	btfss	16,3	;volatile
  9028  0F42  2F44               	goto	u121_21
  9029  0F43  2F45               	goto	u121_20
  9030  0F44                     u121_21:
  9031  0F44  2F40               	goto	i1l219
  9032  0F45                     u121_20:
  9033  0F45                     i1l221:
  9034                           
  9035                           ;mcc_generated_files/spi.c: 101:     PIR1bits.SSP1IF = 0;
  9036  0F45  1190               	bcf	16,3	;volatile
  9037  0F46                     i1l2062:
  9038                           
  9039                           ;mcc_generated_files/spi.c: 102:     return SSP1BUF;
  9040  0F46  0024               	movlb	4	; select bank4
  9041  0F47  0811               	movf	17,w	;volatile
  9042  0F48                     i1l222:
  9043  0F48  0008               	return
  9044  0F49                     __end_ofi1_SPI_ExchangeByte:
  9045  007E                     btemp	set	126	;btemp
  9046  007E                     int$flags	set	126
  9047  007E                     wtemp0	set	126
  9048                           
  9049                           	psect	config
  9050                           
  9051                           ;Config register CONFIG1 @ 0x8007
  9052                           ;	Oscillator Selection Bits
  9053                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  9054                           ;	Power-up Timer Enable
  9055                           ;	PWRTE = OFF, PWRT disabled
  9056                           ;	MCLR Pin Function Select
  9057                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  9058                           ;	Flash Program Memory Code Protection
  9059                           ;	CP = OFF, Program memory code protection is disabled
  9060                           ;	Brown-out Reset Enable
  9061                           ;	BOREN = ON, Brown-out Reset enabled
  9062                           ;	Clock Out Enable
  9063                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  9064                           ;	Internal/External Switch Over
  9065                           ;	IESO = ON, Internal External Switch Over mode is enabled
  9066                           ;	Fail-Safe Clock Monitor Enable
  9067                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  9068  8007                     	org	32775
  9069  8007  3FFC               	dw	16380
  9070                           
  9071                           ;Config register CONFIG2 @ 0x8008
  9072                           ;	Flash Memory Self-Write Protection
  9073                           ;	WRT = OFF, Write protection off
  9074                           ;	Peripheral Pin Select one-way control
  9075                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
  9076                           ;	Zero Cross Detect Disable Bit
  9077                           ;	ZCD = OFF, ZCD disable.  ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  9078                           ;	PLL Enable Bit
  9079                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
  9080                           ;	Stack Overflow/Underflow Reset Enable
  9081                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  9082                           ;	Brown-out Reset Voltage Selection
  9083                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  9084                           ;	Low-Power Brown Out Reset
  9085                           ;	LPBOR = OFF, Low-Power BOR is disabled
  9086                           ;	Low-Voltage Programming Enable
  9087                           ;	LVP = ON, Low-voltage programming enabled
  9088  8008                     	org	32776
  9089  8008  3EFF               	dw	16127
  9090                           
  9091                           ;Config register CONFIG3 @ 0x8009
  9092                           ;	WDT Period Select
  9093                           ;	WDTCPS = WDTCPS1F, Software Control (WDTPS)
  9094                           ;	Watchdog Timer Enable
  9095                           ;	WDTE = OFF, WDT disabled
  9096                           ;	WDT Window Select
  9097                           ;	WDTCWS = WDTCWSSW, Software WDT window size control (WDTWS bits)
  9098                           ;	WDT Input Clock Selector
  9099                           ;	WDTCCS = SWC, Software control, controlled by WDTCS bits
  9100  8009                     	org	32777
  9101  8009  3F9F               	dw	16287

Data Sizes:
    Strings     13
    Constant    4
    Data        0
    BSS         42
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     79      79
    BANK1            80     14      59
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S1116_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    wl_module_write_register@value	PTR unsigned char  size(2) Largest target is 4096
		 -> wl_module_set_rx_pw@payloadwidth(COMMON[1]), wl_module_power_down@config(COMMON[1]), wl_module_set_as_tx@config(COMMON[1]), wl_module_tx_config@tx_addr(COMMON[5]), 
		 -> wl_module_rx_config@data(BANK0[5]), RAM(DATA[4096]), 

    wl_module_set_rx_addr@address	PTR unsigned char  size(1) Largest target is 5
		 -> wl_module_rx_config@data(BANK0[5]), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ISR(), INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ISR(), INT_DefaultInterruptHandler(), Absolute function(), 

    SPI_WriteBlock@block	PTR void  size(2) Largest target is 4096
		 -> wl_module_set_rx_pw@payloadwidth(COMMON[1]), wl_module_power_down@config(COMMON[1]), wl_module_set_as_tx@config(COMMON[1]), wl_module_tx_config@tx_addr(COMMON[5]), 
		 -> wl_module_rx_config@data(BANK0[5]), RAM(DATA[4096]), 

    SPI_WriteBlock@data	PTR unsigned char  size(2) Largest target is 4096
		 -> wl_module_set_rx_pw@payloadwidth(COMMON[1]), wl_module_power_down@config(COMMON[1]), wl_module_set_as_tx@config(COMMON[1]), wl_module_tx_config@tx_addr(COMMON[5]), 
		 -> wl_module_rx_config@data(BANK0[5]), RAM(DATA[4096]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INT_CallBack->_ISR
    _ISR->i1_wl_module_config_register
    i1_wl_module_config_register->i1_SPI_ExchangeByte

Critical Paths under _main in BANK0

    _main->_printf
    _wl_module_rx_config->_wl_module_set_rx_addr
    _wl_module_set_rx_addr->_wl_module_write_register
    _wl_module_write_register->_SPI_WriteBlock
    _SPI_WriteBlock->_SPI_ExchangeByte
    _wl_module_config_register->_SPI_ExchangeByte
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___aomod
    _EXT_INT_Initialize->_INT_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_printf
    _printf->_vfprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                37    37      0   14903
                                             10 BANK1      4     4      0
            _INT_SetInterruptHandler
                           _SPI_Open
                  _SYSTEM_Initialize
                             _printf
                     _wl_module_init
                _wl_module_rx_config
 ---------------------------------------------------------------------------------
 (1) _wl_module_rx_config                                  6     6      0    6250
                                             17 BANK0      6     6      0
          _wl_module_config_register
              _wl_module_set_rx_addr
 ---------------------------------------------------------------------------------
 (2) _wl_module_set_rx_addr                                4     2      2    3294
                                             13 BANK0      4     2      2
           _wl_module_write_register
 ---------------------------------------------------------------------------------
 (3) _wl_module_write_register                             6     3      3    1874
                                              7 BANK0      6     3      3
                   _SPI_ExchangeByte
                     _SPI_WriteBlock
 ---------------------------------------------------------------------------------
 (4) _SPI_WriteBlock                                       6     2      4     490
                                              1 BANK0      6     2      4
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (2) _wl_module_config_register                            2     1      1    2453
                                              1 BANK0      2     1      1
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (5) _SPI_ExchangeByte                                     1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _wl_module_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    7707
                                             78 BANK0      1     1      0
                                              3 BANK1      7     3      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    7536
                                             73 BANK0      5     2      3
                                              0 BANK1      3     3      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    7098
                                             57 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    5389
                                             27 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3158
                                             18 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     166
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1398
                                             10 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3    1006
                                              2 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      62
                                              1 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             19 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     613
                                              0 BANK0     19     3     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     625
                                              0 BANK0     27    11     16
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     574
                  _EUSART_Initialize
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     211
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     363
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _SPI_Open                                             4     4      0     124
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          0     0      0     207
                            _INT_ISR
 ---------------------------------------------------------------------------------
 (11) _INT_ISR                                             0     0      0     207
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (12) _INT_CallBack                                        0     0      0     207
                   Absolute function *
        _INT_DefaultInterruptHandler *
                                _ISR *
 ---------------------------------------------------------------------------------
 (13) _ISR                                                 2     2      0     207
                                              3 COMMON     2     2      0
                 i1_SPI_ExchangeByte
        i1_wl_module_config_register
 ---------------------------------------------------------------------------------
 (14) i1_wl_module_config_register                         2     1      1     118
                                              1 COMMON     2     1      1
                 i1_SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (15) i1_SPI_ExchangeByte                                  1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _INT_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INT_SetInterruptHandler
   _SPI_Open
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
                 _putch
                   _EUSART_Write
             _strlen
         _fputc
           _putch
             _EUSART_Write
   _wl_module_init
   _wl_module_rx_config
     _wl_module_config_register
       _SPI_ExchangeByte
     _wl_module_set_rx_addr
       _wl_module_write_register
         _SPI_ExchangeByte
         _SPI_WriteBlock
           _SPI_ExchangeByte

 _INTERRUPT_InterruptManager (ROOT)
   _INT_ISR
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *
       _ISR *
         i1_SPI_ExchangeByte
         i1_wl_module_config_register
           i1_SPI_ExchangeByte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      E      3B       7       73.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      94      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      94      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Tue Nov 21 11:48:08 2023

                               _SPI_Initialize 0FA4                                             l22 0EFD  
                                           l19 0F90                                             l83 06E9  
                     wl_module_set_rx_addr@len 002D               i1wl_module_config_register@value 0076  
                                          l213 0617                                            l221 0F6D  
                                          l222 0F70                                            l129 07A4  
                                          l209 0FB8                                            l153 0F34  
                                          l162 0F04                                            l219 0F68  
                                          l180 0F0D                                            l156 0F3B  
                                          l237 07C4                                            l174 0F16  
                                          l177 0F1F                                            l363 045F  
                                          l284 0F62                                            l452 0FA3  
                                          l357 0F31                                            l278 0F28  
                                          l458 07E1                                            l651 0368  
                                          l652 0379                                            l389 0FE5  
                                          l638 027B                                            l639 028C  
                                          _ISR 06EA                                            _PTX 0074  
                                          _abs 07E2                                            _pad 0618  
               ?_EUSART_SetFramingErrorHandler 0020                                            wreg 0009  
                                         ?_ISR 0075                                           l1001 0FCE  
                                         l1100 077E                                           l1031 0654  
                                         l1032 0661                                           l1033 066D  
                                         l1041 0090                                           l1106 0FFF  
                                         l1042 00A6                                           ?_abs 0033  
                                         l1028 0632                                           l1036 006F  
                                         l1045 0115                                           l1037 0077  
                                         l3000 06CF                                           l1080 07FD  
                                         l1073 0756                                           l3010 06DB  
                                         l3002 06D1                                           l1066 053A  
                                         l1059 0187                                           l3020 06E6  
                                         l3012 06DD                                           l3004 06D4  
                                         l1092 06AE                                           l3100 03E6  
                                         l1077 07FD                                           l3030 0F59  
                                         l3022 0EF7                                           l3014 06DF  
                                         l3006 06D6                                           l3110 040E  
                                         l3102 03F0                                           l3040 079A  
                                         l3032 0F61                                           l3024 0EFA  
                                         l3016 06E2                                           l3008 06D8  
                                         l3120 0FB9                                           l3112 0413  
                                         l3104 03F5                                           l3042 07A2  
                                         l3034 077F                                           l3026 0EFB  
                                         l3018 06E4                                           l3122 0FBF  
                                         l3050 0FD1                                           l3114 0453  
                                         l3106 03FF                                           l3036 078A  
                                         l3028 0F56                                           l3060 0730  
                                         l3044 0F93                                           l3116 0454  
                                         l3108 0404                                           l3140 0540  
                                         l3070 05C1                                           l3038 0792  
                                         l3062 0746                                           l3046 0F95  
                                         l3054 0FD8                                           l3118 045D  
                                         l3150 055F                                           l3142 0543  
                                         l3134 053B                                           l3080 0615  
                                         l3072 05C6                                           l3064 074F  
                                         l3056 0725                                           l3048 0FA1  
                                         l3160 0593                                           l3152 0562  
                                         l3144 0547                                           l3136 053E  
                                         l3074 05E8                                           l3058 072D  
                                         l3090 03AC                                           l3162 059E  
                                         l3154 056F                                           l3146 054F  
                                         l3138 053F                                           l3076 05E9  
                                         l3068 0F81                                           l2700 0F38  
                                         l3084 0F29                                           l3092 03BD  
                                         l3164 05AA                                           l3156 057C  
                                         l3148 0552                                           l3078 05FA  
                                         l2702 0F00                                           l2710 067E  
                                         l3094 03C6                                           l3086 037A  
                                         l3166 05AF                                           l3158 0588  
                                         l2800 0305                                           l2712 0688  
                                         l2704 066E                                           l2720 075C  
                                         l3096 03D7                                           l3088 037C  
                                         l2802 0327                                           l2714 06A5  
                                         l2706 0674                                           l2722 076A  
                                         l2730 0FF1                                           l2810 061A  
                                         l3098 03E1                                           l2900 0F0E  
                                         l2804 0337                                           l2708 0679  
                                         l2724 076F                                           l2732 0FF9  
                                         l2820 0635                                           l2812 061E  
                                         l2902 0F17                                           l2750 01C1  
                                         l2742 0188                                           l2806 0345  
                                         l2830 07E2                                           l2718 0759  
                                         l2726 0FE8                                           l2822 0641  
                                         l2814 0626                                           l2910 07C9  
                                         l2904 0F05                                           l2760 01FF  
                                         l2752 01E0                                           l2744 018A  
                                         l2808 034A                                           l2832 07F0  
                                         l2728 0FED                                           l2824 0646  
                                         l2816 062B                                           l2920 047B  
                                         l2736 0F65                                           l2840 07B8  
                                         l2912 07D0                                           l2906 0F20  
                                         l2770 0239                                           l2762 0207  
                                         l2754 01E5                                           l2746 0194  
                                         l2826 0658                                           l2818 0630  
                                         l2850 0073                                           l2842 0028  
                                         l2930 04AF                                           l2922 0480  
                                         l2738 0F6E                                           l2834 07A5  
                                         l2914 07DF                                           l2772 0249  
                                         l2764 020B                                           l2756 01F0  
                                         l2748 01B6                                           l2780 028D  
                                         l2860 00A2                                           l2852 0085  
                                         l2844 0038                                           l2940 04FB  
                                         l2932 04C8                                           l2924 0484  
                                         l2916 0462                                           l2836 07AB  
                                         l2908 07C7                                           l2774 024A  
                                         l2766 020F                                           l2758 01FC  
                                         l2790 02E5                                           l2782 028F  
                                         l2870 00E4                                           l2862 00AA  
                                         l2854 008B                                           l2846 004B  
                                         l2942 0506                                           l2926 0496  
                                         l2918 0473                                           l2838 07B3  
                                         ?_pad 0032                                           l2960 0FA4  
                                         l2768 0217                                           l2776 0258  
                                         l2792 02F2                                           l2784 0299  
                                         l2880 014B                                           l2872 00E8  
                                         l2864 00AD                                           l2856 0098  
                                         l2848 0051                                           l2936 04E2  
                                         l2928 04A7                                           l2952 0517  
                                         l2970 06AF                                           l2962 0FB1  
                                         l2778 025D                                           l2794 02F5  
                                         l2786 02BB                                           l2698 0F34  
                                         l2890 0164                                           l2874 0123  
                                         l2882 014F                                           l2866 00B2  
                                         l2858 009E                                           l2954 0530  
                                         l2938 04F3                                           l2946 050C  
                                         l2980 06BE                                           l2972 06B3  
                                         l2964 0FB2                                           l2796 02FD  
                                         l2788 02C6                                           l2892 0169  
                                         l2884 0156                                           l2876 0130  
                                         l2868 00E0                                           l2948 0514  
                                         l2990 06C6                                           l2982 06C0  
                                         l2974 06B6                                           l2966 0FB4  
                                         l2798 0301                                           l2894 016D  
                                         l2886 015A                                           l2878 013D  
                                         l2992 06C8                                           l2984 06C2  
                                         l2976 06B8                                           l2968 0FB6  
                                         l2888 015E                                           l2896 0175  
                                         l2994 06C9                                           l2986 06C3  
                                         l2978 06BA                                           l2996 06CA  
                                         l2988 06C4                                           l2998 06CD  
                                         STR_1 1000                                           u2000 0654  
                                         u2001 0653                                           u2010 0658  
                                         u2011 0657                                           u2020 07F0  
                                         u2100 009E                                           u2021 07EF  
                                         u2005 0650                                           u2101 009D  
                                         u2110 00A2                                           u2030 07C4  
                                         u2111 00A1                                           u2031 07C3  
                                         u2120 0123                                           u2040 0043  
                                         u2200 0473                                           u2025 07EC  
                                         u2121 0122                                           u2041 0041  
                                         u2201 0472                                           u2130 0130  
                                         u2050 0044                                           u2210 0496  
                                         u2131 012F                                           u2211 0495  
                                         u2140 013D                                           u2060 0051  
                                         u2220 04A7                                           u2300 0591  
                                         u2141 013C                                           u2125 011F  
                                         u2061 0050                                           u2221 04A6  
                                         u2301 058E                                           _LATA 010C  
                                         u2150 014B                                           u2230 04F3  
                                         _LATB 010D                                __end_of_INT_ISR 0EF1  
                                         u2151 014A                                           u2231 04F2  
                                         _LATC 010E                                           u2160 014F  
                                         u2080 0073                                           u2240 0FD7  
                                         u2320 059C                                           u2161 014E  
                                         u2145 0139                                           u2081 0072  
                                         u2241 0FD6                                           u2321 0599  
                                         u2170 0156                                           u2090 0085  
                                         u2250 074F                                           u2314 0593  
                                         u2171 0155                                           u2155 0147  
                                         u2091 0084                                           u2251 074E  
                                         u2260 05C6                                           u1700 0674  
                                         u2180 015A                                           u2261 05C5  
                                         u1701 0673                                           u2181 0159  
                                         u1710 0679                                           u2190 0164  
                                         u2334 059E                                           u1711 0678  
                                         u2191 0163                                           u2095 0081  
                                         u1720 0688                                           u2280 0586  
                                         u1721 0687                                           u2281 0583  
                                         u1810 01ED                                           u1730 06A5  
                                         u1731 06A4                                           u2427 0558  
                                         u1820 01FC                                           u1900 02C6  
                                         u1740 077E                                           u1821 01FB  
                                         u1901 02C5                                           u1741 077D  
                                         u2437 0568                                           u1830 020F  
                                         u1750 0FF9                                           u2294 0588  
                                         u1831 020E                                           u1735 06A1  
                                         u1751 0FF8                                           u2447 0575  
                                         u1840 0239                                           u1920 02F2  
                                         u1760 0F6D                                           u1841 0238  
                                         u1921 02F1                                           u1761 0F6C  
                                         u2457 05B5                                           u1850 0258  
                                         u1770 0194                                           u1930 0305  
                                         u1690 0F38                                           u1851 0257  
                                         u1771 0193                                           u1931 0304  
                                         u1691 0F37                                           u1860 025D  
                                         u1940 0327                                           u1861 025C  
                                         u1845 0235                                           u1941 0326  
                                         u1790 01C1                                           u1950 0345  
                                         u1791 01C0                                           u1951 0344  
                                         u1960 034A                                           u1880 0299  
                                         u1961 0349                                           u1945 0323  
                                         u1881 0298                                           u1980 061E  
                                         u1981 061D                                           u1990 062B  
                                         u1991 062A                                           _WPUA 020C  
                                         _WPUB 020D                                           _WPUC 020E  
                               _wl_module_init 0F29                                           abs@a 0033  
                                  main@seconds 00D1                                           _dbuf 00A5  
                                         _main 053B                                           _dtoa 0026  
                                         _prec 0070                                           _nout 00A0  
                                         pad@i 0036                                           pad@p 0033  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         pad@w 0038                                           btemp 007E  
          __end_of_INT_DefaultInterruptHandler 07FF                    _INT_DefaultInterruptHandler 07FE  
                                         start 0013                         __end_of_SPI_Initialize 0FB9  
              __end_of_INT_SetInterruptHandler 0F29                    __end_of_wl_module_rx_config 0460  
                                        ??_ISR 0078                                          ??_abs 0035  
                                        ??_pad 0035                      _wl_module_config_register 0F91  
                                ?_EUSART_Write 0075                 __size_of_OSCILLATOR_Initialize 0007  
                __end_of_OSCILLATOR_Initialize 0EFE                                __end_of___aodiv 028D  
                                        ?_main 0075                                          ?_dtoa 003B  
                              __end_of___aomod 037A                                          i1l221 0F45  
                                        i1l222 0F48                                          i1l219 0F40  
                                        i1l260 0011                                          i1l271 0EF0  
                                        i1l281 07FE                                          i1l275 0F55  
                                        i1l452 0F80                                          i1l470 0722  
                                 vfpfcnvrt@fmt 0059                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                        _RXPPS 0E24                                          _flags 0072  
                                        _fputc 066E                                          _fputs 0757  
                       __end_of_wl_module_init 0F32                                          pad@fp 003A  
                                        _width 00A2                                          _putch 0EFE  
                                        dtoa@d 003B                                          dtoa@i 0057  
                                        dtoa@n 004F                                          dtoa@p 0049  
                                        dtoa@s 004D                                          dtoa@w 004B  
                             __end_of_SPI_Open 0618                                          pclath 000A  
                                        status 0003                             i1_SPI_ExchangeByte 0F3C  
                                        wtemp0 007E               __end_of_wl_module_write_register 07E2  
                               _SPI_WriteBlock 07A5                                ?_SPI_Initialize 0075  
                              __initialization 0015                            ?i1_SPI_ExchangeByte 0075  
                                 __end_of_main 05BF                                   __end_of_dtoa 0188  
                               ??_EUSART_Write 0020                    ?_INTERRUPT_InterruptManager 0075  
                                       ??_main 00CF                                         ??_dtoa 0043  
                                    ??_INT_ISR 007A                           ??i1_SPI_ExchangeByte 0075  
                     __end_of_SPI_ExchangeByte 0F71              _EUSART_DefaultFramingErrorHandler 0000  
                   _EUSART_OverrunErrorHandler 00D7                                         ?_fputc 0022  
                                       ?_fputs 002A            __end_ofi1_wl_module_config_register 0F81  
                  i1_wl_module_config_register 0F71                                ?_wl_module_init 0075  
                                       _ANSELA 018C                                         ?_putch 0075  
                                       _ANSELB 018D                                         _ANSELC 018E  
                                       _BORCON 0116                                         _RC1REG 0199  
                                       _RC1STA 019D                                         _RB5PPS 0E9D  
                                       _RB6PPS 0E9E                                         _RC4PPS 0EA4  
                                       i1l2060 0F3D                                         i1l2132 0F72  
                                       i1l2062 0F46                                         i1l2134 0F74  
                                       i1l2136 0F7E                                         i1l2160 06F5  
                                       i1l2312 0F49                                         _ODCONA 028C  
                                       i1l2170 070E                                         i1l2162 06F9  
                                       i1l2154 06EA                                         i1l2314 0F50  
                                       _ODCONB 028D                                         _ODCONC 028E  
                                       i1l2180 071C                                         i1l2172 0710  
                                       i1l2164 0701                                         i1l2156 06EC  
                                       i1l2182 0720                                         i1l2174 0714  
                                       i1l2166 0702                                         i1l2158 06F3  
                                       i1l2430 000E                                         u121_20 0F45  
                                       i1l2168 0706                                         i1l2176 0716  
                                       u121_21 0F44                                         i1l2178 071A  
                                       i1l2370 0EED                                         i1l2426 0006  
                                       i1l2428 000A                                         i1l2368 0EEC  
                                       u140_20 0706                                         u140_21 0705  
                                       u141_20 071A                                         u141_21 0719  
                                       _INLVLA 038C                                         _INLVLB 038D  
                                       _INLVLC 038E                                         u153_20 000A  
                                       u153_21 0009                                         u146_20 0F50  
                                       u154_20 000E                                         u146_21 0F4F  
                                       u154_21 000D                                         u139_20 06F9  
                                       u139_21 06F8                                         u246_27 0711  
                                       _INTPPS 0E10                                         _OSCCON 0099  
                                       u207lld 006F                                         u180lld 01E0  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _TX1REG 019A                                         u191lld 02E5  
                                       u178lld 01B3                                         _TX1STA 019E  
                                       u187lld 027B                                         u197lld 0368  
                                       u189lld 02B8                         __end_of_SPI_WriteBlock 07C5  
                                 vfprintf@cfmt 00C6                                      ??___aodiv 0030  
                                    ??___aomod 0030                 __size_of_wl_module_set_rx_addr 0017  
                __end_of_wl_module_set_rx_addr 0FE6                                         _printf 0FB9  
                                       pad@buf 0032                                         dtoa@fp 0048  
                                ?_INT_CallBack 0075                                         _strlen 0FE6  
                                       fputc@c 0022                                         fputs@c 002E  
                                       fputs@i 002F                                         fputs@s 0031  
             __size_of_INT_SetInterruptHandler 0009                               __end_of_vfprintf 0757  
      INT_SetInterruptHandler@InterruptHandler 0020                              _SYSTEM_Initialize 0F81  
                      __end_of__initialization 0022                                ?_SPI_WriteBlock 0021  
                           ?_SYSTEM_Initialize 0075                                 __pcstackCOMMON 0075  
                          ??_SYSTEM_Initialize 0022                                  __end_of_fputc 06AF  
                                __end_of_fputs 077F                                  __end_of_putch 0F05  
                               ??_INT_CallBack 007A                                      ?_SPI_Open 0075  
                  __size_of_EXT_INT_Initialize 000D                                 _OPTION_REGbits 0095  
            __size_of_wl_module_write_register 001D                      ?_wl_module_write_register 0027  
           __size_of_wl_module_config_register 0013                ??_EUSART_SetOverrunErrorHandler 0022  
                                      ??_fputc 0025                      __end_of_SYSTEM_Initialize 0F91  
                                      ??_fputs 002B                                        ??_putch 0021  
                                   __pbssBANK1 00A0                           __end_of_EUSART_Write 0F3C  
                                    ISR@status 0079                                     __pmaintext 053B  
                                   __pintentry 0004                                     ??_SPI_Open 0020  
                                      ?_printf 00C8                                        ?_strlen 0020  
                                      _INT_ISR 0EEC                             __size_of_vfpfcnvrt 00DB  
                                      _OSCTUNE 0098                                        _SSP1ADD 0212  
                                      _SLRCONA 030C                                        _SLRCONB 030D  
                                      _SLRCONC 030E                                        _SSP1BUF 0211  
                     ??_EUSART_SetErrorHandler 0022              __end_of_wl_module_config_register 0FA4  
                             ??_SPI_Initialize 0020                                        ___aodiv 0188  
                                      ___aomod 028D                                      ?_vfprintf 0069  
                                      __ptext1 037A                                        __ptext2 0FCF  
                                      __ptext3 07C5                                        __ptext4 07A5  
                                      __ptext5 0F91                                        __ptext6 0F63  
                                      __ptext7 0F29                                        __ptext8 0FB9  
                                      __ptext9 0723                   __size_of_wl_module_rx_config 00E6  
                              __size_of_printf 0016                                __size_of_strlen 001A  
                                 __size_of_ISR 0039                          _OSCILLATOR_Initialize 0EF7  
                                 __size_of_abs 001C                                   __size_of_pad 0056  
                             ??_wl_module_init 0020                       ??_PIN_MANAGER_Initialize 0020  
                      _INT_SetInterruptHandler 0F20                     __size_of_SYSTEM_Initialize 0010  
                                      clrloop0 0EF2                              ?_SPI_ExchangeByte 0075  
                         end_of_initialization 0022                             ??_SPI_ExchangeByte 0020  
        __end_of_EUSART_SetOverrunErrorHandler 0F20         __size_of_EUSART_SetOverrunErrorHandler 0009  
                _EUSART_SetOverrunErrorHandler 0F17                                        fputc@fp 0024  
                                      fputs@fp 002A                           __end_of_INT_CallBack 0F56  
                            _EUSART_Initialize 077F                        wl_module_rx_config@data 0032  
                      SPI_WriteBlock@blockSize 0023                             ?_EUSART_Initialize 0075  
                            __end_of_vfpfcnvrt 053B                         i1SPI_ExchangeByte@data 0075  
         __size_ofi1_wl_module_config_register 0010                                     ??_vfprintf 006C  
                                      strlen@a 0023                                        strlen@s 0024  
                          ??_EUSART_Initialize 0022                              _spi_configuration 100D  
               wl_module_set_rx_addr@rxpipenum 002E                   wl_module_config_register@reg 0022  
                                    _SSPDATPPS 0E21                                      _SSPCLKPPS 0E20  
                  wl_module_write_register@len 0029                    wl_module_write_register@reg 002C  
                                    _TRISBbits 008D                                      _TRISCbits 008E  
                        __size_of_EUSART_Write 000A                    __size_ofi1_SPI_ExchangeByte 000D  
                             ??_SPI_WriteBlock 0025                __size_of_EUSART_SetErrorHandler 0009  
                    __end_of_EUSART_Initialize 07A5                            SPI_WriteBlock@block 0021  
                         SPI_ExchangeByte@data 0020                      __end_of_spi_configuration 1011  
                   _EUSART_DefaultErrorHandler 0000                                    vfpfcnvrt@ap 005A  
                                  vfpfcnvrt@fp 0068                                    vfpfcnvrt@ll 0060  
                                 _EUSART_Write 0F32                         ?_OSCILLATOR_Initialize 0075  
                    ??_INT_SetInterruptHandler 0022                          _wl_module_set_rx_addr 0FCF  
                               __end_of_printf 0FCF                              __size_of_SPI_Open 0059  
                               __end_of_strlen 1000                            start_initialization 0015  
                                  __end_of_ISR 0723                __size_of_PIN_MANAGER_Initialize 003B  
                                  __end_of_abs 07FE                                    __end_of_pad 066E  
                                  putch@txData 0021                   ?_INT_DefaultInterruptHandler 0075  
               ?_EUSART_SetOverrunErrorHandler 0020                 SPI_Open@spiUniqueConfiguration 0023  
                                  vfprintf@fmt 0069                     _EUSART_FramingErrorHandler 00D9  
                       _EUSART_SetErrorHandler 0F05                     __end_of_EXT_INT_Initialize 0F63  
                                     ??_printf 006E                                       ??_strlen 0022  
                                  __pbssCOMMON 0070                                      ___latbits 0002  
                                     ?_INT_ISR 0075                                  __pcstackBANK0 0020  
                                __pcstackBANK1 00C5                               ___aodiv@dividend 0028  
                        __size_of_INT_CallBack 000D                     __size_of_EUSART_Initialize 0026  
                          _wl_module_rx_config 037A                                      __pnvBANK1 00D3  
                       _PIN_MANAGER_Initialize 06AF                                      _dtoa$1180 0046  
                ??_INT_DefaultInterruptHandler 0075                                       ?___aodiv 0020  
                                     ?___aomod 0020                               ___aodiv@quotient 0033  
                       ?_wl_module_set_rx_addr 002D                   ??_INTERRUPT_InterruptManager 007A  
                     _wl_module_write_register 07C5                           ?_wl_module_rx_config 0075  
                            __size_of_vfprintf 0034                                   _INT_CallBack 0F49  
                                     _BAUD1CON 019F                                 __size_of_fputc 0041  
                               __size_of_fputs 0028                                 __size_of_putch 0007  
                   ?_wl_module_config_register 0021                   ?i1_wl_module_config_register 0076  
       EUSART_SetErrorHandler@interruptHandler 0020                                       _LATCbits 010E  
               wl_module_config_register@value 0021                                      clear_ram0 0EF1  
                            _eusartRxLastError 00A4            __size_of_INTERRUPT_InterruptManager 000F  
                                     _PIR1bits 0010                ??_EUSART_SetFramingErrorHandler 0022  
                    __size_of_SPI_ExchangeByte 000E                                       _SSP1CON1 0215  
                                     _SSP1CON2 0216              _EUSART_DefaultOverrunErrorHandler 0000  
                                     _SSP1STAT 0214                                      _vfpfcnvrt 0460  
                        ??_wl_module_rx_config 0031                                       _SPI_Open 05BF  
                wl_module_write_register@value 0027           __size_of_INT_DefaultInterruptHandler 0001  
                           SPI_WriteBlock@data 0025                               __size_of_INT_ISR 0005  
                ??i1_wl_module_config_register 0077                                     vfprintf@ap 006B  
                                   vfprintf@fp 00C5                        __size_of_SPI_Initialize 0015  
                      ??_OSCILLATOR_Initialize 0020                            _EUSART_ErrorHandler 00D5  
                             __size_of___aodiv 0105                               __size_of___aomod 00ED  
                                   ?_vfpfcnvrt 0059                                ___aodiv@divisor 0020  
                              ___aodiv@counter 0031                                     _ANSELCbits 018E  
                   __end_ofi1_SPI_ExchangeByte 0F49                                       __ptext10 0460  
                                     __ptext11 0026                                       __ptext20 0188  
                                     __ptext12 0618                                       __ptext21 0F81  
                                     __ptext13 0FE6                                       __ptext30 0F05  
                                     __ptext22 0FA4                                       __ptext14 0757  
                                     __ptext31 05BF                                       __ptext23 06AF  
                                     __ptext15 066E                                       __ptext24 0EF7  
                                     __ptext16 0EFE                                       __ptext33 0EEC  
                                     __ptext25 0F56                                       __ptext17 0F32  
                                     __ptext34 0F49                                       __ptext26 0F20  
                                     __ptext18 07E2                                       __ptext35 07FE  
                                     __ptext27 077F                                       __ptext19 028D  
                                     __ptext36 06EA                                       __ptext28 0F17  
                                     __ptext37 0F71                                       __ptext29 0F0E  
                                     __ptext38 0F3C                                   _SSP1CON1bits 0215  
                      __size_of_wl_module_init 0009                                  __size_of_main 0084  
                                __size_of_dtoa 0162                 i1wl_module_config_register@reg 0077  
                      ?_EUSART_SetErrorHandler 0020                                     _RC1STAbits 019D  
EUSART_SetOverrunErrorHandler@interruptHandler 0020                                       int$flags 007E  
                                     _vfprintf 0723             __end_of_INTERRUPT_InterruptManager 0013  
                   _INTERRUPT_InterruptManager 0004                                      printf@fmt 00C8  
        __end_of_EUSART_SetFramingErrorHandler 0F17         __size_of_EUSART_SetFramingErrorHandler 0009  
                _EUSART_SetFramingErrorHandler 0F0E                               ___aomod@dividend 0028  
                                   _INTCONbits 000B                   wl_module_set_rx_addr@address 0030  
                         _INT_InterruptHandler 00D3                             _EXT_INT_Initialize 0F56  
                                     intlevel1 0000                        ?_PIN_MANAGER_Initialize 0075  
               __end_of_EUSART_SetErrorHandler 0F0E                            ?_EXT_INT_Initialize 0075  
                   ??_wl_module_write_register 002A                        __size_of_SPI_WriteBlock 0020  
                             _SPI_ExchangeByte 0F63                        ??_wl_module_set_rx_addr 002F  
                                     printf@ap 00CE  EUSART_SetFramingErrorHandler@interruptHandler 0020  
                     ?_INT_SetInterruptHandler 0020                                ___aomod@divisor 0020  
                                  ??_vfpfcnvrt 005B                                ___aomod@counter 0031  
                                __pstringtext1 100D                                  __pstringtext2 1000  
                                __pstringtext3 0000                           ??_EXT_INT_Initialize 0022  
                                   _TX1STAbits 019E                             EUSART_Write@txData 0020  
                                 ___aodiv@sign 0032                 __end_of_PIN_MANAGER_Initialize 06EA  
                  ??_wl_module_config_register 0022                                   ___aomod@sign 0032  
